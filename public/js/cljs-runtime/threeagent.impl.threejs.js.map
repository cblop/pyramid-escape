{"version":3,"sources":["threeagent/impl/threejs.cljs"],"mappings":"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","names":["threeagent.impl.threejs/perspective-camera","fov","aspect","near","far","js/module$node_modules$three$build$three.PerspectiveCamera","threeagent.impl.threejs/point-light","c","i","d","js/module$node_modules$three$build$three.PointLight","threeagent.impl.threejs/directional-light","js/module$node_modules$three$build$three.DirectionalLight","threeagent.impl.threejs/hemisphere-light","sky-color","ground-color","intensity","js/module$node_modules$three$build$three.HemisphereLight","threeagent.impl.threejs/box-geometry","x","y","z","js/module$node_modules$three$build$three.BoxGeometry","threeagent.impl.threejs/plane-geometry","width","height","segments-width","segments-height","js/module$node_modules$three$build$three.PlaneGeometry","threeagent.impl.threejs/sphere-geometry","radius","width-seg","height-seg","js/module$node_modules$three$build$three.SphereGeometry","threeagent.impl.threejs/text-geometry","text","cfg","js/module$node_modules$three$build$three.TextGeometry","cljs.core/clj->js","threeagent.impl.threejs/mesh-basic-material","js/module$node_modules$three$build$three.MeshBasicMaterial","threeagent.impl.threejs/mesh-phong-material","js/module$node_modules$three$build$three.MeshPhongMaterial","threeagent.impl.threejs/mesh","geo","mat","js/module$node_modules$three$build$three.Mesh","threeagent.impl.threejs/object","js/module$node_modules$three$build$three.Object3D","threeagent.impl.threejs/group","js/module$node_modules$three$build$three.Group","var_args","G__26093","threeagent.impl.threejs/vec3","js/Error","p__26095","vec__26096","cljs.core.nth","js/module$node_modules$three$build$three.Vector3","threeagent.impl.threejs/arrow-helper","dir","origin","length","js/module$node_modules$three$build$three.ArrowHelper","threeagent.impl.threejs.vec3","threeagent.impl.threejs/vec3->vector","v","threeagent.impl.threejs/euler","js/module$node_modules$three$build$three.Euler","threeagent.impl.threejs/euler->vector","e","G__26101","threeagent.impl.threejs/color","s","js/module$node_modules$three$build$three.Color","r","g","b","threeagent.impl.threejs/raycaster","js/module$node_modules$three$build$three.Raycaster","threeagent.impl.threejs/world-position","obj","threeagent.impl.threejs/rotation->direction","quat","js/module$node_modules$three$build$three.Quaternion","vector","p__26117","vec__26118","threeagent.impl.threejs/set-position!","p__26121","vec__26122","threeagent.impl.threejs/set-rotation!","p__26125","vec__26126","threeagent.impl.threejs/set-scale!","threeagent.impl.threejs/add-child!","parent","child","threeagent.impl.threejs/remove-child!","threeagent.impl.threejs/remove-all-children!","iter__4564__auto__","s__26130","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4562__auto__","size__4563__auto__","cljs.core/count","b__26132","cljs.core/chunk-buffer","i__26131","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__26129","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/chunk-first"],"sourcesContent":["(ns threeagent.impl.threejs\n  (:require [\"three\" :as three]))\n\n(defn perspective-camera [fov aspect near far]\n  (new three/PerspectiveCamera fov aspect near far))\n\n(defn point-light [c i d]\n  (new three/PointLight c i d))\n\n(defn directional-light [c i]\n  (new three/DirectionalLight c i))\n\n(defn hemisphere-light [sky-color ground-color intensity]\n  (new three/HemisphereLight sky-color ground-color intensity))\n\n(defn box-geometry [x y z]\n  (new three/BoxGeometry x y z))\n\n(defn plane-geometry [width height segments-width segments-height]\n  (new three/PlaneGeometry width height segments-width segments-height))\n\n(defn sphere-geometry [radius width-seg height-seg]\n  (new three/SphereGeometry radius width-seg height-seg))\n\n(defn text-geometry [text cfg]\n  (new three/TextGeometry text (clj->js cfg)))\n\n(defn mesh-basic-material [c]\n  (new three/MeshBasicMaterial (clj->js c)))\n\n(defn mesh-phong-material [c]\n  (new three/MeshPhongMaterial (clj->js c)))\n\n(defn mesh [^js geo ^js mat]\n  (new three/Mesh geo mat))\n\n(defn object []\n  (new three/Object3D))\n\n(defn group []\n  (new three/Group))\n\n(defn vec3\n  ([[x y z]] (new three/Vector3 x y z))\n  ([x y z] (new three/Vector3 x y z))\n  ([] (new three/Vector3)))\n\n(defn arrow-helper [dir origin length]\n  (new three/ArrowHelper (vec3 dir) (vec3 origin) length))\n\n(defn vec3->vector [v] [(.-x v) (.-y v) (.-z v)])\n\n(defn euler [x y z]\n  (new three/Euler x y z \"XYZ\"))\n\n(defn euler->vector [e]\n  [(.-x e) (.-y e) (.-z e)])\n\n(defn color\n  ([s] (new three/Color s))\n  ([r g b] (new three/Color r g b)))\n\n(defn raycaster [origin dir near far]\n  (new three/Raycaster origin dir near far))\n\n(defn world-position [^js obj]\n  (when obj\n    (let [v (vec3)]\n      (.getWorldPosition obj v)\n      v)))\n\n(defn rotation->direction [^js obj]\n  (let [quat (.setFromRotationMatrix (new three/Quaternion) (.-matrixWorld obj))\n        vector ^js (vec3 0 1 0)]\n    (.applyQuaternion vector quat)\n    (.normalize vector)\n    vector))\n\n(defn set-position! [^js obj [x y z]]\n  (.set (.-position obj) x y z)\n  obj)\n\n(defn set-rotation! [^js obj [x y z]]\n  (.setRotationFromEuler obj (euler x y z))\n  obj)\n\n(defn set-scale! [^js obj [x y z]]\n  (.set (.-scale obj) x y z)\n  obj)\n\n(defn add-child! [^js parent ^js child] (.add parent child))\n\n(defn remove-child! [^js parent ^js child] (.remove parent child))\n\n(defn remove-all-children! [^js parent]\n  (for [c (.-children parent)]\n    (remove-child! parent c))\n  parent)\n"]}