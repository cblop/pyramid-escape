shadow$provide.module$node_modules$three$build$three=function(global$jscomp$0,require,module,exports){(function(global,factory){"object"===typeof exports&&"undefined"!==typeof module?factory(exports):"function"===typeof define&&define.amd?define(["exports"],factory):(global=global||self,factory(global.THREE={}))})(this,function(exports){function EventDispatcher(){}function Vector2(x,y){this.x=x||0;this.y=y||0}function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}
function Quaternion(x,y,z,w){this._x=x||0;this._y=y||0;this._z=z||0;this._w=void 0!==w?w:1}function Vector3(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0}function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function Texture(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){Object.defineProperty(this,"id",{value:textureId++});this.uuid=_Math.generateUUID();this.name=
"";this.image=void 0!==image?image:Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==mapping?mapping:Texture.DEFAULT_MAPPING;this.wrapS=void 0!==wrapS?wrapS:1001;this.wrapT=void 0!==wrapT?wrapT:1001;this.magFilter=void 0!==magFilter?magFilter:1006;this.minFilter=void 0!==minFilter?minFilter:1008;this.anisotropy=void 0!==anisotropy?anisotropy:1;this.format=void 0!==format?format:1023;this.type=void 0!==type?type:1009;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,
0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new Matrix3;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==encoding?encoding:3E3;this.version=0;this.onUpdate=null}function Vector4(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=void 0!==w?w:1}function WebGLRenderTarget(width,height,options){this.width=width;this.height=height;this.scissor=new Vector4(0,0,width,height);this.scissorTest=!1;this.viewport=new Vector4(0,0,width,
height);options=options||{};this.texture=new Texture(void 0,void 0,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.generateMipmaps=void 0!==options.generateMipmaps?options.generateMipmaps:!1;this.texture.minFilter=void 0!==options.minFilter?options.minFilter:1006;this.depthBuffer=void 0!==options.depthBuffer?options.depthBuffer:!0;this.stencilBuffer=void 0!==options.stencilBuffer?options.stencilBuffer:!0;
this.depthTexture=void 0!==options.depthTexture?options.depthTexture:null}function WebGLMultisampleRenderTarget(width,height,options){WebGLRenderTarget.call(this,width,height,options);this.samples=4}function WebGLRenderTargetCube(width,height,options){WebGLRenderTarget.call(this,width,height,options)}function DataTexture(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);
this.image={data:data,width:width,height:height};this.magFilter=void 0!==magFilter?magFilter:1003;this.minFilter=void 0!==minFilter?minFilter:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Box3(min,max){this.min=void 0!==min?min:new Vector3(Infinity,Infinity,Infinity);this.max=void 0!==max?max:new Vector3(-Infinity,-Infinity,-Infinity)}function Sphere(center,radius){this.center=void 0!==center?center:new Vector3;this.radius=void 0!==radius?radius:0}function Plane(normal,constant){this.normal=
void 0!==normal?normal:new Vector3(1,0,0);this.constant=void 0!==constant?constant:0}function Frustum(p0,p1,p2,p3,p4,p5){this.planes=[void 0!==p0?p0:new Plane,void 0!==p1?p1:new Plane,void 0!==p2?p2:new Plane,void 0!==p3?p3:new Plane,void 0!==p4?p4:new Plane,void 0!==p5?p5:new Plane]}function cloneUniforms(src){var dst={},u;for(u in src){dst[u]={};for(var p in src[u]){var property=src[u][p];property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||
property.isVector4||property.isTexture)?dst[u][p]=property.clone():Array.isArray(property)?dst[u][p]=property.slice():dst[u][p]=property}}return dst}function mergeUniforms(uniforms){for(var merged={},u=0;u<uniforms.length;u++){var tmp=cloneUniforms(uniforms[u]),p;for(p in tmp)merged[p]=tmp[p]}return merged}function Color(r,g,b){return void 0===g&&void 0===b?this.set(r):this.setRGB(r,g,b)}function WebGLAnimation(){function onAnimationFrame(time,frame){!1!==isAnimating&&(animationLoop(time,frame),context.requestAnimationFrame(onAnimationFrame))}
var context=null,isAnimating=!1,animationLoop=null;return{start:function(){!0!==isAnimating&&null!==animationLoop&&(context.requestAnimationFrame(onAnimationFrame),isAnimating=!0)},stop:function(){isAnimating=!1},setAnimationLoop:function(callback){animationLoop=callback},setContext:function(value){context=value}}}function WebGLAttributes(gl){var buffers=new WeakMap;return{get:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);return buffers.get(attribute)},remove:function(attribute){attribute.isInterleavedBufferAttribute&&
(attribute=attribute.data);var data=buffers.get(attribute);data&&(gl.deleteBuffer(data.buffer),buffers.delete(attribute))},update:function(attribute,bufferType){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);var data=buffers.get(attribute);if(void 0===data){data=buffers.set;var JSCompiler_temp_const=attribute,array=attribute.array,usage=attribute.dynamic?35048:35044,buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();
bufferType=5126;array instanceof Float32Array?bufferType=5126:array instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):array instanceof Uint16Array?bufferType=5123:array instanceof Int16Array?bufferType=5122:array instanceof Uint32Array?bufferType=5125:array instanceof Int32Array?bufferType=5124:array instanceof Int8Array?bufferType=5120:array instanceof Uint8Array&&(bufferType=5121);data.call(buffers,JSCompiler_temp_const,{buffer:buffer,type:bufferType,
bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version})}else data.version<attribute.version&&(JSCompiler_temp_const=attribute,array=JSCompiler_temp_const.array,buffer=JSCompiler_temp_const.updateRange,gl.bindBuffer(bufferType,data.buffer),!1===JSCompiler_temp_const.dynamic?gl.bufferData(bufferType,array,35044):-1===buffer.count?gl.bufferSubData(bufferType,0,array):0===buffer.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):
(gl.bufferSubData(bufferType,buffer.offset*array.BYTES_PER_ELEMENT,array.subarray(buffer.offset,buffer.offset+buffer.count)),buffer.count=-1),data.version=attribute.version)}}}function Face3(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal&&normal.isVector3?normal:new Vector3;this.vertexNormals=Array.isArray(normal)?normal:[];this.color=color&&color.isColor?color:new Color;this.vertexColors=Array.isArray(color)?color:[];this.materialIndex=void 0!==materialIndex?materialIndex:
0}function Euler(x,y,z,order){this._x=x||0;this._y=y||0;this._z=z||0;this._order=order||Euler.DefaultOrder}function Layers(){this.mask=1}function Object3D(){Object.defineProperty(this,"id",{value:object3DId++});this.uuid=_Math.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();var position=new Vector3,rotation=new Euler,quaternion=new Quaternion,scale=new Vector3(1,1,1);rotation.onChange(function(){quaternion.setFromEuler(rotation,
!1)});quaternion.onChange(function(){rotation.setFromQuaternion(quaternion,void 0,!1)});Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:position},rotation:{configurable:!0,enumerable:!0,value:rotation},quaternion:{configurable:!0,enumerable:!0,value:quaternion},scale:{configurable:!0,enumerable:!0,value:scale},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}});this.matrix=new Matrix4;this.matrixWorld=new Matrix4;this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;
this.matrixWorldNeedsUpdate=!1;this.layers=new Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}}function Geometry(){Object.defineProperty(this,"id",{value:geometryId+=2});this.uuid=_Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=
null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="";this.array=array;this.itemSize=itemSize;this.count=void 0!==array?array.length/itemSize:0;this.normalized=!0===normalized;this.dynamic=!1;this.updateRange={offset:0,
count:-1};this.version=0}function Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized)}function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized)}function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized)}function Int16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),
itemSize,normalized)}function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized)}function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized)}function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized)}function Float32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),
itemSize,normalized)}function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized)}function DirectGeometry(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function arrayMax(array){if(0===
array.length)return-Infinity;for(var max=array[0],i=1,l=array.length;i<l;++i)array[i]>max&&(max=array[i]);return max}function BufferGeometry(){Object.defineProperty(this,"id",{value:bufferGeometryId+=2});this.uuid=_Math.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity};this.userData={}}function BoxGeometry(width,height,depth,widthSegments,
heightSegments,depthSegments){Geometry.call(this);this.type="BoxGeometry";this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};this.fromBufferGeometry(new BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments));this.mergeVertices()}function BoxBufferGeometry(width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,depthSegments){function buildPlane(u,v,w,udir,vdir,width,
height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX,segmentHeight=height/gridY,widthHalf=width/2,heightHalf=height/2,depthHalf=depth/2;height=gridX+1;var gridY1=gridY+1,groupCount=width=0,ix,iy,vector=new Vector3;for(iy=0;iy<gridY1;iy++){var y=iy*segmentHeight-heightHalf;for(ix=0;ix<height;ix++)vector[u]=(ix*segmentWidth-widthHalf)*udir,vector[v]=y*vdir,vector[w]=depthHalf,vertices.push(vector.x,vector.y,vector.z),vector[u]=0,vector[v]=0,vector[w]=0<depth?1:-1,normals.push(vector.x,
vector.y,vector.z),uvs.push(ix/gridX),uvs.push(1-iy/gridY),width+=1}for(iy=0;iy<gridY;iy++)for(ix=0;ix<gridX;ix++)u=numberOfVertices+ix+height*(iy+1),v=numberOfVertices+(ix+1)+height*(iy+1),w=numberOfVertices+(ix+1)+height*iy,indices.push(numberOfVertices+ix+height*iy,u,w),indices.push(u,v,w),groupCount+=6;scope.addGroup(groupStart,groupCount,materialIndex);groupStart+=groupCount;numberOfVertices+=width}BufferGeometry.call(this);this.type="BoxBufferGeometry";this.parameters={width:width$jscomp$0,
height:height$jscomp$0,depth:depth$jscomp$0,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=this;width$jscomp$0=width$jscomp$0||1;height$jscomp$0=height$jscomp$0||1;depth$jscomp$0=depth$jscomp$0||1;widthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||1;depthSegments=Math.floor(depthSegments)||1;var indices=[],vertices=[],normals=[],uvs=[],numberOfVertices=0,groupStart=0;buildPlane("z","y","x",-1,-1,depth$jscomp$0,height$jscomp$0,
width$jscomp$0,depthSegments,heightSegments,0);buildPlane("z","y","x",1,-1,depth$jscomp$0,height$jscomp$0,-width$jscomp$0,depthSegments,heightSegments,1);buildPlane("x","z","y",1,1,width$jscomp$0,depth$jscomp$0,height$jscomp$0,widthSegments,depthSegments,2);buildPlane("x","z","y",1,-1,width$jscomp$0,depth$jscomp$0,-height$jscomp$0,widthSegments,depthSegments,3);buildPlane("x","y","z",1,-1,width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,4);buildPlane("x","y","z",-1,-1,width$jscomp$0,
height$jscomp$0,-depth$jscomp$0,widthSegments,heightSegments,5);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function PlaneGeometry(width,height,widthSegments,heightSegments){Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};this.fromBufferGeometry(new PlaneBufferGeometry(width,
height,widthSegments,heightSegments));this.mergeVertices()}function PlaneBufferGeometry(width,height,widthSegments,heightSegments){BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};width=width||1;height=height||1;var width_half=width/2,height_half=height/2;widthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||1;var gridX1=widthSegments+1,gridY1=heightSegments+
1,segment_width=width/widthSegments,segment_height=height/heightSegments,indices=[],vertices=[],normals=[],uvs=[];for(width=0;width<gridY1;width++){var y=width*segment_height-height_half;for(height=0;height<gridX1;height++)vertices.push(height*segment_width-width_half,-y,0),normals.push(0,0,1),uvs.push(height/widthSegments),uvs.push(1-width/heightSegments)}for(width=0;width<heightSegments;width++)for(height=0;height<widthSegments;height++)width_half=height+gridX1*(width+1),height_half=height+1+gridX1*
(width+1),gridY1=height+1+gridX1*width,indices.push(height+gridX1*width,width_half,gridY1),indices.push(width_half,height_half,gridY1);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function Material(){Object.defineProperty(this,"id",{value:materialId++});this.uuid=_Math.generateUUID();this.name="";this.type="Material";this.lights=
this.fog=!0;this.blending=1;this.side=0;this.vertexTangents=this.flatShading=!1;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.shadowSide=null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=
0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.visible=!0;this.userData={};this.needsUpdate=!0}function ShaderMaterial(parameters){Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n\tgl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor \x3d vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=
this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.uniformsNeedUpdate=!1;void 0!==parameters&&(void 0!==parameters.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(parameters))}function Ray(origin,direction){this.origin=
void 0!==origin?origin:new Vector3;this.direction=void 0!==direction?direction:new Vector3}function Triangle(a,b,c){this.a=void 0!==a?a:new Vector3;this.b=void 0!==b?b:new Vector3;this.c=void 0!==c?c:new Vector3}function MeshBasicMaterial(parameters){Material.call(this);this.type="MeshBasicMaterial";this.color=new Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=
1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.lights=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function Mesh(geometry,material){Object3D.call(this);this.type="Mesh";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?material:new MeshBasicMaterial({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function WebGLBackground(renderer,state,
objects,premultipliedAlpha){function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha)}var clearColor=new Color(0),clearAlpha=0,planeMesh,boxMesh,currentBackground=null,currentBackgroundVersion=0;return{getClearColor:function(){return clearColor},setClearColor:function(color,alpha){clearColor.set(color);clearAlpha=void 0!==alpha?alpha:1;setClear(clearColor,clearAlpha)},getClearAlpha:function(){return clearAlpha},setClearAlpha:function(alpha){clearAlpha=
alpha;setClear(clearColor,clearAlpha)},render:function(renderList,scene,camera$jscomp$0,forceClear){scene=scene.background;null===scene?(setClear(clearColor,clearAlpha),currentBackground=null,currentBackgroundVersion=0):scene&&scene.isColor&&(setClear(scene,1),forceClear=!0,currentBackground=null,currentBackgroundVersion=0);(renderer.autoClear||forceClear)&&renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);if(scene&&(scene.isCubeTexture||scene.isWebGLRenderTargetCube)){void 0===
boxMesh&&(boxMesh=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),boxMesh.geometry.removeAttribute("normal"),boxMesh.geometry.removeAttribute("uv"),boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld)},Object.defineProperty(boxMesh.material,
"map",{get:function(){return this.uniforms.tCube.value}}),objects.update(boxMesh));forceClear=scene.isWebGLRenderTargetCube?scene.texture:scene;boxMesh.material.uniforms.tCube.value=forceClear;boxMesh.material.uniforms.tFlip.value=scene.isWebGLRenderTargetCube?1:-1;if(currentBackground!==scene||currentBackgroundVersion!==forceClear.version)boxMesh.material.needsUpdate=!0,currentBackground=scene,currentBackgroundVersion=forceClear.version;renderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,
0,0,null)}else if(scene&&scene.isTexture){void 0===planeMesh&&(planeMesh=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),planeMesh.geometry.removeAttribute("normal"),Object.defineProperty(planeMesh.material,"map",{get:function(){return this.uniforms.t2D.value}}),objects.update(planeMesh));
planeMesh.material.uniforms.t2D.value=scene;!0===scene.matrixAutoUpdate&&scene.updateMatrix();planeMesh.material.uniforms.uvTransform.value.copy(scene.matrix);if(currentBackground!==scene||currentBackgroundVersion!==scene.version)planeMesh.material.needsUpdate=!0,currentBackground=scene,currentBackgroundVersion=scene.version;renderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null)}}}}function WebGLBufferRenderer(gl,extensions,info,capabilities){var mode;this.setMode=function(value){mode=
value};this.render=function(start,count){gl.drawArrays(mode,start,count);info.update(count,mode)};this.renderInstances=function(geometry,start,count){if(capabilities.isWebGL2)var extension=gl;else if(extension=extensions.get("ANGLE_instanced_arrays"),null===extension){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}extension[capabilities.isWebGL2?"drawArraysInstanced":"drawArraysInstancedANGLE"](mode,
start,count,geometry.maxInstancedCount);info.update(count,mode,geometry.maxInstancedCount)}}function WebGLCapabilities(gl,extensions,parameters){function getMaxPrecision(precision){if("highp"===precision){if(0<gl.getShaderPrecisionFormat(35633,36338).precision&&0<gl.getShaderPrecisionFormat(35632,36338).precision)return"highp";precision="mediump"}return"mediump"===precision&&0<gl.getShaderPrecisionFormat(35633,36337).precision&&0<gl.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}
var maxAnisotropy,isWebGL2="undefined"!==typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext,precision$jscomp$0=void 0!==parameters.precision?parameters.precision:"highp",maxPrecision=getMaxPrecision(precision$jscomp$0);maxPrecision!==precision$jscomp$0&&(console.warn("THREE.WebGLRenderer:",precision$jscomp$0,"not supported, using",maxPrecision,"instead."),precision$jscomp$0=maxPrecision);parameters=!0===parameters.logarithmicDepthBuffer;maxPrecision=gl.getParameter(34930);var maxVertexTextures=
gl.getParameter(35660),maxTextureSize=gl.getParameter(3379),maxCubemapSize=gl.getParameter(34076),maxAttributes=gl.getParameter(34921),maxVertexUniforms=gl.getParameter(36347),maxVaryings=gl.getParameter(36348),maxFragmentUniforms=gl.getParameter(36349),vertexTextures=0<maxVertexTextures,floatFragmentTextures=isWebGL2||!!extensions.get("OES_texture_float"),floatVertexTextures=vertexTextures&&floatFragmentTextures,maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,getMaxAnisotropy:function(){if(void 0!==
maxAnisotropy)return maxAnisotropy;var extension=extensions.get("EXT_texture_filter_anisotropic");return maxAnisotropy=null!==extension?gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:getMaxPrecision,precision:precision$jscomp$0,logarithmicDepthBuffer:parameters,maxTextures:maxPrecision,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,
maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples}}function WebGLClipping(){function resetGlobalState(){uniform.value!==globalState&&(uniform.value=globalState,uniform.needsUpdate=0<numGlobalPlanes);scope.numPlanes=numGlobalPlanes;scope.numIntersection=0}function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=null!==planes?planes.length:0,dstArray=null;if(0!==
nPlanes){dstArray=uniform.value;if(!0!==skipTransform||null===dstArray){skipTransform=dstOffset+4*nPlanes;camera=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(camera);if(null===dstArray||dstArray.length<skipTransform)dstArray=new Float32Array(skipTransform);for(skipTransform=0;skipTransform!==nPlanes;++skipTransform,dstOffset+=4)plane.copy(planes[skipTransform]).applyMatrix4(camera,viewNormalMatrix),plane.normal.toArray(dstArray,dstOffset),dstArray[dstOffset+3]=plane.constant}uniform.value=
dstArray;uniform.needsUpdate=!0}scope.numPlanes=nPlanes;return dstArray}var scope=this,globalState=null,numGlobalPlanes=0,localClippingEnabled=!1,renderingShadows=!1,plane=new Plane,viewNormalMatrix=new Matrix3,uniform={value:null,needsUpdate:!1};this.uniform=uniform;this.numIntersection=this.numPlanes=0;this.init=function(planes,enableLocalClipping,camera){var enabled=0!==planes.length||enableLocalClipping||0!==numGlobalPlanes||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=
projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled};this.beginShadows=function(){renderingShadows=!0;projectPlanes(null)};this.endShadows=function(){renderingShadows=!1;resetGlobalState()};this.setState=function(planes,clipIntersection,clipShadows,camera,cache,fromCache){if(!localClippingEnabled||null===planes||0===planes.length||renderingShadows&&!clipShadows)renderingShadows?projectPlanes(null):resetGlobalState();else{clipShadows=renderingShadows?0:numGlobalPlanes;var lGlobal=
4*clipShadows,dstArray=cache.clippingState||null;uniform.value=dstArray;dstArray=projectPlanes(planes,camera,lGlobal,fromCache);for(planes=0;planes!==lGlobal;++planes)dstArray[planes]=globalState[planes];cache.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=clipShadows}}}function WebGLExtensions(gl){var extensions={};return{get:function(name){if(void 0!==extensions[name])return extensions[name];switch(name){case "WEBGL_depth_texture":var extension=gl.getExtension("WEBGL_depth_texture")||
gl.getExtension("MOZ_WEBGL_depth_texture")||gl.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":extension=gl.getExtension("EXT_texture_filter_anisotropic")||gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":extension=gl.getExtension("WEBGL_compressed_texture_s3tc")||gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
break;case "WEBGL_compressed_texture_pvrtc":extension=gl.getExtension("WEBGL_compressed_texture_pvrtc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:extension=gl.getExtension(name)}null===extension&&console.warn("THREE.WebGLRenderer: "+name+" extension not supported.");return extensions[name]=extension}}}function WebGLGeometries(gl,attributes,info){function onGeometryDispose(event){var geometry=event.target;event=geometries[geometry.id];null!==event.index&&attributes.remove(event.index);
for(var name in event.attributes)attributes.remove(event.attributes[name]);geometry.removeEventListener("dispose",onGeometryDispose);delete geometries[geometry.id];if(name=wireframeAttributes[event.id])attributes.remove(name),delete wireframeAttributes[event.id];info.memory.geometries--}var geometries={},wireframeAttributes={};return{get:function(object,geometry){var buffergeometry=geometries[geometry.id];if(buffergeometry)return buffergeometry;geometry.addEventListener("dispose",onGeometryDispose);
geometry.isBufferGeometry?buffergeometry=geometry:geometry.isGeometry&&(void 0===geometry._bufferGeometry&&(geometry._bufferGeometry=(new BufferGeometry).setFromObject(object)),buffergeometry=geometry._bufferGeometry);geometries[geometry.id]=buffergeometry;info.memory.geometries++;return buffergeometry},update:function(geometry){var index=geometry.index,geometryAttributes=geometry.attributes;null!==index&&attributes.update(index,34963);for(var name in geometryAttributes)attributes.update(geometryAttributes[name],
34962);geometry=geometry.morphAttributes;for(name in geometry){index=geometry[name];geometryAttributes=0;for(var l=index.length;geometryAttributes<l;geometryAttributes++)attributes.update(index[geometryAttributes],34962)}},getWireframeAttribute:function(geometry){var attribute=wireframeAttributes[geometry.id];if(attribute)return attribute;attribute=[];var geometryIndex=geometry.index,geometryAttributes=geometry.attributes;if(null!==geometryIndex){geometryIndex=geometryIndex.array;geometryAttributes=
0;for(var l=geometryIndex.length;geometryAttributes<l;geometryAttributes+=3){var a=geometryIndex[geometryAttributes+0],b=geometryIndex[geometryAttributes+1],c=geometryIndex[geometryAttributes+2];attribute.push(a,b,b,c,c,a)}}else for(geometryIndex=geometryAttributes.position.array,geometryAttributes=0,l=geometryIndex.length/3-1;geometryAttributes<l;geometryAttributes+=3)a=geometryAttributes+0,b=geometryAttributes+1,c=geometryAttributes+2,attribute.push(a,b,b,c,c,a);attribute=new (65535<arrayMax(attribute)?
Uint32BufferAttribute:Uint16BufferAttribute)(attribute,1);attributes.update(attribute,34963);return wireframeAttributes[geometry.id]=attribute}}}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){var mode,type,bytesPerElement;this.setMode=function(value){mode=value};this.setIndex=function(value){type=value.type;bytesPerElement=value.bytesPerElement};this.render=function(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode)};this.renderInstances=
function(geometry,start,count){if(capabilities.isWebGL2)var extension=gl;else if(extension=extensions.get("ANGLE_instanced_arrays"),null===extension){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}extension[capabilities.isWebGL2?"drawElementsInstanced":"drawElementsInstancedANGLE"](mode,count,type,start*bytesPerElement,geometry.maxInstancedCount);info.update(count,mode,geometry.maxInstancedCount)}}
function WebGLInfo(gl){var render={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:render,programs:null,autoReset:!0,reset:function(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0},update:function(count,mode,instanceCount){instanceCount=instanceCount||1;render.calls++;switch(mode){case 4:render.triangles+=count/3*instanceCount;break;case 5:case 6:render.triangles+=instanceCount*(count-2);break;case 1:render.lines+=count/
2*instanceCount;break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",mode)}}}}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1])}function WebGLMorphtargets(gl){var influencesList={},morphInfluences=new Float32Array(8);return{update:function(object,geometry,material,program){var objectInfluences=object.morphTargetInfluences,
length=objectInfluences.length;object=influencesList[geometry.id];if(void 0===object){object=[];for(var i=0;i<length;i++)object[i]=[i,0];influencesList[geometry.id]=object}var morphTargets=material.morphTargets&&geometry.morphAttributes.position;material=material.morphNormals&&geometry.morphAttributes.normal;for(i=0;i<length;i++){var influence=object[i];0!==influence[1]&&(morphTargets&&geometry.removeAttribute("morphTarget"+i),material&&geometry.removeAttribute("morphNormal"+i))}for(i=0;i<length;i++)influence=
object[i],influence[0]=i,influence[1]=objectInfluences[i];object.sort(absNumericalSort);for(i=0;8>i;i++){if(influence=object[i])if(objectInfluences=influence[0],length=influence[1]){morphTargets&&geometry.addAttribute("morphTarget"+i,morphTargets[objectInfluences]);material&&geometry.addAttribute("morphNormal"+i,material[objectInfluences]);morphInfluences[i]=length;continue}morphInfluences[i]=0}program.getUniforms().setValue(gl,"morphTargetInfluences",morphInfluences)}}}function WebGLObjects(geometries,
info){var updateList={};return{update:function(object){var frame=info.render.frame,geometry=object.geometry,buffergeometry=geometries.get(object,geometry);updateList[buffergeometry.id]!==frame&&(geometry.isGeometry&&buffergeometry.updateFromObject(object),geometries.update(buffergeometry),updateList[buffergeometry.id]=frame);return buffergeometry},dispose:function(){updateList={}}}}function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=void 0!==
images?images:[];Texture.call(this,images,void 0!==mapping?mapping:301,wrapS,wrapT,magFilter,minFilter,void 0!==format?format:1022,type,anisotropy,encoding);this.flipY=!1}function DataTexture3D(data,width,height,depth){Texture.call(this,null);this.image={data:data,width:width,height:height,depth:depth};this.minFilter=this.magFilter=1003;this.wrapR=1001;this.flipY=this.generateMipmaps=!1}function flatten(array,nBlocks,blockSize){var firstElem=array[0];if(0>=firstElem||0<firstElem)return array;var n=
nBlocks*blockSize,r=arrayCacheF32[n];void 0===r&&(r=new Float32Array(n),arrayCacheF32[n]=r);if(0!==nBlocks)for(firstElem.toArray(r,0),firstElem=1,n=0;firstElem!==nBlocks;++firstElem)n+=blockSize,array[firstElem].toArray(r,n);return r}function arraysEqual(a,b){if(a.length!==b.length)return!1;for(var i=0,l=a.length;i<l;i++)if(a[i]!==b[i])return!1;return!0}function copyArray(a,b){for(var i=0,l=b.length;i<l;i++)a[i]=b[i]}function allocTexUnits(renderer,n){var r=arrayCacheI32[n];void 0===r&&(r=new Int32Array(n),
arrayCacheI32[n]=r);for(var i=0;i!==n;++i)r[i]=renderer.allocTextureUnit();return r}function setValue1f(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1f(this.addr,v),cache[0]=v)}function setValue1i(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1i(this.addr,v),cache[0]=v)}function setValue2fv(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y)gl.uniform2f(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y}else arraysEqual(cache,v)||(gl.uniform2fv(this.addr,v),copyArray(cache,
v))}function setValue3fv(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z)gl.uniform3f(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z}else if(void 0!==v.r){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b)gl.uniform3f(this.addr,v.r,v.g,v.b),cache[0]=v.r,cache[1]=v.g,cache[2]=v.b}else arraysEqual(cache,v)||(gl.uniform3fv(this.addr,v),copyArray(cache,v))}function setValue4fv(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==
v.y||cache[2]!==v.z||cache[3]!==v.w)gl.uniform4f(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w}else arraysEqual(cache,v)||(gl.uniform4fv(this.addr,v),copyArray(cache,v))}function setValue2fm(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix2fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat2array.set(elements),gl.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(cache,elements))}function setValue3fm(gl,
v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix3fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat3array.set(elements),gl.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(cache,elements))}function setValue4fm(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix4fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat4array.set(elements),gl.uniformMatrix4fv(this.addr,
!1,mat4array),copyArray(cache,elements))}function setValueT1(gl,v,renderer){var cache=this.cache,unit=renderer.allocTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);renderer.setTexture2D(v||emptyTexture,unit)}function setValueT3D1(gl,v,renderer){var cache=this.cache,unit=renderer.allocTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);renderer.setTexture3D(v||emptyTexture3d,unit)}function setValueT6(gl,v,renderer){var cache=this.cache,unit=renderer.allocTextureUnit();
cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);renderer.setTextureCube(v||emptyCubeTexture,unit)}function setValue2iv(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform2iv(this.addr,v),copyArray(cache,v))}function setValue3iv(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform3iv(this.addr,v),copyArray(cache,v))}function setValue4iv(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform4iv(this.addr,v),copyArray(cache,v))}function getSingularSetter(type){switch(type){case 5126:return setValue1f;
case 35664:return setValue2fv;case 35665:return setValue3fv;case 35666:return setValue4fv;case 35674:return setValue2fm;case 35675:return setValue3fm;case 35676:return setValue4fm;case 35678:case 36198:return setValueT1;case 35679:return setValueT3D1;case 35680:return setValueT6;case 5124:case 35670:return setValue1i;case 35667:case 35671:return setValue2iv;case 35668:case 35672:return setValue3iv;case 35669:case 35673:return setValue4iv}}function setValue1fv(gl,v){var cache=this.cache;arraysEqual(cache,
v)||(gl.uniform1fv(this.addr,v),copyArray(cache,v))}function setValue1iv(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform1iv(this.addr,v),copyArray(cache,v))}function setValueV2a(gl,v){var cache=this.cache;v=flatten(v,this.size,2);arraysEqual(cache,v)||(gl.uniform2fv(this.addr,v),this.updateCache(v))}function setValueV3a(gl,v){var cache=this.cache;v=flatten(v,this.size,3);arraysEqual(cache,v)||(gl.uniform3fv(this.addr,v),this.updateCache(v))}function setValueV4a(gl,v){var cache=this.cache;
v=flatten(v,this.size,4);arraysEqual(cache,v)||(gl.uniform4fv(this.addr,v),this.updateCache(v))}function setValueM2a(gl,v){var cache=this.cache;v=flatten(v,this.size,4);arraysEqual(cache,v)||(gl.uniformMatrix2fv(this.addr,!1,v),this.updateCache(v))}function setValueM3a(gl,v){var cache=this.cache;v=flatten(v,this.size,9);arraysEqual(cache,v)||(gl.uniformMatrix3fv(this.addr,!1,v),this.updateCache(v))}function setValueM4a(gl,v){var cache=this.cache;v=flatten(v,this.size,16);arraysEqual(cache,v)||(gl.uniformMatrix4fv(this.addr,
!1,v),this.updateCache(v))}function setValueT1a(gl,v,renderer){var cache=this.cache,n=v.length,units=allocTexUnits(renderer,n);!1===arraysEqual(cache,units)&&(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)renderer.setTexture2D(v[gl]||emptyTexture,units[gl])}function setValueT6a(gl,v,renderer){var cache=this.cache,n=v.length,units=allocTexUnits(renderer,n);!1===arraysEqual(cache,units)&&(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)renderer.setTextureCube(v[gl]||
emptyCubeTexture,units[gl])}function getPureArraySetter(type){switch(type){case 5126:return setValue1fv;case 35664:return setValueV2a;case 35665:return setValueV3a;case 35666:return setValueV4a;case 35674:return setValueM2a;case 35675:return setValueM3a;case 35676:return setValueM4a;case 35678:return setValueT1a;case 35680:return setValueT6a;case 5124:case 35670:return setValue1iv;case 35667:case 35671:return setValue2iv;case 35668:case 35672:return setValue3iv;case 35669:case 35673:return setValue4iv}}
function SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type)}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type)}function StructuredUniform(id){this.id=id;this.seq=[];this.map={}}function WebGLUniforms(gl,program,renderer){this.seq=[];this.map={};this.renderer=renderer;renderer=gl.getProgramParameter(program,35718);for(var i=
0;i<renderer;++i){var info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name),container=this,path=info.name,pathLength=path.length;for(RePathPart.lastIndex=0;;){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex,id=match[1],subscript=match[3];"]"===match[2]&&(id|=0);if(void 0===subscript||"["===subscript&&matchEnd+2===pathLength){path=container;info=void 0===subscript?new SingleUniform(id,info,addr):new PureArrayUniform(id,info,addr);path.seq.push(info);path.map[info.id]=
info;break}else subscript=container.map[id],void 0===subscript&&(subscript=new StructuredUniform(id),id=container,container=subscript,id.seq.push(container),id.map[container.id]=container),container=subscript}}}function WebGLShader(gl,type,string){var shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);!1===gl.getShaderParameter(shader,35713)&&console.error("THREE.WebGLShader: Shader couldn't compile.");if(""!==gl.getShaderInfoLog(shader)){var JSCompiler_temp_const=
console,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.warn;gl=gl.getShaderInfoLog(shader);string=string.split("\n");for(var i=0;i<string.length;i++)string[i]=i+1+": "+string[i];string=string.join("\n");JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,"THREE.WebGLShader: gl.getShaderInfoLog()",35633===type?"vertex":"fragment",gl,string)}return shader}function getEncodingComponents(encoding){switch(encoding){case 3E3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];
case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+encoding);}}function getTexelDecodingFunction(functionName,encoding){encoding=getEncodingComponents(encoding);return"vec4 "+functionName+"( vec4 value ) { return "+encoding[0]+"ToLinear"+encoding[1]+"; }"}function getTexelEncodingFunction(functionName,
encoding){encoding=getEncodingComponents(encoding);return"vec4 "+functionName+"( vec4 value ) { return LinearTo"+encoding[0]+encoding[1]+"; }"}function getToneMappingFunction(functionName,toneMapping){switch(toneMapping){case 1:toneMapping="Linear";break;case 2:toneMapping="Reinhard";break;case 3:toneMapping="Uncharted2";break;case 4:toneMapping="OptimizedCineon";break;case 5:toneMapping="ACESFilmic";break;default:throw Error("unsupported toneMapping: "+toneMapping);}return"vec3 "+functionName+"( vec3 color ) { return "+
toneMapping+"ToneMapping( color ); }"}function generateExtensions(extensions,parameters,rendererExtensions){extensions=extensions||{};return[extensions.derivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.normalMap&&!parameters.objectSpaceNormalMap||parameters.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(extensions.fragDepth||parameters.logarithmicDepthBuffer)&&rendererExtensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",extensions.drawBuffers&&
rendererExtensions.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(extensions.shaderTextureLOD||parameters.envMap)&&rendererExtensions.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(defines){var chunks=[],name;for(name in defines){var value=defines[name];!1!==value&&chunks.push("#define "+name+" "+value)}return chunks.join("\n")}function filterEmptyLine(string){return""!==string}
function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights)}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-
parameters.numClipIntersection)}function parseIncludes(string){return string.replace(/^[ \t]*#include +<([\w\d./]+)>/gm,function(match,include){match=ShaderChunk[include];if(void 0===match)throw Error("Can not resolve #include \x3c"+include+"\x3e");return parseIncludes(match)})}function unrollLoops(string){return string.replace(/#pragma unroll_loop[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(match,start,end,snippet){match="";for(start=parseInt(start);start<parseInt(end);start++)match+=
snippet.replace(/\[ i \]/g,"[ "+start+" ]");return match})}function WebGLProgram(renderer,extensions,code,material,shader,parameters,capabilities){var gl=renderer.context,defines=material.defines,vertexShader=shader.vertexShader,fragmentShader=shader.fragmentShader,shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";1===parameters.shadowMapType?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF":2===parameters.shadowMapType&&(shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT");var envMapTypeDefine="ENVMAP_TYPE_CUBE",envMapModeDefine=
"ENVMAP_MODE_REFLECTION",envMapBlendingDefine="ENVMAP_BLENDING_MULTIPLY";if(parameters.envMap){switch(material.envMap.mapping){case 301:case 302:envMapTypeDefine="ENVMAP_TYPE_CUBE";break;case 306:case 307:envMapTypeDefine="ENVMAP_TYPE_CUBE_UV";break;case 303:case 304:envMapTypeDefine="ENVMAP_TYPE_EQUIREC";break;case 305:envMapTypeDefine="ENVMAP_TYPE_SPHERE"}switch(material.envMap.mapping){case 302:case 304:envMapModeDefine="ENVMAP_MODE_REFRACTION"}switch(material.combine){case 0:envMapBlendingDefine=
"ENVMAP_BLENDING_MULTIPLY";break;case 1:envMapBlendingDefine="ENVMAP_BLENDING_MIX";break;case 2:envMapBlendingDefine="ENVMAP_BLENDING_ADD"}}var gammaFactorDefine=0<renderer.gammaFactor?renderer.gammaFactor:1,customExtensions=capabilities.isWebGL2?"":generateExtensions(material.extensions,parameters,extensions),customDefines=generateDefines(defines),program=gl.createProgram();material.isRawShaderMaterial?(defines=[customDefines].filter(filterEmptyLine).join("\n"),0<defines.length&&(defines+="\n"),
extensions=[customExtensions,customDefines].filter(filterEmptyLine).join("\n"),0<extensions.length&&(extensions+="\n")):(defines=["precision "+parameters.precision+" float;","precision "+parameters.precision+" int;","#define SHADER_NAME "+shader.name,customDefines,parameters.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+gammaFactorDefine,"#define MAX_BONES "+parameters.maxBones,parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp?
"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMap&&parameters.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",parameters.displacementMap&&parameters.supportsVertexTextures?
"#define USE_DISPLACEMENTMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.skinning?"#define USE_SKINNING":"",parameters.useVertexTexture?"#define BONE_TEXTURE":"",parameters.morphTargets?
"#define USE_MORPHTARGETS":"",parameters.morphNormals&&!1===parameters.flatShading?"#define USE_MORPHNORMALS":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&(capabilities.isWebGL2||
extensions.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;",
"\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),
extensions=[customExtensions,"precision "+parameters.precision+" float;","precision "+parameters.precision+" int;","#define SHADER_NAME "+shader.name,customDefines,parameters.alphaTest?"#define ALPHATEST "+parameters.alphaTest+(parameters.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+gammaFactorDefine,parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.matcap?"#define USE_MATCAP":"",parameters.envMap?
"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapTypeDefine:"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.envMap?"#define "+envMapBlendingDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMap&&parameters.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",parameters.specularMap?
"#define USE_SPECULARMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.gradientMap?"#define USE_GRADIENTMAP":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?
"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",parameters.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&(capabilities.isWebGL2||extensions.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",parameters.envMap&&(capabilities.isWebGL2||extensions.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":
"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",0!==parameters.toneMapping?"#define TONE_MAPPING":"",0!==parameters.toneMapping?ShaderChunk.tonemapping_pars_fragment:"",0!==parameters.toneMapping?getToneMappingFunction("toneMapping",parameters.toneMapping):"",parameters.dithering?"#define DITHERING":"",parameters.outputEncoding||parameters.mapEncoding||parameters.matcapEncoding||parameters.envMapEncoding||parameters.emissiveMapEncoding?ShaderChunk.encodings_pars_fragment:"",parameters.mapEncoding?
getTexelDecodingFunction("mapTexelToLinear",parameters.mapEncoding):"",parameters.matcapEncoding?getTexelDecodingFunction("matcapTexelToLinear",parameters.matcapEncoding):"",parameters.envMapEncoding?getTexelDecodingFunction("envMapTexelToLinear",parameters.envMapEncoding):"",parameters.emissiveMapEncoding?getTexelDecodingFunction("emissiveMapTexelToLinear",parameters.emissiveMapEncoding):"",parameters.outputEncoding?getTexelEncodingFunction("linearToOutputTexel",parameters.outputEncoding):"",parameters.depthPacking?
"#define DEPTH_PACKING "+material.depthPacking:"","\n"].filter(filterEmptyLine).join("\n"));vertexShader=parseIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=parseIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);
capabilities.isWebGL2&&!material.isRawShaderMaterial&&(capabilities=!1,shadowMapTypeDefine=/^\s*#version\s+300\s+es\s*\n/,material.isShaderMaterial&&null!==vertexShader.match(shadowMapTypeDefine)&&null!==fragmentShader.match(shadowMapTypeDefine)&&(capabilities=!0,vertexShader=vertexShader.replace(shadowMapTypeDefine,""),fragmentShader=fragmentShader.replace(shadowMapTypeDefine,"")),defines="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+defines,extensions=
["#version 300 es\n\n#define varying in",capabilities?"":"out highp vec4 pc_fragColor;",capabilities?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+
"\n"+extensions);fragmentShader=extensions+fragmentShader;vertexShader=WebGLShader(gl,35633,defines+vertexShader);fragmentShader=WebGLShader(gl,35632,fragmentShader);gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);void 0!==material.index0AttributeName?gl.bindAttribLocation(program,0,material.index0AttributeName):!0===parameters.morphTargets&&gl.bindAttribLocation(program,0,"position");gl.linkProgram(program);parameters=gl.getProgramInfoLog(program).trim();capabilities=
gl.getShaderInfoLog(vertexShader).trim();shadowMapTypeDefine=gl.getShaderInfoLog(fragmentShader).trim();envMapModeDefine=envMapTypeDefine=!0;if(!1===gl.getProgramParameter(program,35714))envMapTypeDefine=!1,console.error("THREE.WebGLProgram: shader error: ",gl.getError(),"35715",gl.getProgramParameter(program,35715),"gl.getProgramInfoLog",parameters,capabilities,shadowMapTypeDefine);else if(""!==parameters)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",parameters);else if(""===capabilities||
""===shadowMapTypeDefine)envMapModeDefine=!1;envMapModeDefine&&(this.diagnostics={runnable:envMapTypeDefine,material:material,programLog:parameters,vertexShader:{log:capabilities,prefix:defines},fragmentShader:{log:shadowMapTypeDefine,prefix:extensions}});gl.deleteShader(vertexShader);gl.deleteShader(fragmentShader);var cachedUniforms;this.getUniforms=function(){void 0===cachedUniforms&&(cachedUniforms=new WebGLUniforms(gl,program,renderer));return cachedUniforms};var cachedAttributes;this.getAttributes=
function(){if(void 0===cachedAttributes){for(var attributes={},n=gl.getProgramParameter(program,35721),i=0;i<n;i++){var name=gl.getActiveAttrib(program,i).name;attributes[name]=gl.getAttribLocation(program,name)}cachedAttributes=attributes}return cachedAttributes};this.destroy=function(){gl.deleteProgram(program);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");
return this.getAttributes()}}});this.name=shader.name;this.id=programIdCount++;this.code=code;this.usedTimes=1;this.program=program;this.vertexShader=vertexShader;this.fragmentShader=fragmentShader;return this}function WebGLPrograms(renderer,extensions,capabilities){function getTextureEncodingFromMap(map,gammaOverrideLinear){if(map)map.isTexture?encoding=map.encoding:map.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
encoding=map.texture.encoding);else var encoding=3E3;3E3===encoding&&gammaOverrideLinear&&(encoding=3007);return encoding}var programs=[],shaderIDs={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",
ShadowMaterial:"shadow",SpriteMaterial:"sprite"},parameterNames="precision supportsVertexTextures map mapEncoding matcap matcapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap objectSpaceNormalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors vertexTangents fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering".split(" ");
this.getParameters=function(material,lights,shadows,fog,nClipPlanes,nClipIntersection,object){var shaderID=shaderIDs[material.type];if(object.isSkinnedMesh){var JSCompiler_temp=object.skeleton.bones;if(capabilities.floatVertexTextures)JSCompiler_temp=1024;else{var maxBones=Math.min(Math.floor((capabilities.maxVertexUniforms-20)/4),JSCompiler_temp.length);maxBones<JSCompiler_temp.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+JSCompiler_temp.length+" bones. This GPU supports "+maxBones+
"."),JSCompiler_temp=0):JSCompiler_temp=maxBones}}else JSCompiler_temp=0;maxBones=capabilities.precision;null!==material.precision&&(maxBones=capabilities.getMaxPrecision(material.precision),maxBones!==material.precision&&console.warn("THREE.WebGLProgram.getParameters:",material.precision,"not supported, using",maxBones,"instead."));var currentRenderTarget=renderer.getRenderTarget();return{shaderID:shaderID,precision:maxBones,supportsVertexTextures:capabilities.vertexTextures,outputEncoding:getTextureEncodingFromMap(currentRenderTarget?
currentRenderTarget.texture:null,renderer.gammaOutput),map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map,renderer.gammaInput),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap,renderer.gammaInput),envMap:!!material.envMap,envMapMode:material.envMap&&material.envMap.mapping,envMapEncoding:getTextureEncodingFromMap(material.envMap,renderer.gammaInput),envMapCubeUV:!!material.envMap&&(306===material.envMap.mapping||307===material.envMap.mapping),lightMap:!!material.lightMap,
aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap,renderer.gammaInput),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:1===material.normalMapType,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,combine:material.combine,vertexTangents:material.normalMap&&
material.vertexTangents,vertexColors:material.vertexColors,fog:!!fog,useFog:material.fog,fogExp:fog&&fog.isFogExp2,flatShading:material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:capabilities.logarithmicDepthBuffer,skinning:material.skinning&&0<JSCompiler_temp,maxBones:JSCompiler_temp,useVertexTexture:capabilities.floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:renderer.maxMorphTargets,maxMorphNormals:renderer.maxMorphNormals,
numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numClippingPlanes:nClipPlanes,numClipIntersection:nClipIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&object.receiveShadow&&0<shadows.length,shadowMapType:renderer.shadowMap.type,toneMapping:renderer.toneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,
alphaTest:material.alphaTest,doubleSided:2===material.side,flipSided:1===material.side,depthPacking:void 0!==material.depthPacking?material.depthPacking:!1}};this.getProgramCode=function(material,parameters){var array=[];parameters.shaderID?array.push(parameters.shaderID):(array.push(material.fragmentShader),array.push(material.vertexShader));if(void 0!==material.defines)for(var name in material.defines)array.push(name),array.push(material.defines[name]);for(name=0;name<parameterNames.length;name++)array.push(parameters[parameterNames[name]]);
array.push(material.onBeforeCompile.toString());array.push(renderer.gammaOutput);array.push(renderer.gammaFactor);return array.join()};this.acquireProgram=function(material,shader,parameters,code){for(var program,p=0,pl=programs.length;p<pl;p++){var programInfo=programs[p];if(programInfo.code===code){program=programInfo;++program.usedTimes;break}}void 0===program&&(program=new WebGLProgram(renderer,extensions,code,material,shader,parameters,capabilities),programs.push(program));return program};this.releaseProgram=
function(program){if(0===--program.usedTimes){var i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();program.destroy()}};this.programs=programs}function WebGLProperties(){var properties=new WeakMap;return{get:function(object){var map=properties.get(object);void 0===map&&(map={},properties.set(object,map));return map},remove:function(object){properties.delete(object)},update:function(object,key,value){properties.get(object)[key]=value},dispose:function(){properties=
new WeakMap}}}function painterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program&&b.program&&a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function reversePainterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-
b.id}function WebGLRenderList(){function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];void 0===renderItem?(renderItem={id:object.id,object:object,geometry:geometry,material:material,program:material.program,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group},renderItems[renderItemsIndex]=renderItem):(renderItem.id=object.id,renderItem.object=object,renderItem.geometry=geometry,renderItem.material=material,renderItem.program=
material.program,renderItem.groupOrder=groupOrder,renderItem.renderOrder=object.renderOrder,renderItem.z=z,renderItem.group=group);renderItemsIndex++;return renderItem}var renderItems=[],renderItemsIndex=0,opaque=[],transparent=[];return{opaque:opaque,transparent:transparent,init:function(){renderItemsIndex=0;opaque.length=0;transparent.length=0},push:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);(!0===material.transparent?
transparent:opaque).push(object)},unshift:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);(!0===material.transparent?transparent:opaque).unshift(object)},sort:function(){1<opaque.length&&opaque.sort(painterSortStable);1<transparent.length&&transparent.sort(reversePainterSortStable)}}}function WebGLRenderLists(){function onSceneDispose(event){event=event.target;event.removeEventListener("dispose",onSceneDispose);delete lists[event.id]}
var lists={};return{get:function(scene,camera){var cameras=lists[scene.id];if(void 0===cameras){var list=new WebGLRenderList;lists[scene.id]={};lists[scene.id][camera.id]=list;scene.addEventListener("dispose",onSceneDispose)}else list=cameras[camera.id],void 0===list&&(list=new WebGLRenderList,cameras[camera.id]=list);return list},dispose:function(){lists={}}}}function UniformsCache(){var lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];switch(light.type){case "DirectionalLight":var uniforms=
{direction:new Vector3,color:new Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "SpotLight":uniforms={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "PointLight":uniforms={position:new Vector3,color:new Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1E3};break;
case "HemisphereLight":uniforms={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case "RectAreaLight":uniforms={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return lights[light.id]=uniforms}}}function WebGLLights(){var cache=new UniformsCache,state={id:count$jscomp$0++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],
directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},vector3=new Vector3,matrix4=new Matrix4,matrix42=new Matrix4;return{setup:function(lights,shadows,camera){var r=0,g=0,b=0,directionalLength=0,pointLength=0,spotLength=0,rectAreaLength=0,hemiLength=0;camera=camera.matrixWorldInverse;for(var i=0,l=lights.length;i<l;i++){var light=lights[i],color=light.color,intensity=light.intensity,distance=light.distance,shadowMap=
light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight)r+=color.r*intensity,g+=color.g*intensity,b+=color.b*intensity;else if(light.isDirectionalLight){var uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(camera);if(uniforms.shadow=light.castShadow)color=
light.shadow,uniforms.shadowBias=color.bias,uniforms.shadowRadius=color.radius,uniforms.shadowMapSize=color.mapSize;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;state.directional[directionalLength]=uniforms;directionalLength++}else if(light.isSpotLight){uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(camera);uniforms.color.copy(color).multiplyScalar(intensity);
uniforms.distance=distance;uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(camera);uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(uniforms.shadow=light.castShadow)color=light.shadow,uniforms.shadowBias=color.bias,uniforms.shadowRadius=color.radius,uniforms.shadowMapSize=color.mapSize;
state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;state.spot[spotLength]=uniforms;spotLength++}else if(light.isRectAreaLight)uniforms=cache.get(light),uniforms.color.copy(color).multiplyScalar(intensity),uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(camera),matrix42.identity(),matrix4.copy(light.matrixWorld),matrix4.premultiply(camera),matrix42.extractRotation(matrix4),uniforms.halfWidth.set(.5*light.width,
0,0),uniforms.halfHeight.set(0,.5*light.height,0),uniforms.halfWidth.applyMatrix4(matrix42),uniforms.halfHeight.applyMatrix4(matrix42),state.rectArea[rectAreaLength]=uniforms,rectAreaLength++;else if(light.isPointLight){uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(camera);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(uniforms.shadow=light.castShadow)color=
light.shadow,uniforms.shadowBias=color.bias,uniforms.shadowRadius=color.radius,uniforms.shadowMapSize=color.mapSize,uniforms.shadowCameraNear=color.camera.near,uniforms.shadowCameraFar=color.camera.far;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;state.point[pointLength]=uniforms;pointLength++}else light.isHemisphereLight&&(uniforms=cache.get(light),uniforms.direction.setFromMatrixPosition(light.matrixWorld),uniforms.direction.transformDirection(camera),
uniforms.direction.normalize(),uniforms.skyColor.copy(light.color).multiplyScalar(intensity),uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity),state.hemi[hemiLength]=uniforms,hemiLength++)}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.hash.stateID=state.id;state.hash.directionalLength=directionalLength;
state.hash.pointLength=pointLength;state.hash.spotLength=spotLength;state.hash.rectAreaLength=rectAreaLength;state.hash.hemiLength=hemiLength;state.hash.shadowsLength=shadows.length},state:state}}function WebGLRenderState(){var lights=new WebGLLights,lightsArray=[],shadowsArray=[];return{init:function(){lightsArray.length=0;shadowsArray.length=0},state:{lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights},setupLights:function(camera){lights.setup(lightsArray,shadowsArray,camera)},pushLight:function(light){lightsArray.push(light)},
pushShadow:function(shadowLight){shadowsArray.push(shadowLight)}}}function WebGLRenderStates(){function onSceneDispose(event){event=event.target;event.removeEventListener("dispose",onSceneDispose);delete renderStates[event.id]}var renderStates={};return{get:function(scene,camera){if(void 0===renderStates[scene.id]){var renderState=new WebGLRenderState;renderStates[scene.id]={};renderStates[scene.id][camera.id]=renderState;scene.addEventListener("dispose",onSceneDispose)}else void 0===renderStates[scene.id][camera.id]?
(renderState=new WebGLRenderState,renderStates[scene.id][camera.id]=renderState):renderState=renderStates[scene.id][camera.id];return renderState},dispose:function(){renderStates={}}}}function MeshDepthMaterial(parameters){Material.call(this);this.type="MeshDepthMaterial";this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(parameters)}
function MeshDistanceMaterial(parameters){Material.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new Vector3;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(parameters)}function WebGLShadowMap(_renderer,_objects,maxTextureSize){function getDepthMaterial(object,material,isPointLight,lightPositionWorld,shadowCameraNear,
shadowCameraFar){var geometry=object.geometry;var result=_depthMaterials;var customMaterial=object.customDepthMaterial;isPointLight&&(result=_distanceMaterials,customMaterial=object.customDistanceMaterial);customMaterial?result=customMaterial:(customMaterial=!1,material.morphTargets&&(geometry&&geometry.isBufferGeometry?customMaterial=geometry.morphAttributes&&geometry.morphAttributes.position&&0<geometry.morphAttributes.position.length:geometry&&geometry.isGeometry&&(customMaterial=geometry.morphTargets&&
0<geometry.morphTargets.length)),object.isSkinnedMesh&&!1===material.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",object),object=object.isSkinnedMesh&&material.skinning,geometry=0,customMaterial&&(geometry|=1),object&&(geometry|=2),result=result[geometry]);_renderer.localClippingEnabled&&!0===material.clipShadows&&0!==material.clippingPlanes.length&&(geometry=result.uuid,customMaterial=material.uuid,object=_materialCache[geometry],void 0===
object&&(object={},_materialCache[geometry]=object),geometry=object[customMaterial],void 0===geometry&&(geometry=result.clone(),object[customMaterial]=geometry),result=geometry);result.visible=material.visible;result.wireframe=material.wireframe;result.side=null!=material.shadowSide?material.shadowSide:shadowSide[material.side];result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;
result.linewidth=material.linewidth;isPointLight&&result.isMeshDistanceMaterial&&(result.referencePosition.copy(lightPositionWorld),result.nearDistance=shadowCameraNear,result.farDistance=shadowCameraFar);return result}function renderObject(object,camera,shadowCamera,isPointLight){if(!1!==object.visible){if(object.layers.test(camera.layers)&&(object.isMesh||object.isLine||object.isPoints)&&object.castShadow&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,
object.matrixWorld);var geometry=_objects.update(object),material=object.material;if(Array.isArray(material))for(var groups=geometry.groups,k=0,kl=groups.length;k<kl;k++){var group=groups[k],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&(groupMaterial=getDepthMaterial(object,groupMaterial,isPointLight,_lightPositionWorld,shadowCamera.near,shadowCamera.far),_renderer.renderBufferDirect(shadowCamera,null,geometry,groupMaterial,object,group))}else material.visible&&
(groupMaterial=getDepthMaterial(object,material,isPointLight,_lightPositionWorld,shadowCamera.near,shadowCamera.far),_renderer.renderBufferDirect(shadowCamera,null,geometry,groupMaterial,object,null))}object=object.children;geometry=0;for(material=object.length;geometry<material;geometry++)renderObject(object[geometry],camera,shadowCamera,isPointLight)}}var _frustum=new Frustum,_projScreenMatrix=new Matrix4,_shadowMapSize=new Vector2,_maxShadowMapSize=new Vector2(maxTextureSize,maxTextureSize),_lookTarget=
new Vector3,_lightPositionWorld=new Vector3,_depthMaterials=Array(4),_distanceMaterials=Array(4),_materialCache={},shadowSide={0:1,1:0,2:2},cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)],cube2DViewPorts=[new Vector4,new Vector4,new Vector4,new Vector4,new Vector4,new Vector4];for(maxTextureSize=
0;4!==maxTextureSize;++maxTextureSize){var useMorphing=0!==(maxTextureSize&1),useSkinning=0!==(maxTextureSize&2),depthMaterial=new MeshDepthMaterial({depthPacking:3201,morphTargets:useMorphing,skinning:useSkinning});_depthMaterials[maxTextureSize]=depthMaterial;useMorphing=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning});_distanceMaterials[maxTextureSize]=useMorphing}var scope=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.render=function(lights,
scene,camera){if(!1!==scope.enabled&&(!1!==scope.autoUpdate||!1!==scope.needsUpdate)&&0!==lights.length){var currentRenderTarget=_renderer.getRenderTarget(),_state=_renderer.state;_state.setBlending(0);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(!0);_state.setScissorTest(!1);for(var faceCount,i=0,il=lights.length;i<il;i++){var light=lights[i];faceCount=light.shadow;var isPointLight=light&&light.isPointLight;if(void 0===faceCount)console.warn("THREE.WebGLShadowMap:",light,"has no shadow.");
else{var shadowCamera=faceCount.camera;_shadowMapSize.copy(faceCount.mapSize);_shadowMapSize.min(_maxShadowMapSize);if(isPointLight){var vpWidth=_shadowMapSize.x,vpHeight=_shadowMapSize.y;cube2DViewPorts[0].set(2*vpWidth,vpHeight,vpWidth,vpHeight);cube2DViewPorts[1].set(0,vpHeight,vpWidth,vpHeight);cube2DViewPorts[2].set(3*vpWidth,vpHeight,vpWidth,vpHeight);cube2DViewPorts[3].set(vpWidth,vpHeight,vpWidth,vpHeight);cube2DViewPorts[4].set(3*vpWidth,0,vpWidth,vpHeight);cube2DViewPorts[5].set(vpWidth,
0,vpWidth,vpHeight);_shadowMapSize.x*=4;_shadowMapSize.y*=2}null===faceCount.map&&(faceCount.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,{minFilter:1003,magFilter:1003,format:1023}),faceCount.map.texture.name=light.name+".shadowMap",shadowCamera.updateProjectionMatrix());faceCount.isSpotLightShadow&&faceCount.update(light);vpWidth=faceCount.map;vpHeight=faceCount.matrix;_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld);isPointLight?
(faceCount=6,vpHeight.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z)):(faceCount=1,_lookTarget.setFromMatrixPosition(light.target.matrixWorld),shadowCamera.lookAt(_lookTarget),shadowCamera.updateMatrixWorld(),vpHeight.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),vpHeight.multiply(shadowCamera.projectionMatrix),vpHeight.multiply(shadowCamera.matrixWorldInverse));_renderer.setRenderTarget(vpWidth);_renderer.clear();for(light=0;light<faceCount;light++)isPointLight&&
(_lookTarget.copy(shadowCamera.position),_lookTarget.add(cubeDirections[light]),shadowCamera.up.copy(cubeUps[light]),shadowCamera.lookAt(_lookTarget),shadowCamera.updateMatrixWorld(),_state.viewport(cube2DViewPorts[light])),_projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),renderObject(scene,camera,shadowCamera,isPointLight)}}scope.needsUpdate=!1;_renderer.setRenderTarget(currentRenderTarget)}}}function WebGLState(gl,
extensions,utils,capabilities){function createTexture(type,target,count){var data=new Uint8Array(4),texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(type=0;type<count;type++)gl.texImage2D(target+type,0,6408,1,1,0,6408,5121,data);return texture}function enableAttributeAndDivisor(attribute,meshPerAttribute){newAttributes[attribute]=1;0===enabledAttributes[attribute]&&(gl.enableVertexAttribArray(attribute),enabledAttributes[attribute]=
1);attributeDivisors[attribute]!==meshPerAttribute&&((capabilities.isWebGL2?gl:extensions.get("ANGLE_instanced_arrays"))[capabilities.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](attribute,meshPerAttribute),attributeDivisors[attribute]=meshPerAttribute)}function enable(id){!0!==enabledCapabilities[id]&&(gl.enable(id),enabledCapabilities[id]=!0)}function disable(id){!1!==enabledCapabilities[id]&&(gl.disable(id),enabledCapabilities[id]=!1)}function setBlending(blending,blendEquation,blendSrc,
blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(0===blending)currentBlendingEnabled&&(disable(3042),currentBlendingEnabled=!1);else if(currentBlendingEnabled||(enable(3042),currentBlendingEnabled=!0),5!==blending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(100!==currentBlendEquation||100!==currentBlendEquationAlpha)gl.blendEquation(32774),currentBlendEquationAlpha=currentBlendEquation=100;if(premultipliedAlpha)switch(blending){case 1:gl.blendFuncSeparate(1,
771,1,771);break;case 2:gl.blendFunc(1,1);break;case 3:gl.blendFuncSeparate(0,0,769,771);break;case 4:gl.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}else switch(blending){case 1:gl.blendFuncSeparate(770,771,1,771);break;case 2:gl.blendFunc(770,1);break;case 3:gl.blendFunc(0,769);break;case 4:gl.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendDst=
currentBlendSrc=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha}}else{blendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha)gl.blendEquationSeparate(utils.convert(blendEquation),utils.convert(blendEquationAlpha)),currentBlendEquation=blendEquation,currentBlendEquationAlpha=blendEquationAlpha;if(blendSrc!==currentBlendSrc||
blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha)gl.blendFuncSeparate(utils.convert(blendSrc),utils.convert(blendDst),utils.convert(blendSrcAlpha),utils.convert(blendDstAlpha)),currentBlendSrc=blendSrc,currentBlendDst=blendDst,currentBlendSrcAlpha=blendSrcAlpha,currentBlendDstAlpha=blendDstAlpha;currentBlending=blending;currentPremultipledAlpha=null}}function setFlipSided(flipSided){currentFlipSided!==flipSided&&(flipSided?gl.frontFace(2304):gl.frontFace(2305),
currentFlipSided=flipSided)}function setCullFace(cullFace){0!==cullFace?(enable(2884),cullFace!==currentCullFace&&(1===cullFace?gl.cullFace(1029):2===cullFace?gl.cullFace(1028):gl.cullFace(1032))):disable(2884);currentCullFace=cullFace}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){if(enable(32823),currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units)gl.polygonOffset(factor,units),currentPolygonOffsetFactor=factor,currentPolygonOffsetUnits=units}else disable(32823)}
function activeTexture(webglSlot){void 0===webglSlot&&(webglSlot=33984+maxTextures-1);currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot)}var colorBuffer=new function(){var locked=!1,color=new Vector4,currentColorMask=null,currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){currentColorMask===colorMask||locked||(gl.colorMask(colorMask,colorMask,colorMask,colorMask),currentColorMask=colorMask)},setLocked:function(lock){locked=lock},setClear:function(r,
g,b,a,premultipliedAlpha){!0===premultipliedAlpha&&(r*=a,g*=a,b*=a);color.set(r,g,b,a);!1===currentColorClear.equals(color)&&(gl.clearColor(r,g,b,a),currentColorClear.copy(color))},reset:function(){locked=!1;currentColorMask=null;currentColorClear.set(-1,0,0,0)}}},depthBuffer=new function(){var locked=!1,currentDepthMask=null,currentDepthFunc=null,currentDepthClear=null;return{setTest:function(depthTest){depthTest?enable(2929):disable(2929)},setMask:function(depthMask){currentDepthMask===depthMask||
locked||(gl.depthMask(depthMask),currentDepthMask=depthMask)},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc)switch(depthFunc){case 0:gl.depthFunc(512);break;case 1:gl.depthFunc(519);break;case 2:gl.depthFunc(513);break;case 3:gl.depthFunc(515);break;case 4:gl.depthFunc(514);break;case 5:gl.depthFunc(518);break;case 6:gl.depthFunc(516);break;case 7:gl.depthFunc(517);break;default:gl.depthFunc(515)}else gl.depthFunc(515);currentDepthFunc=depthFunc}},setLocked:function(lock){locked=
lock},setClear:function(depth){currentDepthClear!==depth&&(gl.clearDepth(depth),currentDepthClear=depth)},reset:function(){locked=!1;currentDepthClear=currentDepthFunc=currentDepthMask=null}}},stencilBuffer=new function(){var locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=null,currentStencilFail=null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null;return{setTest:function(stencilTest){stencilTest?enable(2960):disable(2960)},
setMask:function(stencilMask){currentStencilMask===stencilMask||locked||(gl.stencilMask(stencilMask),currentStencilMask=stencilMask)},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask)gl.stencilFunc(stencilFunc,stencilRef,stencilMask),currentStencilFunc=stencilFunc,currentStencilRef=stencilRef,currentStencilFuncMask=stencilMask},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==
stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass)gl.stencilOp(stencilFail,stencilZFail,stencilZPass),currentStencilFail=stencilFail,currentStencilZFail=stencilZFail,currentStencilZPass=stencilZPass},setLocked:function(lock){locked=lock},setClear:function(stencil){currentStencilClear!==stencil&&(gl.clearStencil(stencil),currentStencilClear=stencil)},reset:function(){locked=!1;currentStencilClear=currentStencilZPass=currentStencilZFail=currentStencilFail=currentStencilFuncMask=
currentStencilRef=currentStencilFunc=currentStencilMask=null}}},maxVertexAttributes=gl.getParameter(34921),newAttributes=new Uint8Array(maxVertexAttributes),enabledAttributes=new Uint8Array(maxVertexAttributes),attributeDivisors=new Uint8Array(maxVertexAttributes),enabledCapabilities={},compressedTextureFormats=null,currentProgram=null,currentBlendingEnabled=null,currentBlending=null,currentBlendEquation=null,currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=
null,currentBlendDstAlpha=null,currentPremultipledAlpha=!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null,maxTextures=gl.getParameter(35661),lineWidthAvailable=!1;maxVertexAttributes=0;maxVertexAttributes=gl.getParameter(7938);-1!==maxVertexAttributes.indexOf("WebGL")?(maxVertexAttributes=parseFloat(/^WebGL ([0-9])/.exec(maxVertexAttributes)[1]),lineWidthAvailable=1<=maxVertexAttributes):-1!==maxVertexAttributes.indexOf("OpenGL ES")&&
(maxVertexAttributes=parseFloat(/^OpenGL ES ([0-9])/.exec(maxVertexAttributes)[1]),lineWidthAvailable=2<=maxVertexAttributes);var currentTextureSlot=null,currentBoundTextures={},currentScissor=new Vector4,currentViewport=new Vector4,emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);colorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(3);setFlipSided(!1);setCullFace(1);enable(2884);
setBlending(0);return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},initAttributes:function(){for(var i=0,l=newAttributes.length;i<l;i++)newAttributes[i]=0},enableAttribute:function(attribute){enableAttributeAndDivisor(attribute,0)},enableAttributeAndDivisor:enableAttributeAndDivisor,disableUnusedAttributes:function(){for(var i=0,l=enabledAttributes.length;i!==l;++i)enabledAttributes[i]!==newAttributes[i]&&(gl.disableVertexAttribArray(i),enabledAttributes[i]=0)},enable:enable,
disable:disable,getCompressedTextureFormats:function(){if(null===compressedTextureFormats&&(compressedTextureFormats=[],extensions.get("WEBGL_compressed_texture_pvrtc")||extensions.get("WEBGL_compressed_texture_s3tc")||extensions.get("WEBGL_compressed_texture_etc1")||extensions.get("WEBGL_compressed_texture_astc")))for(var formats=gl.getParameter(34467),i=0;i<formats.length;i++)compressedTextureFormats.push(formats[i]);return compressedTextureFormats},useProgram:function(program){return currentProgram!==
program?(gl.useProgram(program),currentProgram=program,!0):!1},setBlending:setBlending,setMaterial:function(material,frontFaceCW){2===material.side?disable(2884):enable(2884);var flipSided=1===material.side;frontFaceCW&&(flipSided=!flipSided);setFlipSided(flipSided);1===material.blending&&!1===material.transparent?setBlending(0):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);
depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)},setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:function(width){width!==currentLineWidth&&(lineWidthAvailable&&gl.lineWidth(width),currentLineWidth=width)},setPolygonOffset:setPolygonOffset,setScissorTest:function(scissorTest){scissorTest?
enable(3089):disable(3089)},activeTexture:activeTexture,bindTexture:function(webglType,webglTexture){null===currentTextureSlot&&activeTexture();var boundTexture=currentBoundTextures[currentTextureSlot];void 0===boundTexture&&(boundTexture={type:void 0,texture:void 0},currentBoundTextures[currentTextureSlot]=boundTexture);if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture)gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]),boundTexture.type=webglType,boundTexture.texture=
webglTexture},compressedTexImage2D:function(){try{gl.compressedTexImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage2D:function(){try{gl.texImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage3D:function(){try{gl.texImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},scissor:function(scissor){!1===currentScissor.equals(scissor)&&(gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w),currentScissor.copy(scissor))},
viewport:function(viewport){!1===currentViewport.equals(viewport)&&(gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w),currentViewport.copy(viewport))},reset:function(){for(var i=0;i<enabledAttributes.length;i++)1===enabledAttributes[i]&&(gl.disableVertexAttribArray(i),enabledAttributes[i]=0);enabledCapabilities={};currentTextureSlot=compressedTextureFormats=null;currentBoundTextures={};currentCullFace=currentFlipSided=currentBlending=currentProgram=null;colorBuffer.reset();depthBuffer.reset();
stencilBuffer.reset()}}}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){function createCanvas(width,height){return useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){var scale=1;if(image.width>maxSize||image.height>maxSize)scale=maxSize/Math.max(image.width,image.height);if(1>scale||!0===needsPowerOfTwo){if(image instanceof ImageBitmap||
image instanceof HTMLImageElement||image instanceof HTMLCanvasElement)return maxSize=needsPowerOfTwo?_Math.floorPowerOfTwo:Math.floor,needsPowerOfTwo=maxSize(scale*image.width),scale=maxSize(scale*image.height),void 0===_canvas&&(_canvas=createCanvas(needsPowerOfTwo,scale)),needsNewCanvas=needsNewCanvas?createCanvas(needsPowerOfTwo,scale):_canvas,needsNewCanvas.width=needsPowerOfTwo,needsNewCanvas.height=scale,needsNewCanvas.getContext("2d").drawImage(image,0,0,needsPowerOfTwo,scale),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+
image.width+"x"+image.height+") to ("+needsPowerOfTwo+"x"+scale+")."),useOffscreenCanvas?needsNewCanvas.transferToImageBitmap():needsNewCanvas;"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+").")}return image}function isPowerOfTwo(image){return _Math.isPowerOfTwo(image.width)&&_Math.isPowerOfTwo(image.height)}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&1003!==texture.minFilter&&
1006!==texture.minFilter}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);properties.get(texture).__maxMipLevel=Math.log(Math.max(width,height))*Math.LOG2E}function getInternalFormat(glFormat,glType){if(!capabilities.isWebGL2)return glFormat;var internalFormat=glFormat;6403===glFormat&&(5126===glType&&(internalFormat=33326),5131===glType&&(internalFormat=33325),5121===glType&&(internalFormat=33321));6407===glFormat&&(5126===glType&&(internalFormat=34837),5131===glType&&
(internalFormat=34843),5121===glType&&(internalFormat=32849));6408===glFormat&&(5126===glType&&(internalFormat=34836),5131===glType&&(internalFormat=34842),5121===glType&&(internalFormat=32856));33325===internalFormat||33326===internalFormat||34842===internalFormat||34836===internalFormat?extensions.get("EXT_color_buffer_float"):(34843===internalFormat||34837===internalFormat)&&console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.");return internalFormat}
function filterFallback(f){return 1003===f||1004===f||1005===f?9728:9729}function onTextureDispose(event){event=event.target;event.removeEventListener("dispose",onTextureDispose);var textureProperties=properties.get(event);void 0!==textureProperties.__webglInit&&(_gl.deleteTexture(textureProperties.__webglTexture),properties.remove(event));event.isVideoTexture&&delete _videoTextures[event.id];info.memory.textures--}function onRenderTargetDispose(event){event=event.target;event.removeEventListener("dispose",
onRenderTargetDispose);var renderTargetProperties=properties.get(event),textureProperties=properties.get(event.texture);if(event){void 0!==textureProperties.__webglTexture&&_gl.deleteTexture(textureProperties.__webglTexture);event.depthTexture&&event.depthTexture.dispose();if(event.isWebGLRenderTargetCube)for(textureProperties=0;6>textureProperties;textureProperties++)_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[textureProperties]),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[textureProperties]);
else _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);properties.remove(event.texture);properties.remove(event)}info.memory.textures--}function setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture){var id=texture.id,frame=info.render.frame;_videoTextures[id]!==frame&&(_videoTextures[id]=frame,texture.update())}if(0<texture.version&&
textureProperties.__version!==texture.version)if(id=texture.image,void 0===id)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===id.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{uploadTexture(textureProperties,texture,slot);return}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture)}function setTextureParameters(textureType,texture,supportsMips){supportsMips?(_gl.texParameteri(textureType,
10242,utils.convert(texture.wrapS)),_gl.texParameteri(textureType,10243,utils.convert(texture.wrapT)),32879===textureType&&_gl.texParameteri(textureType,32882,utils.convert(texture.wrapR)),_gl.texParameteri(textureType,10240,utils.convert(texture.magFilter)),_gl.texParameteri(textureType,10241,utils.convert(texture.minFilter))):(_gl.texParameteri(textureType,10242,33071),_gl.texParameteri(textureType,10243,33071),32879===textureType&&_gl.texParameteri(textureType,32882,33071),1001===texture.wrapS&&
1001===texture.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter)),_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter)),1003!==texture.minFilter&&1006!==texture.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
!(supportsMips=extensions.get("EXT_texture_filter_anisotropic"))||1015===texture.type&&null===extensions.get("OES_texture_float_linear")||1016===texture.type&&null===(capabilities.isWebGL2||extensions.get("OES_texture_half_float_linear"))||!(1<texture.anisotropy||properties.get(texture).__currentAnisotropy)||(_gl.texParameterf(textureType,supportsMips.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy())),properties.get(texture).__currentAnisotropy=texture.anisotropy)}
function initTexture(textureProperties,texture){void 0===textureProperties.__webglInit&&(textureProperties.__webglInit=!0,texture.addEventListener("dispose",onTextureDispose),textureProperties.__webglTexture=_gl.createTexture(),info.memory.textures++)}function uploadTexture(textureProperties,texture,slot){var textureType=texture.isDataTexture3D?32879:3553;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,
texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);slot=capabilities.isWebGL2?!1:1001!==texture.wrapS||1001!==texture.wrapT||1003!==texture.minFilter&&1006!==texture.minFilter;slot=slot&&!1===isPowerOfTwo(texture.image);slot=resizeImage(texture.image,slot,!1,capabilities.maxTextureSize);var supportsMips=isPowerOfTwo(slot)||capabilities.isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(glFormat,
glType);setTextureParameters(textureType,texture,supportsMips);var mipmaps=texture.mipmaps;if(texture.isDepthTexture){glInternalFormat=6402;if(1015===texture.type){if(!capabilities.isWebGL2)throw Error("Float Depth Texture only supported in WebGL2.0");glInternalFormat=36012}else capabilities.isWebGL2&&(glInternalFormat=33189);1026===texture.format&&6402===glInternalFormat&&1012!==texture.type&&1014!==texture.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
texture.type=1012,glType=utils.convert(texture.type));1027===texture.format&&(glInternalFormat=34041,1020!==texture.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),texture.type=1020,glType=utils.convert(texture.type)));state.texImage2D(3553,0,glInternalFormat,slot.width,slot.height,0,glFormat,glType,null)}else if(texture.isDataTexture)if(0<mipmaps.length&&supportsMips){for(var i=0,il=mipmaps.length;i<il;i++)textureType=mipmaps[i],state.texImage2D(3553,
i,glInternalFormat,textureType.width,textureType.height,0,glFormat,glType,textureType.data);texture.generateMipmaps=!1;textureProperties.__maxMipLevel=mipmaps.length-1}else state.texImage2D(3553,0,glInternalFormat,slot.width,slot.height,0,glFormat,glType,slot.data),textureProperties.__maxMipLevel=0;else if(texture.isCompressedTexture){i=0;for(il=mipmaps.length;i<il;i++)textureType=mipmaps[i],1023!==texture.format&&1022!==texture.format?-1<state.getCompressedTextureFormats().indexOf(glFormat)?state.compressedTexImage2D(3553,
i,glInternalFormat,textureType.width,textureType.height,0,textureType.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):state.texImage2D(3553,i,glInternalFormat,textureType.width,textureType.height,0,glFormat,glType,textureType.data);textureProperties.__maxMipLevel=mipmaps.length-1}else if(texture.isDataTexture3D)state.texImage3D(32879,0,glInternalFormat,slot.width,slot.height,slot.depth,0,glFormat,glType,slot.data),textureProperties.__maxMipLevel=
0;else if(0<mipmaps.length&&supportsMips){i=0;for(il=mipmaps.length;i<il;i++)textureType=mipmaps[i],state.texImage2D(3553,i,glInternalFormat,glFormat,glType,textureType);texture.generateMipmaps=!1;textureProperties.__maxMipLevel=mipmaps.length-1}else state.texImage2D(3553,0,glInternalFormat,glFormat,glType,slot),textureProperties.__maxMipLevel=0;textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(3553,texture,slot.width,slot.height);textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture)}
function setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){var glFormat=utils.convert(renderTarget.texture.format),glType=utils.convert(renderTarget.texture.type),glInternalFormat=getInternalFormat(glFormat,glType);state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);_gl.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(renderTarget.texture).__webglTexture,0);
_gl.bindFramebuffer(36160,null)}function setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer)isMultisample?(isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,33189,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,33189,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);
else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer)isMultisample?(isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,34041,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);else{renderbuffer=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);renderbuffer=getInternalFormat(renderbuffer,
glType);isMultisample?(isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,renderbuffer,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,renderbuffer,renderTarget.width,renderTarget.height)}_gl.bindRenderbuffer(36161,null)}function getRenderTargetSamples(renderTarget){return capabilities.isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(capabilities.maxSamples,renderTarget.samples):0}var _videoTextures={},_canvas,
useOffscreenCanvas="undefined"!==typeof OffscreenCanvas;this.setTexture2D=setTexture2D;this.setTexture3D=function(texture,slot){var textureProperties=properties.get(texture);0<texture.version&&textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):(state.activeTexture(33984+slot),state.bindTexture(32879,textureProperties.__webglTexture))};this.setTextureCube=function(texture,slot){var textureProperties=properties.get(texture);if(6===texture.image.length)if(0<texture.version&&
textureProperties.__version!==texture.version){initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);slot=texture&&texture.isCompressedTexture;for(var isDataTexture=texture.image[0]&&texture.image[0].isDataTexture,cubeImage=[],i=0;6>i;i++)cubeImage[i]=slot||isDataTexture?isDataTexture?texture.image[i].image:texture.image[i]:resizeImage(texture.image[i],!1,!0,capabilities.maxCubemapSize);
var image=cubeImage[0],supportsMips=isPowerOfTwo(image)||capabilities.isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(glFormat,glType);setTextureParameters(34067,texture,supportsMips);for(i=0;6>i;i++)if(slot)for(var mipmap,mipmaps=cubeImage[i].mipmaps,j=0,jl=mipmaps.length;j<jl;j++)mipmap=mipmaps[j],1023!==texture.format&&1022!==texture.format?-1<state.getCompressedTextureFormats().indexOf(glFormat)?state.compressedTexImage2D(34069+
i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);else isDataTexture?state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data):state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);textureProperties.__maxMipLevel=
slot?mipmaps.length-1:0;textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(34067,texture,image.width,image.height);textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture)}else state.activeTexture(33984+slot),state.bindTexture(34067,textureProperties.__webglTexture)};this.setTextureCubeDynamic=function(texture,slot){state.activeTexture(33984+slot);state.bindTexture(34067,properties.get(texture).__webglTexture)};this.setupRenderTarget=function(renderTarget){var renderTargetProperties=
properties.get(renderTarget),textureProperties=properties.get(renderTarget.texture);renderTarget.addEventListener("dispose",onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;var isCube=!0===renderTarget.isWebGLRenderTargetCube,isMultisample=!0===renderTarget.isWebGLMultisampleRenderTarget,supportsMips=isPowerOfTwo(renderTarget)||capabilities.isWebGL2;if(isCube)for(renderTargetProperties.__webglFramebuffer=[],isMultisample=0;6>isMultisample;isMultisample++)renderTargetProperties.__webglFramebuffer[isMultisample]=
_gl.createFramebuffer();else if(renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer(),isMultisample)if(capabilities.isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);isMultisample=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);isMultisample=getInternalFormat(isMultisample,
glType);glType=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,glType,isMultisample,renderTarget.width,renderTarget.height);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);renderTarget.depthBuffer&&(renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,
renderTarget,!0));_gl.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,renderTarget.texture,supportsMips);for(isMultisample=0;6>isMultisample;isMultisample++)setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[isMultisample],renderTarget,36064,34069+isMultisample);textureNeedsGenerateMipmaps(renderTarget.texture,
supportsMips)&&generateMipmap(34067,renderTarget.texture,renderTarget.width,renderTarget.height);state.bindTexture(34067,null)}else state.bindTexture(3553,textureProperties.__webglTexture),setTextureParameters(3553,renderTarget.texture,supportsMips),setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,3553),textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)&&generateMipmap(3553,renderTarget.texture,renderTarget.width,renderTarget.height),state.bindTexture(3553,
null);if(renderTarget.depthBuffer){renderTargetProperties=properties.get(renderTarget);textureProperties=!0===renderTarget.isWebGLRenderTargetCube;if(renderTarget.depthTexture){if(textureProperties)throw Error("target.depthTexture not supported in Cube render targets");if(renderTarget&&renderTarget.isWebGLRenderTargetCube)throw Error("Depth Texture with cube render targets is not supported");_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);if(!renderTarget.depthTexture||!renderTarget.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
properties.get(renderTarget.depthTexture).__webglTexture&&renderTarget.depthTexture.image.width===renderTarget.width&&renderTarget.depthTexture.image.height===renderTarget.height||(renderTarget.depthTexture.image.width=renderTarget.width,renderTarget.depthTexture.image.height=renderTarget.height,renderTarget.depthTexture.needsUpdate=!0);setTexture2D(renderTarget.depthTexture,0);renderTargetProperties=properties.get(renderTarget.depthTexture).__webglTexture;if(1026===renderTarget.depthTexture.format)_gl.framebufferTexture2D(36160,
36096,3553,renderTargetProperties,0);else if(1027===renderTarget.depthTexture.format)_gl.framebufferTexture2D(36160,33306,3553,renderTargetProperties,0);else throw Error("Unknown depthTexture format");}else if(textureProperties)for(renderTargetProperties.__webglDepthbuffer=[],textureProperties=0;6>textureProperties;textureProperties++)_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[textureProperties]),renderTargetProperties.__webglDepthbuffer[textureProperties]=_gl.createRenderbuffer(),
setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[textureProperties],renderTarget);else _gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget);_gl.bindFramebuffer(36160,null)}};this.updateRenderTargetMipmap=function(renderTarget){var texture=renderTarget.texture,supportsMips=isPowerOfTwo(renderTarget)||capabilities.isWebGL2;
if(textureNeedsGenerateMipmaps(texture,supportsMips)){supportsMips=renderTarget.isWebGLRenderTargetCube?34067:3553;var webglTexture=properties.get(texture).__webglTexture;state.bindTexture(supportsMips,webglTexture);generateMipmap(supportsMips,texture,renderTarget.width,renderTarget.height);state.bindTexture(supportsMips,null)}};this.updateMultisampleRenderTarget=function(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget)if(capabilities.isWebGL2){var renderTargetProperties=properties.get(renderTarget);
_gl.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);_gl.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);renderTargetProperties=renderTarget.width;var height=renderTarget.height,mask=16384;renderTarget.depthBuffer&&(mask|=256);renderTarget.stencilBuffer&&(mask|=1024);_gl.blitFramebuffer(0,0,renderTargetProperties,height,0,0,renderTargetProperties,height,mask,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}
function WebGLUtils(gl,extensions,capabilities){return{convert:function(p){if(1E3===p)return 10497;if(1001===p)return 33071;if(1002===p)return 33648;if(1003===p)return 9728;if(1004===p)return 9984;if(1005===p)return 9986;if(1006===p)return 9729;if(1007===p)return 9985;if(1008===p)return 9987;if(1009===p)return 5121;if(1017===p)return 32819;if(1018===p)return 32820;if(1019===p)return 33635;if(1010===p)return 5120;if(1011===p)return 5122;if(1012===p)return 5123;if(1013===p)return 5124;if(1014===p)return 5125;
if(1015===p)return 5126;if(1016===p){if(capabilities.isWebGL2)return 5131;var extension=extensions.get("OES_texture_half_float");if(null!==extension)return extension.HALF_FLOAT_OES}if(1021===p)return 6406;if(1022===p)return 6407;if(1023===p)return 6408;if(1024===p)return 6409;if(1025===p)return 6410;if(1026===p)return 6402;if(1027===p)return 34041;if(1028===p)return 6403;if(100===p)return 32774;if(101===p)return 32778;if(102===p)return 32779;if(200===p)return 0;if(201===p)return 1;if(202===p)return 768;
if(203===p)return 769;if(204===p)return 770;if(205===p)return 771;if(206===p)return 772;if(207===p)return 773;if(208===p)return 774;if(209===p)return 775;if(210===p)return 776;if(33776===p||33777===p||33778===p||33779===p)if(extension=extensions.get("WEBGL_compressed_texture_s3tc"),null!==extension){if(33776===p)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===p)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===p)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===p)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===
p||35841===p||35842===p||35843===p)if(extension=extensions.get("WEBGL_compressed_texture_pvrtc"),null!==extension){if(35840===p)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===p)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===p)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===p)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===p&&(extension=extensions.get("WEBGL_compressed_texture_etc1"),null!==extension))return extension.COMPRESSED_RGB_ETC1_WEBGL;if(37808===
p||37809===p||37810===p||37811===p||37812===p||37813===p||37814===p||37815===p||37816===p||37817===p||37818===p||37819===p||37820===p||37821===p)if(extension=extensions.get("WEBGL_compressed_texture_astc"),null!==extension)return p;if(103===p||104===p){if(capabilities.isWebGL2){if(103===p)return 32775;if(104===p)return 32776}extension=extensions.get("EXT_blend_minmax");if(null!==extension){if(103===p)return extension.MIN_EXT;if(104===p)return extension.MAX_EXT}}if(1020===p){if(capabilities.isWebGL2)return 34042;
extension=extensions.get("WEBGL_depth_texture");if(null!==extension)return extension.UNSIGNED_INT_24_8_WEBGL}return 0}}}function Group(){Object3D.call(this);this.type="Group"}function Camera(){Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new Matrix4;this.projectionMatrix=new Matrix4;this.projectionMatrixInverse=new Matrix4}function PerspectiveCamera(fov,aspect,near,far){Camera.call(this);this.type="PerspectiveCamera";this.fov=void 0!==fov?fov:50;this.zoom=1;this.near=void 0!==near?
near:.1;this.far=void 0!==far?far:2E3;this.focus=10;this.aspect=void 0!==aspect?aspect:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function ArrayCamera(array){PerspectiveCamera.call(this);this.cameras=array||[]}function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);var ipd=cameraLPos.distanceTo(cameraRPos),projL=cameraL.projectionMatrix.elements,projR=
cameraR.projectionMatrix.elements,near=projL[14]/(projL[10]-1);cameraR=projL[14]/(projL[10]+1);var topFov=(projL[9]+1)/projL[5],bottomFov=(projL[9]-1)/projL[5],leftFov=(projL[8]-1)/projL[0],rightFov=(projR[8]+1)/projR[0];projL=near*leftFov;projR=near*rightFov;rightFov=ipd/(-leftFov+rightFov);leftFov=rightFov*-leftFov;cameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(leftFov);camera.translateZ(rightFov);camera.matrixWorld.compose(camera.position,camera.quaternion,
camera.scale);camera.matrixWorldInverse.getInverse(camera.matrixWorld);cameraL=near+rightFov;near=cameraR+rightFov;camera.projectionMatrix.makePerspective(projL-leftFov,projR+(ipd-leftFov),topFov*cameraR/near*cameraL,bottomFov*cameraR/near*cameraL,cameraL,near)}function WebVRManager(renderer){function isPresenting(){return null!==device&&!0===device.isPresenting}function onVRDisplayPresentChange(){if(isPresenting()){var eyeParameters=device.getEyeParameters("left"),renderWidth=eyeParameters.renderWidth*
framebufferScaleFactor;eyeParameters=eyeParameters.renderHeight*framebufferScaleFactor;currentPixelRatio=renderer.getPixelRatio();renderer.getSize(currentSize);renderer.setDrawingBufferSize(2*renderWidth,eyeParameters,1);animation.start()}else scope.enabled&&renderer.setDrawingBufferSize(currentSize.width,currentSize.height,currentPixelRatio),animation.stop()}var scope=this,device=null,frameData=null,poseTarget=null,controllers=[],standingMatrix=new Matrix4,standingMatrixInverse=new Matrix4,framebufferScaleFactor=
1,frameOfReferenceType="stage";"undefined"!==typeof window&&"VRFrameData"in window&&(frameData=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",onVRDisplayPresentChange,!1));var matrixWorldInverse=new Matrix4,tempQuaternion=new Quaternion,tempPosition=new Vector3,cameraL=new PerspectiveCamera;cameraL.bounds=new Vector4(0,0,.5,1);cameraL.layers.enable(1);var cameraR=new PerspectiveCamera;cameraR.bounds=new Vector4(.5,0,.5,1);cameraR.layers.enable(2);var cameraVR=new ArrayCamera([cameraL,
cameraR]);cameraVR.layers.enable(1);cameraVR.layers.enable(2);var currentSize=new Vector2,currentPixelRatio,triggers=[];this.enabled=!1;this.getController=function(id){var controller=controllers[id];void 0===controller&&(controller=new Group,controller.matrixAutoUpdate=!1,controller.visible=!1,controllers[id]=controller);return controller};this.getDevice=function(){return device};this.setDevice=function(value){void 0!==value&&(device=value);animation.setContext(value)};this.setFramebufferScaleFactor=
function(value){framebufferScaleFactor=value};this.setFrameOfReferenceType=function(value){frameOfReferenceType=value};this.setPoseTarget=function(object){void 0!==object&&(poseTarget=object)};this.getCamera=function(camera){var userHeight="stage"===frameOfReferenceType?1.6:0;if(!1===isPresenting())return camera.position.set(0,userHeight,0),camera.rotation.set(0,0,0),camera;device.depthNear=camera.near;device.depthFar=camera.far;device.getFrameData(frameData);if("stage"===frameOfReferenceType){var stageParameters=
device.stageParameters;stageParameters?standingMatrix.fromArray(stageParameters.sittingToStandingTransform):standingMatrix.makeTranslation(0,userHeight,0)}userHeight=frameData.pose;stageParameters=null!==poseTarget?poseTarget:camera;stageParameters.matrix.copy(standingMatrix);stageParameters.matrix.decompose(stageParameters.position,stageParameters.quaternion,stageParameters.scale);null!==userHeight.orientation&&(tempQuaternion.fromArray(userHeight.orientation),stageParameters.quaternion.multiply(tempQuaternion));
null!==userHeight.position&&(tempQuaternion.setFromRotationMatrix(standingMatrix),tempPosition.fromArray(userHeight.position),tempPosition.applyQuaternion(tempQuaternion),stageParameters.position.add(tempPosition));stageParameters.updateMatrixWorld();cameraL.near=camera.near;cameraR.near=camera.near;cameraL.far=camera.far;cameraR.far=camera.far;cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix);standingMatrixInverse.getInverse(standingMatrix);
"stage"===frameOfReferenceType&&(cameraL.matrixWorldInverse.multiply(standingMatrixInverse),cameraR.matrixWorldInverse.multiply(standingMatrixInverse));camera=stageParameters.parent;null!==camera&&(matrixWorldInverse.getInverse(camera.matrixWorld),cameraL.matrixWorldInverse.multiply(matrixWorldInverse),cameraR.matrixWorldInverse.multiply(matrixWorldInverse));cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);
cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix);setProjectionFromUnion(cameraVR,cameraL,cameraR);camera=device.getLayers();camera.length&&(camera=camera[0],null!==camera.leftBounds&&4===camera.leftBounds.length&&cameraL.bounds.fromArray(camera.leftBounds),null!==camera.rightBounds&&4===camera.rightBounds.length&&cameraR.bounds.fromArray(camera.rightBounds));a:for(camera=0;camera<controllers.length;camera++){userHeight=controllers[camera];b:{stageParameters=camera;for(var gamepads=
navigator.getGamepads&&navigator.getGamepads(),i=0,j=0,l=gamepads.length;i<l;i++){var gamepad=gamepads[i];if(gamepad&&("Daydream Controller"===gamepad.id||"Gear VR Controller"===gamepad.id||"Oculus Go Controller"===gamepad.id||"OpenVR Gamepad"===gamepad.id||gamepad.id.startsWith("Oculus Touch")||gamepad.id.startsWith("Spatial Controller"))){if(j===stageParameters){stageParameters=gamepad;break b}j++}}stageParameters=void 0}if(void 0!==stageParameters&&void 0!==stageParameters.pose){if(null===stageParameters.pose)break a;
gamepads=stageParameters.pose;!1===gamepads.hasPosition&&userHeight.position.set(.2,-.6,-.05);null!==gamepads.position&&userHeight.position.fromArray(gamepads.position);null!==gamepads.orientation&&userHeight.quaternion.fromArray(gamepads.orientation);userHeight.matrix.compose(userHeight.position,userHeight.quaternion,userHeight.scale);userHeight.matrix.premultiply(standingMatrix);userHeight.matrix.decompose(userHeight.position,userHeight.quaternion,userHeight.scale);userHeight.matrixWorldNeedsUpdate=
!0;userHeight.visible=!0;gamepads="Daydream Controller"===stageParameters.id?0:1;triggers[camera]!==stageParameters.buttons[gamepads].pressed&&(triggers[camera]=stageParameters.buttons[gamepads].pressed,!0===triggers[camera]?userHeight.dispatchEvent({type:"selectstart"}):(userHeight.dispatchEvent({type:"selectend"}),userHeight.dispatchEvent({type:"select"})))}else userHeight.visible=!1}return cameraVR};this.getStandingMatrix=function(){return standingMatrix};this.isPresenting=isPresenting;var animation=
new WebGLAnimation;this.setAnimationLoop=function(callback){animation.setAnimationLoop(callback)};this.submitFrame=function(){isPresenting()&&device.submitFrame()};this.dispose=function(){"undefined"!==typeof window&&window.removeEventListener("vrdisplaypresentchange",onVRDisplayPresentChange)}}function WebXRManager(renderer){function isPresenting(){return null!==session&&null!==frameOfReference}function onSessionEvent(event){var controller=controllers[inputSources.indexOf(event.inputSource)];controller&&
controller.dispatchEvent({type:event.type})}function onSessionEnd(){renderer.setFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());animation.stop()}function updateCamera(camera,parent){null===parent?camera.matrixWorld.copy(camera.matrix):camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);camera.matrixWorldInverse.getInverse(camera.matrixWorld)}var gl=renderer.context,device=null,session=null,framebufferScaleFactor=1,frameOfReference=null,frameOfReferenceType=
"stage",pose=null,controllers=[],inputSources=[],cameraL=new PerspectiveCamera;cameraL.layers.enable(1);cameraL.viewport=new Vector4;var cameraR=new PerspectiveCamera;cameraR.layers.enable(2);cameraR.viewport=new Vector4;var cameraVR=new ArrayCamera([cameraL,cameraR]);cameraVR.layers.enable(1);cameraVR.layers.enable(2);this.enabled=!1;this.getController=function(id){var controller=controllers[id];void 0===controller&&(controller=new Group,controller.matrixAutoUpdate=!1,controller.visible=!1,controllers[id]=
controller);return controller};this.getDevice=function(){return device};this.setDevice=function(value){void 0!==value&&(device=value);value instanceof XRDevice&&gl.setCompatibleXRDevice(value)};this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value};this.setFrameOfReferenceType=function(value){frameOfReferenceType=value};this.setSession=function(value$jscomp$0){session=value$jscomp$0;null!==session&&(session.addEventListener("select",onSessionEvent),session.addEventListener("selectstart",
onSessionEvent),session.addEventListener("selectend",onSessionEvent),session.addEventListener("end",onSessionEnd),session.baseLayer=new XRWebGLLayer(session,gl,{framebufferScaleFactor:framebufferScaleFactor}),session.requestFrameOfReference(frameOfReferenceType).then(function(value){frameOfReference=value;renderer.setFramebuffer(session.baseLayer.framebuffer);animation.setContext(session);animation.start()}),inputSources=session.getInputSources(),session.addEventListener("inputsourceschange",function(){inputSources=
session.getInputSources();console.log(inputSources);for(var i=0;i<controllers.length;i++)controllers[i].userData.inputSource=inputSources[i]}))};this.getCamera=function(camera){if(isPresenting()){var parent=camera.parent,cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(var i=0;i<cameras.length;i++)updateCamera(cameras[i],parent);camera.matrixWorld.copy(cameraVR.matrixWorld);camera=camera.children;i=0;for(parent=camera.length;i<parent;i++)camera[i].updateMatrixWorld(!0);setProjectionFromUnion(cameraVR,
cameraL,cameraR);return cameraVR}return camera};this.isPresenting=isPresenting;var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time,frame){pose=frame.getDevicePose(frameOfReference);if(null!==pose)for(var layer=session.baseLayer,views=frame.views,i=0;i<views.length;i++){var view=views[i],viewport=layer.getViewport(view),viewMatrix=pose.getViewMatrix(view),camera=cameraVR.cameras[i];camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);
camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);0===i&&cameraVR.matrix.copy(camera.matrix)}for(i=0;i<controllers.length;i++){layer=controllers[i];if(views=inputSources[i])if(views=frame.getInputPose(views,frameOfReference),null!==views){"targetRay"in views?layer.matrix.elements=views.targetRay.transformMatrix:"pointerMatrix"in views&&(layer.matrix.elements=views.pointerMatrix);layer.matrix.decompose(layer.position,layer.rotation,layer.scale);layer.visible=!0;continue}layer.visible=
!1}onAnimationFrameCallback&&onAnimationFrameCallback(time)});this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback};this.dispose=function(){};this.getStandingMatrix=function(){console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed.");return new Matrix4};this.submitFrame=function(){}}function WebGLRenderer(parameters){var JSCompiler_object_inline_geometry_310;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,
extensions,parameters);capabilities.isWebGL2||(extensions.get("WEBGL_depth_texture"),extensions.get("OES_texture_float"),extensions.get("OES_texture_half_float"),extensions.get("OES_texture_half_float_linear"),extensions.get("OES_standard_derivatives"),extensions.get("OES_element_index_uint"),extensions.get("ANGLE_instanced_arrays"));extensions.get("OES_texture_float_linear");utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,utils,capabilities);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));
state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));info=new WebGLInfo(_gl);properties=new WebGLProperties;textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);attributes=new WebGLAttributes(_gl);geometries=new WebGLGeometries(_gl,attributes,info);objects=new WebGLObjects(geometries,info);morphtargets=new WebGLMorphtargets(_gl);programCache=new WebGLPrograms(_this,extensions,capabilities);renderLists=new WebGLRenderLists;renderStates=new WebGLRenderStates;
background=new WebGLBackground(_this,state,objects,_premultipliedAlpha);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.context=_gl;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.state=state;_this.info=info}function onContextLost(event){event.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");
_isContextLost=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored.");_isContextLost=!1;initGLContext()}function onMaterialDispose(event){event=event.target;event.removeEventListener("dispose",onMaterialDispose);releaseMaterialProgramReference(event);properties.remove(event)}function releaseMaterialProgramReference(material){var programInfo=properties.get(material).program;material.program=void 0;void 0!==programInfo&&programCache.releaseProgram(programInfo)}function renderObjectImmediate(object$jscomp$0,
program){object$jscomp$0.render(function(object){_this.renderBufferImmediate(object,program)})}function projectObject(object,camera,groupOrder,sortObjects){if(!1!==object.visible){if(object.layers.test(camera.layers))if(object.isGroup)groupOrder=object.renderOrder;else if(object.isLight)currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){sortObjects&&_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);
var geometry=objects.update(object),material=object.material;currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null)}}else if(object.isImmediateRenderObject)sortObjects&&_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix),currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);else if(object.isMesh||object.isLine||object.isPoints)if(object.isSkinnedMesh&&object.skeleton.update(),!object.frustumCulled||_frustum.intersectsObject(object))if(sortObjects&&
_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix),geometry=objects.update(object),material=object.material,Array.isArray(material))for(var groups=geometry.groups,i=0,l=groups.length;i<l;i++){var group=groups[i],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group)}else material.visible&&currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,
null);object=object.children;i=0;for(l=object.length;i<l;i++)projectObject(object[i],camera,groupOrder,sortObjects)}}function renderObjects(renderList,scene,camera,overrideMaterial){for(var i=0,l=renderList.length;i<l;i++){var renderItem=renderList[i],object=renderItem.object,geometry=renderItem.geometry,material=void 0===overrideMaterial?renderItem.material:overrideMaterial;renderItem=renderItem.group;if(camera.isArrayCamera){_currentArrayCamera=camera;for(var cameras=camera.cameras,j=0,jl=cameras.length;j<
jl;j++){var camera2=cameras[j];if(object.layers.test(camera2.layers)){if("viewport"in camera2)state.viewport(_currentViewport.copy(camera2.viewport));else{var bounds=camera2.bounds;state.viewport(_currentViewport.set(bounds.x*_width,bounds.y*_height,bounds.z*_width,bounds.w*_height).multiplyScalar(_pixelRatio))}currentRenderState.setupLights(camera2);renderObject(object,scene,camera2,geometry,material,renderItem)}}}else _currentArrayCamera=null,renderObject(object,scene,camera,geometry,material,renderItem)}}
function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){state.setMaterial(material);var program=setProgram(camera,scene.fog,material,object);JSCompiler_object_inline_program_311=
JSCompiler_object_inline_geometry_310=null;JSCompiler_object_inline_wireframe_312=!1;renderObjectImmediate(object,program)}else _this.renderBufferDirect(camera,scene.fog,geometry,material,object,group);object.onAfterRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera)}function initMaterial(material,fog,object){var materialProperties=properties.get(material),lights=currentRenderState.state.lights,lightsHash=materialProperties.lightsHash,
lightsStateHash=lights.state.hash;object=programCache.getParameters(material,lights.state,currentRenderState.state.shadowsArray,fog,_clipping.numPlanes,_clipping.numIntersection,object);var code=programCache.getProgramCode(material,object),program=materialProperties.program,programChange=!0;if(void 0===program)material.addEventListener("dispose",onMaterialDispose);else if(program.code!==code)releaseMaterialProgramReference(material);else{if(lightsHash.stateID!==lightsStateHash.stateID||lightsHash.directionalLength!==
lightsStateHash.directionalLength||lightsHash.pointLength!==lightsStateHash.pointLength||lightsHash.spotLength!==lightsStateHash.spotLength||lightsHash.rectAreaLength!==lightsStateHash.rectAreaLength||lightsHash.hemiLength!==lightsStateHash.hemiLength||lightsHash.shadowsLength!==lightsStateHash.shadowsLength)lightsHash.stateID=lightsStateHash.stateID,lightsHash.directionalLength=lightsStateHash.directionalLength,lightsHash.pointLength=lightsStateHash.pointLength,lightsHash.spotLength=lightsStateHash.spotLength,
lightsHash.rectAreaLength=lightsStateHash.rectAreaLength,lightsHash.hemiLength=lightsStateHash.hemiLength,lightsHash.shadowsLength=lightsStateHash.shadowsLength;else if(void 0!==object.shaderID)return;programChange=!1}programChange&&(object.shaderID?(code=ShaderLib[object.shaderID],materialProperties.shader={name:material.type,uniforms:cloneUniforms(code.uniforms),vertexShader:code.vertexShader,fragmentShader:code.fragmentShader}):materialProperties.shader={name:material.type,uniforms:material.uniforms,
vertexShader:material.vertexShader,fragmentShader:material.fragmentShader},material.onBeforeCompile(materialProperties.shader,_this),code=programCache.getProgramCode(material,object),program=programCache.acquireProgram(material,materialProperties.shader,object,code),materialProperties.program=program,material.program=program);object=program.getAttributes();if(material.morphTargets)for(code=material.numSupportedMorphTargets=0;code<_this.maxMorphTargets;code++)0<=object["morphTarget"+code]&&material.numSupportedMorphTargets++;
if(material.morphNormals)for(code=material.numSupportedMorphNormals=0;code<_this.maxMorphNormals;code++)0<=object["morphNormal"+code]&&material.numSupportedMorphNormals++;object=materialProperties.shader.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||!0===material.clipping)materialProperties.numClippingPlanes=_clipping.numPlanes,materialProperties.numIntersection=_clipping.numIntersection,object.clippingPlanes=_clipping.uniform;materialProperties.fog=fog;void 0===lightsHash&&
(materialProperties.lightsHash=lightsHash={});lightsHash.stateID=lightsStateHash.stateID;lightsHash.directionalLength=lightsStateHash.directionalLength;lightsHash.pointLength=lightsStateHash.pointLength;lightsHash.spotLength=lightsStateHash.spotLength;lightsHash.rectAreaLength=lightsStateHash.rectAreaLength;lightsHash.hemiLength=lightsStateHash.hemiLength;lightsHash.shadowsLength=lightsStateHash.shadowsLength;material.lights&&(object.ambientLightColor.value=lights.state.ambient,object.directionalLights.value=
lights.state.directional,object.spotLights.value=lights.state.spot,object.rectAreaLights.value=lights.state.rectArea,object.pointLights.value=lights.state.point,object.hemisphereLights.value=lights.state.hemi,object.directionalShadowMap.value=lights.state.directionalShadowMap,object.directionalShadowMatrix.value=lights.state.directionalShadowMatrix,object.spotShadowMap.value=lights.state.spotShadowMap,object.spotShadowMatrix.value=lights.state.spotShadowMatrix,object.pointShadowMap.value=lights.state.pointShadowMap,
object.pointShadowMatrix.value=lights.state.pointShadowMatrix);material=materialProperties.program.getUniforms();material=WebGLUniforms.seqWithValue(material.seq,object);materialProperties.uniformsList=material}function setProgram(camera,fog,material,object){_usedTextureUnits=0;var materialProperties=properties.get(material),lightsHash=materialProperties.lightsHash,lightsStateHash=currentRenderState.state.lights.state.hash;_clippingEnabled&&(_localClippingEnabled||camera!==_currentCamera)&&_clipping.setState(material.clippingPlanes,
material.clipIntersection,material.clipShadows,camera,materialProperties,camera===_currentCamera&&material.id===_currentMaterialId);!1===material.needsUpdate&&(void 0===materialProperties.program?material.needsUpdate=!0:material.fog&&materialProperties.fog!==fog?material.needsUpdate=!0:!material.lights||lightsHash.stateID===lightsStateHash.stateID&&lightsHash.directionalLength===lightsStateHash.directionalLength&&lightsHash.pointLength===lightsStateHash.pointLength&&lightsHash.spotLength===lightsStateHash.spotLength&&
lightsHash.rectAreaLength===lightsStateHash.rectAreaLength&&lightsHash.hemiLength===lightsStateHash.hemiLength&&lightsHash.shadowsLength===lightsStateHash.shadowsLength?void 0===materialProperties.numClippingPlanes||materialProperties.numClippingPlanes===_clipping.numPlanes&&materialProperties.numIntersection===_clipping.numIntersection||(material.needsUpdate=!0):material.needsUpdate=!0);material.needsUpdate&&(initMaterial(material,fog,object),material.needsUpdate=!1);var refreshProgram=!1,refreshMaterial=
!1,refreshLights=!1;lightsHash=materialProperties.program;lightsStateHash=lightsHash.getUniforms();var m_uniforms=materialProperties.shader.uniforms;state.useProgram(lightsHash.program)&&(refreshLights=refreshMaterial=refreshProgram=!0);material.id!==_currentMaterialId&&(_currentMaterialId=material.id,refreshMaterial=!0);if(refreshProgram||_currentCamera!==camera){lightsStateHash.setValue(_gl,"projectionMatrix",camera.projectionMatrix);capabilities.logarithmicDepthBuffer&&lightsStateHash.setValue(_gl,
"logDepthBufFC",2/(Math.log(camera.far+1)/Math.LN2));_currentCamera!==camera&&(_currentCamera=camera,refreshLights=refreshMaterial=!0);if(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.envMap)refreshProgram=lightsStateHash.map.cameraPosition,void 0!==refreshProgram&&refreshProgram.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));(material.isMeshPhongMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||
material.isShaderMaterial||material.skinning)&&lightsStateHash.setValue(_gl,"viewMatrix",camera.matrixWorldInverse)}if(material.skinning&&(lightsStateHash.setOptional(_gl,object,"bindMatrix"),lightsStateHash.setOptional(_gl,object,"bindMatrixInverse"),camera=object.skeleton))if(refreshProgram=camera.bones,capabilities.floatVertexTextures){if(void 0===camera.boneTexture){refreshProgram=Math.sqrt(4*refreshProgram.length);refreshProgram=_Math.ceilPowerOfTwo(refreshProgram);refreshProgram=Math.max(refreshProgram,
4);var boneMatrices=new Float32Array(refreshProgram*refreshProgram*4);boneMatrices.set(camera.boneMatrices);var boneTexture=new DataTexture(boneMatrices,refreshProgram,refreshProgram,1023,1015);boneTexture.needsUpdate=!0;camera.boneMatrices=boneMatrices;camera.boneTexture=boneTexture;camera.boneTextureSize=refreshProgram}lightsStateHash.setValue(_gl,"boneTexture",camera.boneTexture);lightsStateHash.setValue(_gl,"boneTextureSize",camera.boneTextureSize)}else lightsStateHash.setOptional(_gl,camera,
"boneMatrices");refreshMaterial&&(lightsStateHash.setValue(_gl,"toneMappingExposure",_this.toneMappingExposure),lightsStateHash.setValue(_gl,"toneMappingWhitePoint",_this.toneMappingWhitePoint),material.lights&&(refreshMaterial=refreshLights,m_uniforms.ambientLightColor.needsUpdate=refreshMaterial,m_uniforms.directionalLights.needsUpdate=refreshMaterial,m_uniforms.pointLights.needsUpdate=refreshMaterial,m_uniforms.spotLights.needsUpdate=refreshMaterial,m_uniforms.rectAreaLights.needsUpdate=refreshMaterial,
m_uniforms.hemisphereLights.needsUpdate=refreshMaterial),fog&&material.fog&&(m_uniforms.fogColor.value=fog.color,fog.isFog?(m_uniforms.fogNear.value=fog.near,m_uniforms.fogFar.value=fog.far):fog.isFogExp2&&(m_uniforms.fogDensity.value=fog.density)),material.isMeshBasicMaterial?refreshUniformsCommon(m_uniforms,material):material.isMeshLambertMaterial?(refreshUniformsCommon(m_uniforms,material),material.emissiveMap&&(m_uniforms.emissiveMap.value=material.emissiveMap)):material.isMeshPhongMaterial?(refreshUniformsCommon(m_uniforms,
material),material.isMeshToonMaterial?(refreshUniformsPhong(m_uniforms,material),material.gradientMap&&(m_uniforms.gradientMap.value=material.gradientMap)):refreshUniformsPhong(m_uniforms,material)):material.isMeshStandardMaterial?(refreshUniformsCommon(m_uniforms,material),material.isMeshPhysicalMaterial?(refreshUniformsStandard(m_uniforms,material),m_uniforms.reflectivity.value=material.reflectivity,m_uniforms.clearCoat.value=material.clearCoat,m_uniforms.clearCoatRoughness.value=material.clearCoatRoughness):
refreshUniformsStandard(m_uniforms,material)):material.isMeshMatcapMaterial?(refreshUniformsCommon(m_uniforms,material),material.matcap&&(m_uniforms.matcap.value=material.matcap),material.bumpMap&&(m_uniforms.bumpMap.value=material.bumpMap,m_uniforms.bumpScale.value=material.bumpScale,1===material.side&&(m_uniforms.bumpScale.value*=-1)),material.normalMap&&(m_uniforms.normalMap.value=material.normalMap,m_uniforms.normalScale.value.copy(material.normalScale),1===material.side&&m_uniforms.normalScale.value.negate()),
material.displacementMap&&(m_uniforms.displacementMap.value=material.displacementMap,m_uniforms.displacementScale.value=material.displacementScale,m_uniforms.displacementBias.value=material.displacementBias)):material.isMeshDepthMaterial?(refreshUniformsCommon(m_uniforms,material),material.displacementMap&&(m_uniforms.displacementMap.value=material.displacementMap,m_uniforms.displacementScale.value=material.displacementScale,m_uniforms.displacementBias.value=material.displacementBias)):material.isMeshDistanceMaterial?
(refreshUniformsCommon(m_uniforms,material),material.displacementMap&&(m_uniforms.displacementMap.value=material.displacementMap,m_uniforms.displacementScale.value=material.displacementScale,m_uniforms.displacementBias.value=material.displacementBias),m_uniforms.referencePosition.value.copy(material.referencePosition),m_uniforms.nearDistance.value=material.nearDistance,m_uniforms.farDistance.value=material.farDistance):material.isMeshNormalMaterial?(refreshUniformsCommon(m_uniforms,material),material.bumpMap&&
(m_uniforms.bumpMap.value=material.bumpMap,m_uniforms.bumpScale.value=material.bumpScale,1===material.side&&(m_uniforms.bumpScale.value*=-1)),material.normalMap&&(m_uniforms.normalMap.value=material.normalMap,m_uniforms.normalScale.value.copy(material.normalScale),1===material.side&&m_uniforms.normalScale.value.negate()),material.displacementMap&&(m_uniforms.displacementMap.value=material.displacementMap,m_uniforms.displacementScale.value=material.displacementScale,m_uniforms.displacementBias.value=
material.displacementBias)):material.isLineBasicMaterial?(m_uniforms.diffuse.value=material.color,m_uniforms.opacity.value=material.opacity,material.isLineDashedMaterial&&(m_uniforms.dashSize.value=material.dashSize,m_uniforms.totalSize.value=material.dashSize+material.gapSize,m_uniforms.scale.value=material.scale)):material.isPointsMaterial?(m_uniforms.diffuse.value=material.color,m_uniforms.opacity.value=material.opacity,m_uniforms.size.value=material.size*_pixelRatio,m_uniforms.scale.value=.5*
_height,m_uniforms.map.value=material.map,null!==material.map&&(!0===material.map.matrixAutoUpdate&&material.map.updateMatrix(),m_uniforms.uvTransform.value.copy(material.map.matrix))):material.isSpriteMaterial?(m_uniforms.diffuse.value=material.color,m_uniforms.opacity.value=material.opacity,m_uniforms.rotation.value=material.rotation,m_uniforms.map.value=material.map,null!==material.map&&(!0===material.map.matrixAutoUpdate&&material.map.updateMatrix(),m_uniforms.uvTransform.value.copy(material.map.matrix))):
material.isShadowMaterial&&(m_uniforms.color.value=material.color,m_uniforms.opacity.value=material.opacity),void 0!==m_uniforms.ltc_1&&(m_uniforms.ltc_1.value=UniformsLib.LTC_1),void 0!==m_uniforms.ltc_2&&(m_uniforms.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,_this));material.isShaderMaterial&&!0===material.uniformsNeedUpdate&&(WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,_this),material.uniformsNeedUpdate=!1);material.isSpriteMaterial&&
lightsStateHash.setValue(_gl,"center",object.center);lightsStateHash.setValue(_gl,"modelViewMatrix",object.modelViewMatrix);lightsStateHash.setValue(_gl,"normalMatrix",object.normalMatrix);lightsStateHash.setValue(_gl,"modelMatrix",object.matrixWorld);return lightsHash}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;material.color&&(uniforms.diffuse.value=material.color);material.emissive&&uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);
material.map&&(uniforms.map.value=material.map);material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);material.specularMap&&(uniforms.specularMap.value=material.specularMap);material.envMap&&(uniforms.envMap.value=material.envMap,uniforms.flipEnvMap.value=material.envMap.isCubeTexture?-1:1,uniforms.reflectivity.value=material.reflectivity,uniforms.refractionRatio.value=material.refractionRatio,uniforms.maxMipLevel.value=properties.get(material.envMap).__maxMipLevel);material.lightMap&&(uniforms.lightMap.value=
material.lightMap,uniforms.lightMapIntensity.value=material.lightMapIntensity);material.aoMap&&(uniforms.aoMap.value=material.aoMap,uniforms.aoMapIntensity.value=material.aoMapIntensity);if(material.map)var uvScaleMap=material.map;else material.specularMap?uvScaleMap=material.specularMap:material.displacementMap?uvScaleMap=material.displacementMap:material.normalMap?uvScaleMap=material.normalMap:material.bumpMap?uvScaleMap=material.bumpMap:material.roughnessMap?uvScaleMap=material.roughnessMap:material.metalnessMap?
uvScaleMap=material.metalnessMap:material.alphaMap?uvScaleMap=material.alphaMap:material.emissiveMap&&(uvScaleMap=material.emissiveMap);void 0!==uvScaleMap&&(uvScaleMap.isWebGLRenderTarget&&(uvScaleMap=uvScaleMap.texture),!0===uvScaleMap.matrixAutoUpdate&&uvScaleMap.updateMatrix(),uniforms.uvTransform.value.copy(uvScaleMap.matrix))}function refreshUniformsPhong(uniforms,material){uniforms.specular.value=material.specular;uniforms.shininess.value=Math.max(material.shininess,1E-4);material.emissiveMap&&
(uniforms.emissiveMap.value=material.emissiveMap);material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,1===material.side&&(uniforms.bumpScale.value*=-1));material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),1===material.side&&uniforms.normalScale.value.negate());material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,
uniforms.displacementBias.value=material.displacementBias)}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;material.roughnessMap&&(uniforms.roughnessMap.value=material.roughnessMap);material.metalnessMap&&(uniforms.metalnessMap.value=material.metalnessMap);material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap);material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=
material.bumpScale,1===material.side&&(uniforms.bumpScale.value*=-1));material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),1===material.side&&uniforms.normalScale.value.negate());material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);material.envMap&&(uniforms.envMapIntensity.value=material.envMapIntensity)}
console.log("THREE.WebGLRenderer","102");parameters=parameters||{};var _canvas=void 0!==parameters.canvas?parameters.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),_context=void 0!==parameters.context?parameters.context:null,_alpha=void 0!==parameters.alpha?parameters.alpha:!1,_depth=void 0!==parameters.depth?parameters.depth:!0,_stencil=void 0!==parameters.stencil?parameters.stencil:!0,_antialias=void 0!==parameters.antialias?parameters.antialias:!1,_premultipliedAlpha=
void 0!==parameters.premultipliedAlpha?parameters.premultipliedAlpha:!0,_preserveDrawingBuffer=void 0!==parameters.preserveDrawingBuffer?parameters.preserveDrawingBuffer:!1,_powerPreference=void 0!==parameters.powerPreference?parameters.powerPreference:"default",currentRenderList=null,currentRenderState=null;this.domElement=_canvas;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;
this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var _this=this,_isContextLost=!1,_framebuffer=null,_currentRenderTarget=null,_currentFramebuffer=null,_currentMaterialId=-1;var JSCompiler_object_inline_program_311=JSCompiler_object_inline_geometry_310=null;var JSCompiler_object_inline_wireframe_312=!1;var _currentCamera=null,_currentArrayCamera=null,
_currentViewport=new Vector4,_currentScissor=new Vector4,_currentScissorTest=null,_usedTextureUnits=0,_width=_canvas.width,_height=_canvas.height,_pixelRatio=1,_viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height),_scissorTest=!1,_frustum=new Frustum,_clipping=new WebGLClipping,_clippingEnabled=!1,_localClippingEnabled=!1,_projScreenMatrix=new Matrix4,_vector3=new Vector3;try{_alpha={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,
preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference};_canvas.addEventListener("webglcontextlost",onContextLost,!1);_canvas.addEventListener("webglcontextrestored",onContextRestore,!1);var _gl=_context||_canvas.getContext("webgl",_alpha)||_canvas.getContext("experimental-webgl",_alpha);if(null===_gl){if(null!==_canvas.getContext("webgl"))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.");}void 0===_gl.getShaderPrecisionFormat&&
(_gl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(error){throw console.error("THREE.WebGLRenderer: "+error.message),error;}var extensions,capabilities,state,info,properties,textures,attributes,geometries,objects,programCache,renderLists,renderStates,background,morphtargets,bufferRenderer,indexedBufferRenderer,utils;initGLContext();var vr=null;"undefined"!==typeof navigator&&(vr="xr"in navigator?new WebXRManager(_this):new WebVRManager(_this));this.vr=vr;var shadowMap=
new WebGLShadowMap(_this,objects,capabilities.maxTextureSize);this.shadowMap=shadowMap;this.getContext=function(){return _gl};this.getContextAttributes=function(){return _gl.getContextAttributes()};this.forceContextLoss=function(){var extension=extensions.get("WEBGL_lose_context");extension&&extension.loseContext()};this.forceContextRestore=function(){var extension=extensions.get("WEBGL_lose_context");extension&&extension.restoreContext()};this.getPixelRatio=function(){return _pixelRatio};this.setPixelRatio=
function(value){void 0!==value&&(_pixelRatio=value,this.setSize(_width,_height,!1))};this.getSize=function(target){void 0===target&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),target=new Vector2);return target.set(_width,_height)};this.setSize=function(width,height,updateStyle){vr.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_width=width,_height=height,_canvas.width=width*_pixelRatio,_canvas.height=height*
_pixelRatio,!1!==updateStyle&&(_canvas.style.width=width+"px",_canvas.style.height=height+"px"),this.setViewport(0,0,width,height))};this.getDrawingBufferSize=function(target){void 0===target&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),target=new Vector2);return target.set(_width*_pixelRatio,_height*_pixelRatio)};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=width*pixelRatio;
_canvas.height=height*pixelRatio;this.setViewport(0,0,width,height)};this.getCurrentViewport=function(target){void 0===target&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),target=new Vector4);return target.copy(_currentViewport)};this.getViewport=function(target){return target.copy(_viewport)};this.setViewport=function(x,y,width,height){x.isVector4?_viewport.set(x.x,x.y,x.z,x.w):_viewport.set(x,y,width,height);state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio))};
this.getScissor=function(target){return target.copy(_scissor)};this.setScissor=function(x,y,width,height){x.isVector4?_scissor.set(x.x,x.y,x.z,x.w):_scissor.set(x,y,width,height);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio))};this.getScissorTest=function(){return _scissorTest};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean)};this.getClearColor=function(){return background.getClearColor()};this.setClearColor=function(){background.setClearColor.apply(background,
arguments)};this.getClearAlpha=function(){return background.getClearAlpha()};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments)};this.clear=function(color,depth,stencil){var bits=0;if(void 0===color||color)bits|=16384;if(void 0===depth||depth)bits|=256;if(void 0===stencil||stencil)bits|=1024;_gl.clear(bits)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.dispose=
function(){_canvas.removeEventListener("webglcontextlost",onContextLost,!1);_canvas.removeEventListener("webglcontextrestored",onContextRestore,!1);renderLists.dispose();renderStates.dispose();properties.dispose();objects.dispose();vr.dispose();animation.stop()};this.renderBufferImmediate=function(object,program){state.initAttributes();var buffers=properties.get(object);object.hasPositions&&!buffers.position&&(buffers.position=_gl.createBuffer());object.hasNormals&&!buffers.normal&&(buffers.normal=
_gl.createBuffer());object.hasUvs&&!buffers.uv&&(buffers.uv=_gl.createBuffer());object.hasColors&&!buffers.color&&(buffers.color=_gl.createBuffer());program=program.getAttributes();object.hasPositions&&(_gl.bindBuffer(34962,buffers.position),_gl.bufferData(34962,object.positionArray,35048),state.enableAttribute(program.position),_gl.vertexAttribPointer(program.position,3,5126,!1,0,0));object.hasNormals&&(_gl.bindBuffer(34962,buffers.normal),_gl.bufferData(34962,object.normalArray,35048),state.enableAttribute(program.normal),
_gl.vertexAttribPointer(program.normal,3,5126,!1,0,0));object.hasUvs&&(_gl.bindBuffer(34962,buffers.uv),_gl.bufferData(34962,object.uvArray,35048),state.enableAttribute(program.uv),_gl.vertexAttribPointer(program.uv,2,5126,!1,0,0));object.hasColors&&(_gl.bindBuffer(34962,buffers.color),_gl.bufferData(34962,object.colorArray,35048),state.enableAttribute(program.color),_gl.vertexAttribPointer(program.color,3,5126,!1,0,0));state.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=
0};this.renderBufferDirect=function(camera,fog,geometry,material,object,group){var frontFaceCW=object.isMesh&&0>object.matrixWorld.determinant();state.setMaterial(material,frontFaceCW);var program=setProgram(camera,fog,material,object),updateBuffers=!1;if(JSCompiler_object_inline_geometry_310!==geometry.id||JSCompiler_object_inline_program_311!==program.id||JSCompiler_object_inline_wireframe_312!==(!0===material.wireframe))JSCompiler_object_inline_geometry_310=geometry.id,JSCompiler_object_inline_program_311=
program.id,JSCompiler_object_inline_wireframe_312=!0===material.wireframe,updateBuffers=!0;object.morphTargetInfluences&&(morphtargets.update(object,geometry,material,program),updateBuffers=!0);frontFaceCW=geometry.index;var position=geometry.attributes.position;fog=1;!0===material.wireframe&&(frontFaceCW=geometries.getWireframeAttribute(geometry),fog=2);camera=bufferRenderer;if(null!==frontFaceCW){var attribute=attributes.get(frontFaceCW);camera=indexedBufferRenderer;camera.setIndex(attribute)}if(updateBuffers){if(geometry&&
geometry.isInstancedBufferGeometry&&!capabilities.isWebGL2&&null===extensions.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{state.initAttributes();updateBuffers=geometry.attributes;program=program.getAttributes();var materialDefaultAttributeValues=material.defaultAttributeValues;for(name in program){var programAttribute=program[name];if(0<=programAttribute){var geometryAttribute=
updateBuffers[name];if(void 0!==geometryAttribute){var normalized=geometryAttribute.normalized,size=geometryAttribute.itemSize,attribute$jscomp$0=attributes.get(geometryAttribute);if(void 0!==attribute$jscomp$0){var buffer=attribute$jscomp$0.buffer,type=attribute$jscomp$0.type;attribute$jscomp$0=attribute$jscomp$0.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){var data=geometryAttribute.data,stride=data.stride;geometryAttribute=geometryAttribute.offset;data&&data.isInstancedInterleavedBuffer?
(state.enableAttributeAndDivisor(programAttribute,data.meshPerAttribute),void 0===geometry.maxInstancedCount&&(geometry.maxInstancedCount=data.meshPerAttribute*data.count)):state.enableAttribute(programAttribute);_gl.bindBuffer(34962,buffer);_gl.vertexAttribPointer(programAttribute,size,type,normalized,stride*attribute$jscomp$0,geometryAttribute*attribute$jscomp$0)}else geometryAttribute.isInstancedBufferAttribute?(state.enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute),
void 0===geometry.maxInstancedCount&&(geometry.maxInstancedCount=geometryAttribute.meshPerAttribute*geometryAttribute.count)):state.enableAttribute(programAttribute),_gl.bindBuffer(34962,buffer),_gl.vertexAttribPointer(programAttribute,size,type,normalized,0,0)}}else if(void 0!==materialDefaultAttributeValues&&(normalized=materialDefaultAttributeValues[name],void 0!==normalized))switch(normalized.length){case 2:_gl.vertexAttrib2fv(programAttribute,normalized);break;case 3:_gl.vertexAttrib3fv(programAttribute,
normalized);break;case 4:_gl.vertexAttrib4fv(programAttribute,normalized);break;default:_gl.vertexAttrib1fv(programAttribute,normalized)}}}state.disableUnusedAttributes()}null!==frontFaceCW&&_gl.bindBuffer(34963,attribute.buffer)}attribute=Infinity;null!==frontFaceCW?attribute=frontFaceCW.count:void 0!==position&&(attribute=position.count);frontFaceCW=geometry.drawRange.start*fog;position=null!==group?group.start*fog:0;var name=Math.max(frontFaceCW,position);group=Math.max(0,Math.min(attribute,frontFaceCW+
geometry.drawRange.count*fog,position+(null!==group?group.count*fog:Infinity))-1-name+1);if(0!==group){if(object.isMesh)if(!0===material.wireframe)state.setLineWidth(material.wireframeLinewidth*(null===_currentRenderTarget?_pixelRatio:1)),camera.setMode(1);else switch(object.drawMode){case 0:camera.setMode(4);break;case 1:camera.setMode(5);break;case 2:camera.setMode(6)}else object.isLine?(material=material.linewidth,void 0===material&&(material=1),state.setLineWidth(material*(null===_currentRenderTarget?
_pixelRatio:1)),object.isLineSegments?camera.setMode(1):object.isLineLoop?camera.setMode(2):camera.setMode(3)):object.isPoints?camera.setMode(0):object.isSprite&&camera.setMode(4);geometry&&geometry.isInstancedBufferGeometry?0<geometry.maxInstancedCount&&camera.renderInstances(geometry,name,group):camera.render(name,group)}};this.compile=function(scene,camera){currentRenderState=renderStates.get(scene,camera);currentRenderState.init();scene.traverse(function(object){object.isLight&&(currentRenderState.pushLight(object),
object.castShadow&&currentRenderState.pushShadow(object))});currentRenderState.setupLights(camera);scene.traverse(function(object){if(object.material)if(Array.isArray(object.material))for(var i=0;i<object.material.length;i++)initMaterial(object.material[i],scene.fog,object);else initMaterial(object.material,scene.fog,object)})};var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time){vr.isPresenting()||onAnimationFrameCallback&&onAnimationFrameCallback(time)});
"undefined"!==typeof window&&animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;vr.setAnimationLoop(callback);animation.start()};this.render=function(scene,camera,JSCompiler_OptimizeArgumentsArray_p0,JSCompiler_OptimizeArgumentsArray_p1){if(void 0!==JSCompiler_OptimizeArgumentsArray_p0){console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.");var renderTarget=JSCompiler_OptimizeArgumentsArray_p0}if(void 0!==
JSCompiler_OptimizeArgumentsArray_p1){console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.");var forceClear=JSCompiler_OptimizeArgumentsArray_p1}camera&&camera.isCamera?_isContextLost||(JSCompiler_object_inline_program_311=JSCompiler_object_inline_geometry_310=null,JSCompiler_object_inline_wireframe_312=!1,_currentMaterialId=-1,_currentCamera=null,!0===scene.autoUpdate&&scene.updateMatrixWorld(),null===camera.parent&&camera.updateMatrixWorld(),
vr.enabled&&(camera=vr.getCamera(camera)),currentRenderState=renderStates.get(scene,camera),currentRenderState.init(),scene.onBeforeRender(_this,scene,camera,renderTarget||_currentRenderTarget),_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),_localClippingEnabled=this.localClippingEnabled,_clippingEnabled=_clipping.init(this.clippingPlanes,_localClippingEnabled,camera),currentRenderList=renderLists.get(scene,camera),currentRenderList.init(),
projectObject(scene,camera,0,_this.sortObjects),!0===_this.sortObjects&&currentRenderList.sort(),_clippingEnabled&&_clipping.beginShadows(),shadowMap.render(currentRenderState.state.shadowsArray,scene,camera),currentRenderState.setupLights(camera),_clippingEnabled&&_clipping.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==renderTarget&&this.setRenderTarget(renderTarget),background.render(currentRenderList,scene,camera,forceClear),JSCompiler_OptimizeArgumentsArray_p0=currentRenderList.opaque,
JSCompiler_OptimizeArgumentsArray_p1=currentRenderList.transparent,scene.overrideMaterial?(renderTarget=scene.overrideMaterial,JSCompiler_OptimizeArgumentsArray_p0.length&&renderObjects(JSCompiler_OptimizeArgumentsArray_p0,scene,camera,renderTarget),JSCompiler_OptimizeArgumentsArray_p1.length&&renderObjects(JSCompiler_OptimizeArgumentsArray_p1,scene,camera,renderTarget)):(JSCompiler_OptimizeArgumentsArray_p0.length&&renderObjects(JSCompiler_OptimizeArgumentsArray_p0,scene,camera),JSCompiler_OptimizeArgumentsArray_p1.length&&
renderObjects(JSCompiler_OptimizeArgumentsArray_p1,scene,camera)),null!==_currentRenderTarget&&(textures.updateRenderTargetMipmap(_currentRenderTarget),textures.updateMultisampleRenderTarget(_currentRenderTarget)),state.buffers.depth.setTest(!0),state.buffers.depth.setMask(!0),state.buffers.color.setMask(!0),state.setPolygonOffset(!1),scene.onAfterRender(_this,scene,camera),vr.enabled&&vr.submitFrame(),currentRenderState=currentRenderList=null):console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")};
this.allocTextureUnit=function(){var textureUnit=_usedTextureUnits;textureUnit>=capabilities.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+textureUnit+" texture units while this GPU supports only "+capabilities.maxTextures);_usedTextureUnits+=1;return textureUnit};this.setTexture2D=function(){var warned=!1;return function(texture,slot){texture&&texture.isWebGLRenderTarget&&(warned||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
warned=!0),texture=texture.texture);textures.setTexture2D(texture,slot)}}();this.setTexture3D=function(){return function(texture,slot){textures.setTexture3D(texture,slot)}}();this.setTexture=function(){var warned=!1;return function(texture,slot){warned||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),warned=!0);textures.setTexture2D(texture,slot)}}();this.setTextureCube=function(){var warned=!1;return function(texture,slot){texture&&texture.isWebGLRenderTargetCube&&
(warned||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),warned=!0),texture=texture.texture);texture&&texture.isCubeTexture||Array.isArray(texture.image)&&6===texture.image.length?textures.setTextureCube(texture,slot):textures.setTextureCubeDynamic(texture,slot)}}();this.setFramebuffer=function(value){_framebuffer=value};this.getRenderTarget=function(){return _currentRenderTarget};this.setRenderTarget=function(renderTarget,
activeCubeFace,activeMipMapLevel){(_currentRenderTarget=renderTarget)&&void 0===properties.get(renderTarget).__webglFramebuffer&&textures.setupRenderTarget(renderTarget);var framebuffer=_framebuffer,isCube=!1;renderTarget?(framebuffer=properties.get(renderTarget).__webglFramebuffer,renderTarget.isWebGLRenderTargetCube?(framebuffer=framebuffer[activeCubeFace||0],isCube=!0):framebuffer=renderTarget.isWebGLMultisampleRenderTarget?properties.get(renderTarget).__webglMultisampledFramebuffer:framebuffer,
_currentViewport.copy(renderTarget.viewport),_currentScissor.copy(renderTarget.scissor),_currentScissorTest=renderTarget.scissorTest):(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio),_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio),_currentScissorTest=_scissorTest);_currentFramebuffer!==framebuffer&&(_gl.bindFramebuffer(36160,framebuffer),_currentFramebuffer=framebuffer);state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);
isCube&&(renderTarget=properties.get(renderTarget.texture),_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace||0,renderTarget.__webglTexture,activeMipMapLevel||0))};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer){if(renderTarget&&renderTarget.isWebGLRenderTarget){var framebuffer=properties.get(renderTarget).__webglFramebuffer;if(framebuffer){var restore=!1;framebuffer!==_currentFramebuffer&&(_gl.bindFramebuffer(36160,framebuffer),restore=!0);try{var texture=renderTarget.texture,
textureFormat=texture.format,textureType=texture.type;1023!==textureFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):1009===textureType||utils.convert(textureType)===_gl.getParameter(35738)||1015===textureType&&(capabilities.isWebGL2||extensions.get("OES_texture_float")||extensions.get("WEBGL_color_buffer_float"))||1016===textureType&&(capabilities.isWebGL2?extensions.get("EXT_color_buffer_float"):
extensions.get("EXT_color_buffer_half_float"))?36053===_gl.checkFramebufferStatus(36160)?0<=x&&x<=renderTarget.width-width&&0<=y&&y<=renderTarget.height-height&&_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{restore&&
_gl.bindFramebuffer(36160,_currentFramebuffer)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")};this.copyFramebufferToTexture=function(position,texture,level){var width=texture.image.width,height=texture.image.height,glFormat=utils.convert(texture.format);this.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level||0,glFormat,position.x,position.y,width,height,0)};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level){var width=
srcTexture.image.width,height=srcTexture.image.height,glFormat=utils.convert(dstTexture.format),glType=utils.convert(dstTexture.type);this.setTexture2D(dstTexture,0);srcTexture.isDataTexture?_gl.texSubImage2D(3553,level||0,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data):_gl.texSubImage2D(3553,level||0,position.x,position.y,glFormat,glType,srcTexture.image)}}function FogExp2(color,density){this.name="";this.color=new Color(color);this.density=void 0!==density?density:2.5E-4}
function Fog(color,near,far){this.name="";this.color=new Color(color);this.near=void 0!==near?near:1;this.far=void 0!==far?far:1E3}function Scene(){Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=void 0!==array?array.length/stride:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0}function InterleavedBufferAttribute(interleavedBuffer,
itemSize,offset,normalized){this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=!0===normalized}function SpriteMaterial(parameters){Material.call(this);this.type="SpriteMaterial";this.color=new Color(16777215);this.map=null;this.rotation=0;this.sizeAttenuation=!0;this.lights=!1;this.transparent=!0;this.setValues(parameters)}function Sprite(material){Object3D.call(this);this.type="Sprite";if(void 0===geometry){geometry=new BufferGeometry;var float32Array=new Float32Array([-.5,
-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);float32Array=new InterleavedBuffer(float32Array,5);geometry.setIndex([0,1,2,0,2,3]);geometry.addAttribute("position",new InterleavedBufferAttribute(float32Array,3,0,!1));geometry.addAttribute("uv",new InterleavedBufferAttribute(float32Array,2,3,!1))}this.geometry=geometry;this.material=void 0!==material?material:new SpriteMaterial;this.center=new Vector2(.5,.5)}function LOD(){Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,
value:[]}})}function SkinnedMesh(geometry,material){geometry&&geometry.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");Mesh.call(this,geometry,material);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new Matrix4;this.bindMatrixInverse=new Matrix4}function Skeleton(bones,boneInverses){bones=bones||[];this.bones=bones.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===boneInverses)this.calculateInverses();
else if(this.bones.length===boneInverses.length)this.boneInverses=boneInverses.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[],bones=0,boneInverses=this.bones.length;bones<boneInverses;bones++)this.boneInverses.push(new Matrix4)}function Bone(){Object3D.call(this);this.type="Bone"}function LineBasicMaterial(parameters){Material.call(this);this.type="LineBasicMaterial";this.color=new Color(16777215);this.linewidth=1;this.linejoin=this.linecap=
"round";this.lights=!1;this.setValues(parameters)}function Line(geometry,material,mode){1===mode&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.");Object3D.call(this);this.type="Line";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?material:new LineBasicMaterial({color:16777215*Math.random()})}function LineSegments(geometry,material){Line.call(this,geometry,material);this.type="LineSegments"}function LineLoop(geometry,
material){Line.call(this,geometry,material);this.type="LineLoop"}function PointsMaterial(parameters){Material.call(this);this.type="PointsMaterial";this.color=new Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=this.morphTargets=!1;this.setValues(parameters)}function Points(geometry,material){Object3D.call(this);this.type="Points";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?material:new PointsMaterial({color:16777215*Math.random()})}
function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=void 0!==format?format:1022;this.minFilter=void 0!==minFilter?minFilter:1006;this.magFilter=void 0!==magFilter?magFilter:1006;this.generateMipmaps=!1}function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,
magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;this.generateMipmaps=this.flipY=!1}function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=!0}function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=void 0!==format?format:1026;if(1026!==format&&
1027!==format)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===type&&1026===format&&(type=1012);void 0===type&&1027===format&&(type=1020);Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=void 0!==magFilter?magFilter:1003;this.minFilter=void 0!==minFilter?minFilter:1003;this.generateMipmaps=this.flipY=!1}function WireframeGeometry(geometry){BufferGeometry.call(this);
this.type="WireframeGeometry";var vertices=[],j,l,ol,edge=[0,0],edges={},keys=["a","b","c"];if(geometry&&geometry.isGeometry){var faces=geometry.faces;var i=0;for(l=faces.length;i<l;i++){var face=faces[i];for(j=0;3>j;j++){var edge1=face[keys[j]];var edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);edge1=edge[0]+","+edge[1];void 0===edges[edge1]&&(edges[edge1]={index1:edge[0],index2:edge[1]})}}for(edge1 in edges)i=edges[edge1],keys=geometry.vertices[i.index1],vertices.push(keys.x,
keys.y,keys.z),keys=geometry.vertices[i.index2],vertices.push(keys.x,keys.y,keys.z)}else if(geometry&&geometry.isBufferGeometry)if(keys=new Vector3,null!==geometry.index){faces=geometry.attributes.position;face=geometry.index;var groups=geometry.groups;0===groups.length&&(groups=[{start:0,count:face.count,materialIndex:0}]);geometry=0;for(ol=groups.length;geometry<ol;++geometry)for(i=groups[geometry],j=i.start,l=i.count,i=j,l=j+l;i<l;i+=3)for(j=0;3>j;j++)edge1=face.getX(i+j),edge2=face.getX(i+(j+
1)%3),edge[0]=Math.min(edge1,edge2),edge[1]=Math.max(edge1,edge2),edge1=edge[0]+","+edge[1],void 0===edges[edge1]&&(edges[edge1]={index1:edge[0],index2:edge[1]});for(edge1 in edges)i=edges[edge1],keys.fromBufferAttribute(faces,i.index1),vertices.push(keys.x,keys.y,keys.z),keys.fromBufferAttribute(faces,i.index2),vertices.push(keys.x,keys.y,keys.z)}else for(faces=geometry.attributes.position,i=0,l=faces.count/3;i<l;i++)for(j=0;3>j;j++)edges=3*i+j,keys.fromBufferAttribute(faces,edges),vertices.push(keys.x,
keys.y,keys.z),edges=3*i+(j+1)%3,keys.fromBufferAttribute(faces,edges),vertices.push(keys.x,keys.y,keys.z);this.addAttribute("position",new Float32BufferAttribute(vertices,3))}function ParametricGeometry(func,slices,stacks){Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:func,slices:slices,stacks:stacks};this.fromBufferGeometry(new ParametricBufferGeometry(func,slices,stacks));this.mergeVertices()}function ParametricBufferGeometry(func,slices,stacks){BufferGeometry.call(this);
this.type="ParametricBufferGeometry";this.parameters={func:func,slices:slices,stacks:stacks};var indices=[],vertices=[],normals=[],uvs=[],normal=new Vector3,p0=new Vector3,p1=new Vector3,pu=new Vector3,pv=new Vector3,i,j;3>func.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var sliceCount=slices+1;for(i=0;i<=stacks;i++){var v=i/stacks;for(j=0;j<=slices;j++){var u=j/slices;func(u,v,p0);vertices.push(p0.x,p0.y,p0.z);0<=u-1E-5?(func(u-1E-5,v,
p1),pu.subVectors(p0,p1)):(func(u+1E-5,v,p1),pu.subVectors(p1,p0));0<=v-1E-5?(func(u,v-1E-5,p1),pv.subVectors(p0,p1)):(func(u,v+1E-5,p1),pv.subVectors(p1,p0));normal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,v)}}for(i=0;i<stacks;i++)for(j=0;j<slices;j++)func=i*sliceCount+j+1,normal=(i+1)*sliceCount+j+1,p0=(i+1)*sliceCount+j,indices.push(i*sliceCount+j,func,p0),indices.push(func,normal,p0);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,
3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function PolyhedronGeometry(vertices,indices,radius,detail){Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices,indices,radius,detail));this.mergeVertices()}function PolyhedronBufferGeometry(vertices,indices,radius$jscomp$0,detail$jscomp$0){function pushVertex(vertex){vertexBuffer.push(vertex.x,
vertex.y,vertex.z)}function getVertexByIndex(index,vertex){index*=3;vertex.x=vertices[index+0];vertex.y=vertices[index+1];vertex.z=vertices[index+2]}function correctUV(uv,stride,vector,azimuth){0>azimuth&&1===uv.x&&(uvBuffer[stride]=uv.x-1);0===vector.x&&0===vector.z&&(uvBuffer[stride]=azimuth/2/Math.PI+.5)}BufferGeometry.call(this);this.type="PolyhedronBufferGeometry";this.parameters={vertices:vertices,indices:indices,radius:radius$jscomp$0,detail:detail$jscomp$0};radius$jscomp$0=radius$jscomp$0||
1;detail$jscomp$0=detail$jscomp$0||0;var vertexBuffer=[],uvBuffer=[];(function(detail){for(var a=new Vector3,b=new Vector3,c=new Vector3,i=0;i<indices.length;i+=3){getVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);var j,i$jscomp$0,a$jscomp$0=a,b$jscomp$0=b,c$jscomp$0=c,cols=Math.pow(2,detail),v=[];for(i$jscomp$0=0;i$jscomp$0<=cols;i$jscomp$0++){v[i$jscomp$0]=[];var aj=a$jscomp$0.clone().lerp(c$jscomp$0,i$jscomp$0/cols),bj=b$jscomp$0.clone().lerp(c$jscomp$0,
i$jscomp$0/cols),rows=cols-i$jscomp$0;for(j=0;j<=rows;j++)v[i$jscomp$0][j]=0===j&&i$jscomp$0===cols?aj:aj.clone().lerp(bj,j/rows)}for(i$jscomp$0=0;i$jscomp$0<cols;i$jscomp$0++)for(j=0;j<2*(cols-i$jscomp$0)-1;j++)a$jscomp$0=Math.floor(j/2),0===j%2?(pushVertex(v[i$jscomp$0][a$jscomp$0+1]),pushVertex(v[i$jscomp$0+1][a$jscomp$0]),pushVertex(v[i$jscomp$0][a$jscomp$0])):(pushVertex(v[i$jscomp$0][a$jscomp$0+1]),pushVertex(v[i$jscomp$0+1][a$jscomp$0+1]),pushVertex(v[i$jscomp$0+1][a$jscomp$0]))}})(detail$jscomp$0);
(function(radius){for(var vertex=new Vector3,i=0;i<vertexBuffer.length;i+=3)vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+1],vertex.z=vertexBuffer[i+2],vertex.normalize().multiplyScalar(radius),vertexBuffer[i+0]=vertex.x,vertexBuffer[i+1]=vertex.y,vertexBuffer[i+2]=vertex.z})(radius$jscomp$0);(function(){for(var vertex=new Vector3,i=0;i<vertexBuffer.length;i+=3)vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+1],vertex.z=vertexBuffer[i+2],uvBuffer.push(Math.atan2(vertex.z,-vertex.x)/2/Math.PI+
.5,1-(Math.atan2(-vertex.y,Math.sqrt(vertex.x*vertex.x+vertex.z*vertex.z))/Math.PI+.5));vertex=new Vector3;i=new Vector3;for(var c=new Vector3,centroid=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,i$jscomp$0=0,j=0;i$jscomp$0<vertexBuffer.length;i$jscomp$0+=9,j+=6){vertex.set(vertexBuffer[i$jscomp$0+0],vertexBuffer[i$jscomp$0+1],vertexBuffer[i$jscomp$0+2]);i.set(vertexBuffer[i$jscomp$0+3],vertexBuffer[i$jscomp$0+4],vertexBuffer[i$jscomp$0+5]);c.set(vertexBuffer[i$jscomp$0+6],vertexBuffer[i$jscomp$0+
7],vertexBuffer[i$jscomp$0+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(vertex).add(i).add(c).divideScalar(3);var azi=Math.atan2(centroid.z,-centroid.x);correctUV(uvA,j+0,vertex,azi);correctUV(uvB,j+2,i,azi);correctUV(uvC,j+4,c,azi)}for(vertex=0;vertex<uvBuffer.length;vertex+=6)i=uvBuffer[vertex+0],c=uvBuffer[vertex+2],centroid=uvBuffer[vertex+4],uvA=Math.min(i,c,centroid),.9<Math.max(i,c,centroid)&&.1>uvA&&(.2>i&&
(uvBuffer[vertex+0]+=1),.2>c&&(uvBuffer[vertex+2]+=1),.2>centroid&&(uvBuffer[vertex+4]+=1))})();this.addAttribute("position",new Float32BufferAttribute(vertexBuffer,3));this.addAttribute("normal",new Float32BufferAttribute(vertexBuffer.slice(),3));this.addAttribute("uv",new Float32BufferAttribute(uvBuffer,2));0===detail$jscomp$0?this.computeVertexNormals():this.normalizeNormals()}function TetrahedronGeometry(radius,detail){Geometry.call(this);this.type="TetrahedronGeometry";this.parameters={radius:radius,
detail:detail};this.fromBufferGeometry(new TetrahedronBufferGeometry(radius,detail));this.mergeVertices()}function TetrahedronBufferGeometry(radius,detail){PolyhedronBufferGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],radius,detail);this.type="TetrahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function OctahedronGeometry(radius,detail){Geometry.call(this);this.type="OctahedronGeometry";this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new OctahedronBufferGeometry(radius,
detail));this.mergeVertices()}function OctahedronBufferGeometry(radius,detail){PolyhedronBufferGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],radius,detail);this.type="OctahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function IcosahedronGeometry(radius,detail){Geometry.call(this);this.type="IcosahedronGeometry";this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new IcosahedronBufferGeometry(radius,
detail));this.mergeVertices()}function IcosahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;PolyhedronBufferGeometry.call(this,[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],radius,detail);this.type="IcosahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function DodecahedronGeometry(radius,detail){Geometry.call(this);
this.type="DodecahedronGeometry";this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new DodecahedronBufferGeometry(radius,detail));this.mergeVertices()}function DodecahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2,r=1/t;PolyhedronBufferGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-t,0,-r,t,0,r,-t,0,r,t,-r,-t,0,-r,t,0,r,-t,0,r,t,0,-t,0,-r,t,0,-r,-t,0,r,t,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,
8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],radius,detail);this.type="DodecahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function TubeGeometry(path,tubularSegments,radius,radialSegments,closed,taper){Geometry.call(this);this.type="TubeGeometry";this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,
closed:closed};void 0!==taper&&console.warn("THREE.TubeGeometry: taper has been removed.");path=new TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed);this.tangents=path.tangents;this.normals=path.normals;this.binormals=path.binormals;this.fromBufferGeometry(path);this.mergeVertices()}function TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed){function generateSegment(i){P=path.getPointAt(i/tubularSegments,P);var N=frames.normals[i];i=frames.binormals[i];for(j=
0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2,sin=Math.sin(v);v=-Math.cos(v);normal.x=v*N.x+sin*i.x;normal.y=v*N.y+sin*i.y;normal.z=v*N.z+sin*i.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);vertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z)}}BufferGeometry.call(this);this.type="TubeBufferGeometry";this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,
closed:closed};tubularSegments=tubularSegments||64;radius=radius||1;radialSegments=radialSegments||8;closed=closed||!1;var frames=path.computeFrenetFrames(tubularSegments,closed);this.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;var vertex=new Vector3,normal=new Vector3,uv=new Vector2,P=new Vector3,i$jscomp$0,j,vertices=[],normals=[],uvs=[],indices=[];for(i$jscomp$0=0;i$jscomp$0<tubularSegments;i$jscomp$0++)generateSegment(i$jscomp$0);generateSegment(!1===closed?
tubularSegments:0);for(i$jscomp$0=0;i$jscomp$0<=tubularSegments;i$jscomp$0++)for(j=0;j<=radialSegments;j++)uv.x=i$jscomp$0/tubularSegments,uv.y=j/radialSegments,uvs.push(uv.x,uv.y);(function(){for(j=1;j<=tubularSegments;j++)for(i$jscomp$0=1;i$jscomp$0<=radialSegments;i$jscomp$0++){var b=(radialSegments+1)*j+(i$jscomp$0-1),c=(radialSegments+1)*j+i$jscomp$0,d=(radialSegments+1)*(j-1)+i$jscomp$0;indices.push((radialSegments+1)*(j-1)+(i$jscomp$0-1),b,d);indices.push(b,c,d)}})();this.setIndex(indices);
this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function TorusKnotGeometry(radius,tube,tubularSegments,radialSegments,p,q,heightScale){Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};void 0!==heightScale&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");
this.fromBufferGeometry(new TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q));this.mergeVertices()}function TorusKnotBufferGeometry(radius$jscomp$0,tube,tubularSegments,radialSegments,p$jscomp$0,q$jscomp$0){function calculatePositionOnCurve(u,p,q,radius,position){var su=Math.sin(u);p=q/p*u;q=Math.cos(p);position.x=radius*(2+q)*.5*Math.cos(u);position.y=radius*(2+q)*su*.5;position.z=radius*Math.sin(p)*.5}BufferGeometry.call(this);this.type="TorusKnotBufferGeometry";this.parameters=
{radius:radius$jscomp$0,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p$jscomp$0,q:q$jscomp$0};radius$jscomp$0=radius$jscomp$0||1;tube=tube||.4;tubularSegments=Math.floor(tubularSegments)||64;radialSegments=Math.floor(radialSegments)||8;p$jscomp$0=p$jscomp$0||2;q$jscomp$0=q$jscomp$0||3;var indices=[],vertices=[],normals=[],uvs=[],i,vertex=new Vector3,normal=new Vector3,P1=new Vector3,P2=new Vector3,B=new Vector3,T=new Vector3,N=new Vector3;for(i=0;i<=tubularSegments;++i){var j=
i/tubularSegments*p$jscomp$0*Math.PI*2;calculatePositionOnCurve(j,p$jscomp$0,q$jscomp$0,radius$jscomp$0,P1);calculatePositionOnCurve(j+.01,p$jscomp$0,q$jscomp$0,radius$jscomp$0,P2);T.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);B.normalize();N.normalize();for(j=0;j<=radialSegments;++j){var v=j/radialSegments*Math.PI*2,cx=-tube*Math.cos(v);v=tube*Math.sin(v);vertex.x=P1.x+(cx*N.x+v*B.x);vertex.y=P1.y+(cx*N.y+v*B.y);vertex.z=P1.z+(cx*N.z+v*B.z);vertices.push(vertex.x,
vertex.y,vertex.z);normal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(i/tubularSegments);uvs.push(j/radialSegments)}}for(j=1;j<=tubularSegments;j++)for(i=1;i<=radialSegments;i++)radius$jscomp$0=(radialSegments+1)*j+(i-1),tube=(radialSegments+1)*j+i,p$jscomp$0=(radialSegments+1)*(j-1)+i,indices.push((radialSegments+1)*(j-1)+(i-1),radius$jscomp$0,p$jscomp$0),indices.push(radius$jscomp$0,tube,p$jscomp$0);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,
3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function TorusGeometry(radius,tube,radialSegments,tubularSegments,arc){Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};this.fromBufferGeometry(new TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc));this.mergeVertices()}function TorusBufferGeometry(radius,
tube,radialSegments,tubularSegments,arc){BufferGeometry.call(this);this.type="TorusBufferGeometry";this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radius=radius||1;tube=tube||.4;radialSegments=Math.floor(radialSegments)||8;tubularSegments=Math.floor(tubularSegments)||6;arc=arc||2*Math.PI;var indices=[],vertices=[],normals=[],uvs=[],center=new Vector3,vertex=new Vector3,normal=new Vector3,j,i;for(j=0;j<=radialSegments;j++)for(i=0;i<=tubularSegments;i++){var u=
i/tubularSegments*arc,v=j/radialSegments*Math.PI*2;vertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);center.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(i/tubularSegments);uvs.push(j/radialSegments)}for(j=1;j<=radialSegments;j++)for(i=1;i<=tubularSegments;i++)radius=(tubularSegments+1)*(j-
1)+i-1,tube=(tubularSegments+1)*(j-1)+i,arc=(tubularSegments+1)*j+i,indices.push((tubularSegments+1)*j+i-1,radius,arc),indices.push(radius,tube,arc);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function linkedList(data,start,end,dim,clockwise){for(var last,sum=0,i=start,j=end-dim;i<end;i+=dim)sum+=(data[j]-data[i])*(data[i+1]+data[j+
1]),j=i;if(clockwise===0<sum)for(clockwise=start;clockwise<end;clockwise+=dim)last=insertNode(clockwise,data[clockwise],data[clockwise+1],last);else for(clockwise=end-dim;clockwise>=start;clockwise-=dim)last=insertNode(clockwise,data[clockwise],data[clockwise+1],last);last&&equals(last,last.next)&&(removeNode(last),last=last.next);return last}function filterPoints(start,end){if(!start)return start;end||(end=start);do{var again=!1;if(start.steiner||!equals(start,start.next)&&0!==area(start.prev,start,
start.next))start=start.next;else{removeNode(start);start=end=start.prev;if(start===start.next)break;again=!0}}while(again||start!==end);return end}function earcutLinked(ear,triangles,dim,minX,minY$jscomp$0,invSize$jscomp$0,pass){if(ear){if(!pass&&invSize$jscomp$0){var start=ear,p=start;do null===p.z&&(p.z=zOrder(p.x,p.y,minX,minY$jscomp$0,invSize$jscomp$0)),p.prevZ=p.prev,p=p.nextZ=p.next;while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;start=p;var i,numMerges,pSize,qSize,inSize=1;do{p=start;var tail=
start=null;for(numMerges=0;p;){numMerges++;var q=p;for(i=pSize=0;i<inSize&&(pSize++,q=q.nextZ,q);i++);for(qSize=inSize;0<pSize||0<qSize&&q;)0!==pSize&&(0===qSize||!q||p.z<=q.z)?(i=p,p=p.nextZ,pSize--):(i=q,q=q.nextZ,qSize--),tail?tail.nextZ=i:start=i,i.prevZ=tail,tail=i;p=q}tail.nextZ=null;inSize*=2}while(1<numMerges)}for(start=ear;ear.prev!==ear.next;){p=ear.prev;q=ear.next;if(invSize$jscomp$0)a:{tail=ear;qSize=minX;var minY=minY$jscomp$0,invSize=invSize$jscomp$0;numMerges=tail.prev;pSize=tail;inSize=
tail.next;if(0<=area(numMerges,pSize,inSize))tail=!1;else{var maxTX=numMerges.x>pSize.x?numMerges.x>inSize.x?numMerges.x:inSize.x:pSize.x>inSize.x?pSize.x:inSize.x,maxTY=numMerges.y>pSize.y?numMerges.y>inSize.y?numMerges.y:inSize.y:pSize.y>inSize.y?pSize.y:inSize.y;i=zOrder(numMerges.x<pSize.x?numMerges.x<inSize.x?numMerges.x:inSize.x:pSize.x<inSize.x?pSize.x:inSize.x,numMerges.y<pSize.y?numMerges.y<inSize.y?numMerges.y:inSize.y:pSize.y<inSize.y?pSize.y:inSize.y,qSize,minY,invSize);qSize=zOrder(maxTX,
maxTY,qSize,minY,invSize);for(minY=tail.nextZ;minY&&minY.z<=qSize;){if(minY!==tail.prev&&minY!==tail.next&&pointInTriangle(numMerges.x,numMerges.y,pSize.x,pSize.y,inSize.x,inSize.y,minY.x,minY.y)&&0<=area(minY.prev,minY,minY.next)){tail=!1;break a}minY=minY.nextZ}for(minY=tail.prevZ;minY&&minY.z>=i;){if(minY!==tail.prev&&minY!==tail.next&&pointInTriangle(numMerges.x,numMerges.y,pSize.x,pSize.y,inSize.x,inSize.y,minY.x,minY.y)&&0<=area(minY.prev,minY,minY.next)){tail=!1;break a}minY=minY.prevZ}tail=
!0}}else a:if(tail=ear,numMerges=tail.prev,pSize=tail,inSize=tail.next,0<=area(numMerges,pSize,inSize))tail=!1;else{for(i=tail.next.next;i!==tail.prev;){if(pointInTriangle(numMerges.x,numMerges.y,pSize.x,pSize.y,inSize.x,inSize.y,i.x,i.y)&&0<=area(i.prev,i,i.next)){tail=!1;break a}i=i.next}tail=!0}if(tail)triangles.push(p.i/dim),triangles.push(ear.i/dim),triangles.push(q.i/dim),removeNode(ear),start=ear=q.next;else if(ear=q,ear===start){if(!pass)earcutLinked(filterPoints(ear),triangles,dim,minX,minY$jscomp$0,
invSize$jscomp$0,1);else if(1===pass){pass=triangles;start=dim;p=ear;do q=p.prev,tail=p.next.next,!equals(q,tail)&&intersects(q,p,p.next,tail)&&locallyInside(q,tail)&&locallyInside(tail,q)&&(pass.push(q.i/start),pass.push(p.i/start),pass.push(tail.i/start),removeNode(p),removeNode(p.next),p=ear=tail),p=p.next;while(p!==ear);ear=p;earcutLinked(ear,triangles,dim,minX,minY$jscomp$0,invSize$jscomp$0,2)}else if(2===pass)a:{pass=ear;do{for(start=pass.next.next;start!==pass.prev;){if(p=pass.i!==start.i){p=
pass;q=start;if(tail=p.next.i!==q.i&&p.prev.i!==q.i){b:{tail=p;do{if(tail.i!==p.i&&tail.next.i!==p.i&&tail.i!==q.i&&tail.next.i!==q.i&&intersects(tail,tail.next,p,q)){tail=!0;break b}tail=tail.next}while(tail!==p);tail=!1}tail=!tail}if(tail=tail&&locallyInside(p,q)&&locallyInside(q,p)){tail=p;numMerges=!1;pSize=(p.x+q.x)/2;q=(p.y+q.y)/2;do tail.y>q!==tail.next.y>q&&tail.next.y!==tail.y&&pSize<(tail.next.x-tail.x)*(q-tail.y)/(tail.next.y-tail.y)+tail.x&&(numMerges=!numMerges),tail=tail.next;while(tail!==
p);tail=numMerges}p=tail}if(p){ear=splitPolygon(pass,start);pass=filterPoints(pass,pass.next);ear=filterPoints(ear,ear.next);earcutLinked(pass,triangles,dim,minX,minY$jscomp$0,invSize$jscomp$0);earcutLinked(ear,triangles,dim,minX,minY$jscomp$0,invSize$jscomp$0);break a}start=start.next}pass=pass.next}while(pass!==ear)}break}}}}function compareX(a,b){return a.x-b.x}function findHoleBridge(hole,outerNode){var p=outerNode,hx=hole.x,hy=hole.y,qx=-Infinity;do{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=
p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next}var m=p.x<p.next.x?p:p.next}}p=p.next}while(p!==outerNode);if(!m)return null;if(hx===qx)return m.prev;outerNode=m;x=m.x;var my=m.y,tanMin=Infinity;for(p=m.next;p!==outerNode;){if(hx>=p.x&&p.x>=x&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,x,my,hy<my?qx:hx,hy,p.x,p.y)){var tan=Math.abs(hy-p.y)/(hx-p.x);(tan<tanMin||tan===tanMin&&p.x>m.x)&&locallyInside(p,hole)&&(m=p,tanMin=tan)}p=
p.next}return m}function zOrder(x,y,minX,minY,invSize){x=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&16711935;x=(x|x<<4)&252645135;x=(x|x<<2)&858993459;y=(y|y<<8)&16711935;y=(y|y<<4)&252645135;y=(y|y<<2)&858993459;return(x|x<<1)&1431655765|((y|y<<1)&1431655765)<<1}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return 0<=(cx-px)*(ay-py)-(ax-px)*(cy-py)&&0<=(ax-px)*(by-py)-(bx-px)*(ay-py)&&0<=(bx-px)*(cy-py)-(cx-px)*(by-py)}function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*
(r.y-q.y)}function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y}function intersects(p1,q1,p2,q2){return equals(p1,q1)&&equals(p2,q2)||equals(p1,q2)&&equals(p2,q1)?!0:0<area(p1,q1,p2)!==0<area(p1,q1,q2)&&0<area(p2,q2,p1)!==0<area(p2,q2,q1)}function locallyInside(a,b){return 0>area(a.prev,a,a.next)?0<=area(a,b,a.next)&&0<=area(a,a.prev,b):0>area(a,b,a.prev)||0>area(a,a.next,b)}function splitPolygon(a,b){var a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=
an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2}function insertNode(i,x,y,last){i=new Node(i,x,y);last?(i.next=last.next,i.prev=last,last.next.prev=i,last.next=i):(i.prev=i,i.next=i);return i}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;p.prevZ&&(p.prevZ.nextZ=p.nextZ);p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function Node(i,x,y){this.i=i;this.x=x;this.y=y;this.nextZ=this.prevZ=this.z=this.next=this.prev=null;this.steiner=!1}function removeDupEndPts(points){var l=points.length;
2<l&&points[l-1].equals(points[0])&&points.pop()}function addContour(vertices,contour){for(var i=0;i<contour.length;i++)vertices.push(contour[i].x),vertices.push(contour[i].y)}function ExtrudeGeometry(shapes,options){Geometry.call(this);this.type="ExtrudeGeometry";this.parameters={shapes:shapes,options:options};this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes,options));this.mergeVertices()}function ExtrudeBufferGeometry(shapes,options){function addShape(shape){function scalePt2(pt,vec,size){vec||
console.error("THREE.ExtrudeGeometry: vec does not exist");return vec.clone().multiplyScalar(size).add(pt)}function getBevelVec(inPt,inPrev,inNext){var v_trans_y=inPt.x-inPrev.x;var shrink_by=inPt.y-inPrev.y;var v_trans_x=inNext.x-inPt.x;var v_next_y=inNext.y-inPt.y,v_prev_lensq=v_trans_y*v_trans_y+shrink_by*shrink_by;if(Math.abs(v_trans_y*v_next_y-shrink_by*v_trans_x)>Number.EPSILON){var v_prev_len=Math.sqrt(v_prev_lensq),v_next_len=Math.sqrt(v_trans_x*v_trans_x+v_next_y*v_next_y);v_prev_lensq=inPrev.x-
shrink_by/v_prev_len;inPrev=inPrev.y+v_trans_y/v_prev_len;v_next_y=((inNext.x-v_next_y/v_next_len-v_prev_lensq)*v_next_y-(inNext.y+v_trans_x/v_next_len-inPrev)*v_trans_x)/(v_trans_y*v_next_y-shrink_by*v_trans_x);v_trans_x=v_prev_lensq+v_trans_y*v_next_y-inPt.x;v_trans_y=inPrev+shrink_by*v_next_y-inPt.y;shrink_by=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(2>=shrink_by)return new Vector2(v_trans_x,v_trans_y);shrink_by=Math.sqrt(shrink_by/2)}else inPt=!1,v_trans_y>Number.EPSILON?v_trans_x>Number.EPSILON&&
(inPt=!0):v_trans_y<-Number.EPSILON?v_trans_x<-Number.EPSILON&&(inPt=!0):Math.sign(shrink_by)===Math.sign(v_next_y)&&(inPt=!0),inPt?(v_trans_x=-shrink_by,shrink_by=Math.sqrt(v_prev_lensq)):(v_trans_x=v_trans_y,v_trans_y=shrink_by,shrink_by=Math.sqrt(v_prev_lensq/2));return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by)}function sidewalls(contour,layeroffset){for(i=contour.length;0<=--i;){var j=i;var k=i-1;0>k&&(k=contour.length-1);var s,sl=steps+2*bevelSegments;for(s=0;s<sl;s++){var slen1=vlen*
s,slen2=vlen*(s+1),b=layeroffset+k+slen1,c=layeroffset+k+slen2;slen2=layeroffset+j+slen2;addVertex(layeroffset+j+slen1);addVertex(b);addVertex(slen2);addVertex(b);addVertex(c);addVertex(slen2);slen1=verticesArray.length/3;slen1=uvgen.generateSideWallUV(scope,verticesArray,slen1-6,slen1-3,slen1-2,slen1-1);addUV(slen1[0]);addUV(slen1[1]);addUV(slen1[3]);addUV(slen1[1]);addUV(slen1[2]);addUV(slen1[3])}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z)}function f3(a,b,c){addVertex(a);
addVertex(b);addVertex(c);a=verticesArray.length/3;a=uvgen.generateTopUV(scope,verticesArray,a-3,a-2,a-1);addUV(a[0]);addUV(a[1]);addUV(a[2])}function addVertex(index){verticesArray.push(placeholder[3*index]);verticesArray.push(placeholder[3*index+1]);verticesArray.push(placeholder[3*index+2])}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y)}var placeholder=[],curveSegments=void 0!==options.curveSegments?options.curveSegments:12,steps=void 0!==options.steps?options.steps:1,
depth=void 0!==options.depth?options.depth:100,bevelEnabled=void 0!==options.bevelEnabled?options.bevelEnabled:!0,bevelThickness=void 0!==options.bevelThickness?options.bevelThickness:6,bevelSize=void 0!==options.bevelSize?options.bevelSize:bevelThickness-2,bevelSegments=void 0!==options.bevelSegments?options.bevelSegments:3,extrudePath=options.extrudePath,uvgen=void 0!==options.UVGenerator?options.UVGenerator:WorldUVGenerator;void 0!==options.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),
depth=options.amount);var extrudeByPath=!1;if(extrudePath){var extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=!0;bevelEnabled=!1;var splineTube=extrudePath.computeFrenetFrames(steps,!1);var binormal=new Vector3;var normal=new Vector3;var position2=new Vector3}bevelEnabled||(bevelSize=bevelThickness=bevelSegments=0);var hl;curveSegments=shape.extractPoints(curveSegments);shape=curveSegments.shape;var holes=curveSegments.holes;if(!ShapeUtils.isClockWise(shape)){shape=shape.reverse();var h=
0;for(hl=holes.length;h<hl;h++){var ahole=holes[h];ShapeUtils.isClockWise(ahole)&&(holes[h]=ahole.reverse())}}var faces=ShapeUtils.triangulateShape(shape,holes),contour$jscomp$0=shape;h=0;for(hl=holes.length;h<hl;h++)ahole=holes[h],shape=shape.concat(ahole);var bs,vlen=shape.length,face,flen=faces.length;curveSegments=[];var i=0;var t=contour$jscomp$0.length;var b$jscomp$0=t-1;for(bs=i+1;i<t;i++,b$jscomp$0++,bs++)b$jscomp$0===t&&(b$jscomp$0=0),bs===t&&(bs=0),curveSegments[i]=getBevelVec(contour$jscomp$0[i],
contour$jscomp$0[b$jscomp$0],contour$jscomp$0[bs]);extrudePath=[];var verticesMovements=curveSegments.concat();h=0;for(hl=holes.length;h<hl;h++){ahole=holes[h];var oneHoleMovements=[];i=0;t=ahole.length;b$jscomp$0=t-1;for(bs=i+1;i<t;i++,b$jscomp$0++,bs++)b$jscomp$0===t&&(b$jscomp$0=0),bs===t&&(bs=0),oneHoleMovements[i]=getBevelVec(ahole[i],ahole[b$jscomp$0],ahole[bs]);extrudePath.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements)}for(b$jscomp$0=0;b$jscomp$0<bevelSegments;b$jscomp$0++){t=
b$jscomp$0/bevelSegments;var z$jscomp$0=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2);i=0;for(t=contour$jscomp$0.length;i<t;i++){var vert=scalePt2(contour$jscomp$0[i],curveSegments[i],bs);v(vert.x,vert.y,-z$jscomp$0)}h=0;for(hl=holes.length;h<hl;h++)for(ahole=holes[h],oneHoleMovements=extrudePath[h],i=0,t=ahole.length;i<t;i++)vert=scalePt2(ahole[i],oneHoleMovements[i],bs),v(vert.x,vert.y,-z$jscomp$0)}bs=bevelSize;for(i=0;i<vlen;i++)vert=bevelEnabled?scalePt2(shape[i],verticesMovements[i],
bs):shape[i],extrudeByPath?(normal.copy(splineTube.normals[0]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y),position2.copy(extrudePts[0]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,0);for(t=1;t<=steps;t++)for(i=0;i<vlen;i++)vert=bevelEnabled?scalePt2(shape[i],verticesMovements[i],bs):shape[i],extrudeByPath?(normal.copy(splineTube.normals[t]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[t]).multiplyScalar(vert.y),
position2.copy(extrudePts[t]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,depth/steps*t);for(b$jscomp$0=bevelSegments-1;0<=b$jscomp$0;b$jscomp$0--){t=b$jscomp$0/bevelSegments;z$jscomp$0=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2);i=0;for(t=contour$jscomp$0.length;i<t;i++)vert=scalePt2(contour$jscomp$0[i],curveSegments[i],bs),v(vert.x,vert.y,depth+z$jscomp$0);h=0;for(hl=holes.length;h<hl;h++)for(ahole=holes[h],oneHoleMovements=extrudePath[h],
i=0,t=ahole.length;i<t;i++)vert=scalePt2(ahole[i],oneHoleMovements[i],bs),extrudeByPath?v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z$jscomp$0):v(vert.x,vert.y,depth+z$jscomp$0)}(function(){var start=verticesArray.length/3;if(bevelEnabled){var offset=0*vlen;for(i=0;i<flen;i++)face=faces[i],f3(face[2]+offset,face[1]+offset,face[0]+offset);offset=vlen*(steps+2*bevelSegments);for(i=0;i<flen;i++)face=faces[i],f3(face[0]+offset,face[1]+offset,face[2]+offset)}else{for(i=0;i<flen;i++)face=
faces[i],f3(face[2],face[1],face[0]);for(i=0;i<flen;i++)face=faces[i],f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps)}scope.addGroup(start,verticesArray.length/3-start,0)})();(function(){var start=verticesArray.length/3,layeroffset=0;sidewalls(contour$jscomp$0,layeroffset);layeroffset+=contour$jscomp$0.length;h=0;for(hl=holes.length;h<hl;h++)ahole=holes[h],sidewalls(ahole,layeroffset),layeroffset+=ahole.length;scope.addGroup(start,verticesArray.length/3-start,1)})()}BufferGeometry.call(this);
this.type="ExtrudeBufferGeometry";this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];for(var scope=this,verticesArray=[],uvArray=[],i$jscomp$0=0,l=shapes.length;i$jscomp$0<l;i$jscomp$0++)addShape(shapes[i$jscomp$0]);this.addAttribute("position",new Float32BufferAttribute(verticesArray,3));this.addAttribute("uv",new Float32BufferAttribute(uvArray,2));this.computeVertexNormals()}function toJSON(shapes,options,data){data.shapes=[];if(Array.isArray(shapes))for(var i=
0,l=shapes.length;i<l;i++)data.shapes.push(shapes[i].uuid);else data.shapes.push(shapes.uuid);void 0!==options.extrudePath&&(data.options.extrudePath=options.extrudePath.toJSON());return data}function TextGeometry(text,parameters){Geometry.call(this);this.type="TextGeometry";this.parameters={text:text,parameters:parameters};this.fromBufferGeometry(new TextBufferGeometry(text,parameters));this.mergeVertices()}function TextBufferGeometry(text,parameters){parameters=parameters||{};var font=parameters.font;
if(!font||!font.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry;text=font.generateShapes(text,parameters.size);parameters.depth=void 0!==parameters.height?parameters.height:50;void 0===parameters.bevelThickness&&(parameters.bevelThickness=10);void 0===parameters.bevelSize&&(parameters.bevelSize=8);void 0===parameters.bevelEnabled&&(parameters.bevelEnabled=!1);ExtrudeBufferGeometry.call(this,text,parameters);this.type="TextBufferGeometry"}
function SphereGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength));this.mergeVertices()}function SphereBufferGeometry(radius,
widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;widthSegments=Math.max(3,Math.floor(widthSegments)||8);heightSegments=Math.max(2,Math.floor(heightSegments)||6);phiStart=void 0!==phiStart?phiStart:0;phiLength=void 0!==phiLength?
phiLength:2*Math.PI;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:Math.PI;var thetaEnd=thetaStart+thetaLength,ix,iy,index=0,grid=[],vertex=new Vector3,normal=new Vector3,indices=[],vertices=[],normals=[],uvs=[];for(iy=0;iy<=heightSegments;iy++){var verticesRow=[],v=iy/heightSegments;for(ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+
v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);normal.set(vertex.x,vertex.y,vertex.z).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,1-v);verticesRow.push(index++)}grid.push(verticesRow)}for(iy=0;iy<heightSegments;iy++)for(ix=0;ix<widthSegments;ix++)radius=grid[iy][ix+1],phiStart=grid[iy][ix],phiLength=grid[iy+1][ix],thetaLength=grid[iy+1][ix+1],(0!==iy||0<thetaStart)&&indices.push(radius,
phiStart,thetaLength),(iy!==heightSegments-1||thetaEnd<Math.PI)&&indices.push(phiStart,phiLength,thetaLength);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function RingGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:innerRadius,
outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength));this.mergeVertices()}function RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){BufferGeometry.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,
phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};innerRadius=innerRadius||.5;outerRadius=outerRadius||1;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;thetaSegments=void 0!==thetaSegments?Math.max(3,thetaSegments):8;phiSegments=void 0!==phiSegments?Math.max(1,phiSegments):1;var indices=[],vertices=[],normals=[],uvs=[],radius=innerRadius,radiusStep=(outerRadius-innerRadius)/phiSegments,vertex=new Vector3,uv=new Vector2,j,i;for(j=
0;j<=phiSegments;j++){for(i=0;i<=thetaSegments;i++)innerRadius=thetaStart+i/thetaSegments*thetaLength,vertex.x=radius*Math.cos(innerRadius),vertex.y=radius*Math.sin(innerRadius),vertices.push(vertex.x,vertex.y,vertex.z),normals.push(0,0,1),uv.x=(vertex.x/outerRadius+1)/2,uv.y=(vertex.y/outerRadius+1)/2,uvs.push(uv.x,uv.y);radius+=radiusStep}for(j=0;j<phiSegments;j++)for(outerRadius=j*(thetaSegments+1),i=0;i<thetaSegments;i++)innerRadius=i+outerRadius,thetaStart=innerRadius+thetaSegments+1,thetaLength=
innerRadius+thetaSegments+2,radius=innerRadius+1,indices.push(innerRadius,thetaStart,radius),indices.push(thetaStart,thetaLength,radius);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function LatheGeometry(points,segments,phiStart,phiLength){Geometry.call(this);this.type="LatheGeometry";this.parameters={points:points,segments:segments,
phiStart:phiStart,phiLength:phiLength};this.fromBufferGeometry(new LatheBufferGeometry(points,segments,phiStart,phiLength));this.mergeVertices()}function LatheBufferGeometry(points,segments,phiStart,phiLength){BufferGeometry.call(this);this.type="LatheBufferGeometry";this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments)||12;phiStart=phiStart||0;phiLength=phiLength||2*Math.PI;phiLength=_Math.clamp(phiLength,0,2*Math.PI);var indices=[],
vertices=[],uvs=[],inverseSegments=1/segments,vertex=new Vector3,uv=new Vector2,i;for(i=0;i<=segments;i++){var j=phiStart+i*inverseSegments*phiLength;var sin=Math.sin(j),cos=Math.cos(j);for(j=0;j<=points.length-1;j++)vertex.x=points[j].x*sin,vertex.y=points[j].y,vertex.z=points[j].x*cos,vertices.push(vertex.x,vertex.y,vertex.z),uv.x=i/segments,uv.y=j/(points.length-1),uvs.push(uv.x,uv.y)}for(i=0;i<segments;i++)for(j=0;j<points.length-1;j++)phiStart=j+i*points.length,inverseSegments=phiStart+points.length,
vertex=phiStart+points.length+1,uv=phiStart+1,indices.push(phiStart,inverseSegments,uv),indices.push(inverseSegments,vertex,uv);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2));this.computeVertexNormals();if(phiLength===2*Math.PI)for(phiLength=this.attributes.normal.array,indices=new Vector3,vertices=new Vector3,uvs=new Vector3,phiStart=segments*points.length*3,j=i=0;i<points.length;i++,j+=3)indices.x=
phiLength[j+0],indices.y=phiLength[j+1],indices.z=phiLength[j+2],vertices.x=phiLength[phiStart+j+0],vertices.y=phiLength[phiStart+j+1],vertices.z=phiLength[phiStart+j+2],uvs.addVectors(indices,vertices).normalize(),phiLength[j+0]=phiLength[phiStart+j+0]=uvs.x,phiLength[j+1]=phiLength[phiStart+j+1]=uvs.y,phiLength[j+2]=phiLength[phiStart+j+2]=uvs.z}function ShapeGeometry(shapes,curveSegments){Geometry.call(this);this.type="ShapeGeometry";"object"===typeof curveSegments&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
curveSegments=curveSegments.curveSegments);this.parameters={shapes:shapes,curveSegments:curveSegments};this.fromBufferGeometry(new ShapeBufferGeometry(shapes,curveSegments));this.mergeVertices()}function ShapeBufferGeometry(shapes,curveSegments){function addShape(shape){var l,indexOffset=vertices.length/3;shape=shape.extractPoints(curveSegments);var shapeVertices=shape.shape,shapeHoles=shape.holes;!1===ShapeUtils.isClockWise(shapeVertices)&&(shapeVertices=shapeVertices.reverse());shape=0;for(l=shapeHoles.length;shape<
l;shape++){var shapeHole=shapeHoles[shape];!0===ShapeUtils.isClockWise(shapeHole)&&(shapeHoles[shape]=shapeHole.reverse())}var faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);shape=0;for(l=shapeHoles.length;shape<l;shape++)shapeHole=shapeHoles[shape],shapeVertices=shapeVertices.concat(shapeHole);shape=0;for(l=shapeVertices.length;shape<l;shape++)shapeHole=shapeVertices[shape],vertices.push(shapeHole.x,shapeHole.y,0),normals.push(0,0,1),uvs.push(shapeHole.x,shapeHole.y);shape=0;for(l=faces.length;shape<
l;shape++)shapeVertices=faces[shape],indices.push(shapeVertices[0]+indexOffset,shapeVertices[1]+indexOffset,shapeVertices[2]+indexOffset),groupCount+=3}BufferGeometry.call(this);this.type="ShapeBufferGeometry";this.parameters={shapes:shapes,curveSegments:curveSegments};curveSegments=curveSegments||12;var indices=[],vertices=[],normals=[],uvs=[],groupStart=0,groupCount=0;if(!1===Array.isArray(shapes))addShape(shapes);else for(var i=0;i<shapes.length;i++)addShape(shapes[i]),this.addGroup(groupStart,
groupCount,i),groupStart+=groupCount,groupCount=0;this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function toJSON$1(shapes,data){data.shapes=[];if(Array.isArray(shapes))for(var i=0,l=shapes.length;i<l;i++)data.shapes.push(shapes[i].uuid);else data.shapes.push(shapes.uuid);return data}function EdgesGeometry(geometry,thresholdAngle){BufferGeometry.call(this);
this.type="EdgesGeometry";this.parameters={thresholdAngle:thresholdAngle};var vertices=[];thresholdAngle=Math.cos(_Math.DEG2RAD*(void 0!==thresholdAngle?thresholdAngle:1));var edge=[0,0],edges={},keys=["a","b","c"];if(geometry.isBufferGeometry){var geometry2=new Geometry;geometry2.fromBufferGeometry(geometry)}else geometry2=geometry.clone();geometry2.mergeVertices();geometry2.computeFaceNormals();geometry=geometry2.vertices;geometry2=geometry2.faces;for(var i=0,l=geometry2.length;i<l;i++)for(var face=
geometry2[i],j=0;3>j;j++){var edge1=face[keys[j]];var edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);edge1=edge[0]+","+edge[1];void 0===edges[edge1]?edges[edge1]={index1:edge[0],index2:edge[1],face1:i,face2:void 0}:edges[edge1].face2=i}for(edge1 in edges)if(edge=edges[edge1],void 0===edge.face2||geometry2[edge.face1].normal.dot(geometry2[edge.face2].normal)<=thresholdAngle)keys=geometry[edge.index1],vertices.push(keys.x,keys.y,keys.z),keys=geometry[edge.index2],
vertices.push(keys.x,keys.y,keys.z);this.addAttribute("position",new Float32BufferAttribute(vertices,3))}function CylinderGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop,
radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength));this.mergeVertices()}function CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){function generateCap(top){var x,uv=new Vector2,vertex=new Vector3,groupCount=0,radius=!0===top?radiusTop:radiusBottom,sign=!0===top?1:-1;var centerIndexStart=index;for(x=1;x<=radialSegments;x++)vertices.push(0,halfHeight*sign,0),normals.push(0,sign,0),uvs.push(.5,.5),index++;
var centerIndexEnd=index;for(x=0;x<=radialSegments;x++){var theta=x/radialSegments*thetaLength+thetaStart,cosTheta=Math.cos(theta);theta=Math.sin(theta);vertex.x=radius*theta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,sign,0);uv.x=.5*cosTheta+.5;uv.y=.5*theta*sign+.5;uvs.push(uv.x,uv.y);index++}for(x=0;x<radialSegments;x++)uv=centerIndexStart+x,vertex=centerIndexEnd+x,!0===top?indices.push(vertex,vertex+1,uv):indices.push(vertex+1,vertex,
uv),groupCount+=3;scope.addGroup(groupStart,groupCount,!0===top?1:2);groupStart+=groupCount}BufferGeometry.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};var scope=this;radiusTop=void 0!==radiusTop?radiusTop:1;radiusBottom=void 0!==radiusBottom?radiusBottom:1;height=height||1;radialSegments=Math.floor(radialSegments)||
8;heightSegments=Math.floor(heightSegments)||1;openEnded=void 0!==openEnded?openEnded:!1;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;var indices=[],vertices=[],normals=[],uvs=[],index=0,indexArray=[],halfHeight=height/2,groupStart=0;(function(){var x,y,normal=new Vector3,vertex=new Vector3,groupCount=0,slope=(radiusBottom-radiusTop)/height;for(y=0;y<=heightSegments;y++){var indexRow=[],v=y/heightSegments,radius=v*(radiusBottom-radiusTop)+radiusTop;
for(x=0;x<=radialSegments;x++){var u=x/radialSegments,theta=u*thetaLength+thetaStart,sinTheta=Math.sin(theta);theta=Math.cos(theta);vertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*theta;vertices.push(vertex.x,vertex.y,vertex.z);normal.set(sinTheta,slope,theta).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,1-v);indexRow.push(index++)}indexArray.push(indexRow)}for(x=0;x<radialSegments;x++)for(y=0;y<heightSegments;y++)normal=indexArray[y+1][x],vertex=indexArray[y+
1][x+1],slope=indexArray[y][x+1],indices.push(indexArray[y][x],normal,slope),indices.push(normal,vertex,slope),groupCount+=6;scope.addGroup(groupStart,groupCount,0);groupStart+=groupCount})();!1===openEnded&&(0<radiusTop&&generateCap(!0),0<radiusBottom&&generateCap(!1));this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function ConeGeometry(radius,
height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type="ConeGeometry";this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength}}function ConeBufferGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderBufferGeometry.call(this,
0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type="ConeBufferGeometry";this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength}}function CircleGeometry(radius,segments,thetaStart,thetaLength){Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CircleBufferGeometry(radius,
segments,thetaStart,thetaLength));this.mergeVertices()}function CircleBufferGeometry(radius,segments,thetaStart,thetaLength){BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;segments=void 0!==segments?Math.max(3,segments):8;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;var indices=[],vertices=[],normals=[],uvs=[],i,vertex=new Vector3,
uv=new Vector2;vertices.push(0,0,0);normals.push(0,0,1);uvs.push(.5,.5);var s=0;for(i=3;s<=segments;s++,i+=3){var segment=thetaStart+s/segments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,0,1);uv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y)}for(i=1;i<=segments;i++)indices.push(i,i+1,0);this.setIndex(indices);this.addAttribute("position",new Float32BufferAttribute(vertices,
3));this.addAttribute("normal",new Float32BufferAttribute(normals,3));this.addAttribute("uv",new Float32BufferAttribute(uvs,2))}function ShadowMaterial(parameters){Material.call(this);this.type="ShadowMaterial";this.color=new Color(0);this.transparent=!0;this.setValues(parameters)}function RawShaderMaterial(parameters){ShaderMaterial.call(this,parameters);this.type="RawShaderMaterial"}function MeshStandardMaterial(parameters){Material.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";
this.color=new Color(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=0;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=
.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(parameters)}function MeshPhongMaterial(parameters){Material.call(this);this.type="MeshPhongMaterial";this.color=
new Color(16777215);this.specular=new Color(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=0;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=
.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshToonMaterial(parameters){MeshPhongMaterial.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.gradientMap=null;this.setValues(parameters)}function MeshNormalMaterial(parameters){Material.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=
0;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.lights=this.fog=!1;this.setValues(parameters)}function MeshLambertMaterial(parameters){Material.call(this);this.type="MeshLambertMaterial";this.color=new Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=
1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshMatcapMaterial(parameters){Material.call(this);this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new Color(16777215);this.bumpMap=this.map=this.matcap=null;this.bumpScale=
1;this.normalMap=null;this.normalMapType=0;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.lights=this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function LineDashedMaterial(parameters){LineBasicMaterial.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters)}function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=
parameterPositions;this._cachedIndex=0;this.resultBuffer=void 0!==resultBuffer?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize}function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,
parameterPositions,sampleValues,sampleSize,resultBuffer)}function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}function KeyframeTrack(name,times,values,interpolation){if(void 0===name)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===times||0===times.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+name);this.name=name;this.times=AnimationUtils.convertArray(times,
this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation)}function BooleanKeyframeTrack(name,times,values){KeyframeTrack.call(this,name,times,values)}function ColorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function NumberKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function QuaternionLinearInterpolant(parameterPositions,
sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}function QuaternionKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function StringKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function VectorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function AnimationClip(name,
duration,tracks){this.name=name;this.tracks=tracks;this.duration=void 0!==duration?duration:-1;this.uuid=_Math.generateUUID();0>this.duration&&this.resetDuration()}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return NumberKeyframeTrack;case "vector":case "vector2":case "vector3":case "vector4":return VectorKeyframeTrack;case "color":return ColorKeyframeTrack;case "quaternion":return QuaternionKeyframeTrack;
case "bool":case "boolean":return BooleanKeyframeTrack;case "string":return StringKeyframeTrack}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+typeName);}function LoadingManager(onLoad,onProgress,onError){var scope=this,isLoading=!1,itemsLoaded=0,itemsTotal=0,urlModifier=void 0;this.onStart=void 0;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(!1===isLoading&&void 0!==scope.onStart)scope.onStart(url,itemsLoaded,itemsTotal);
isLoading=!0};this.itemEnd=function(url){itemsLoaded++;if(void 0!==scope.onProgress)scope.onProgress(url,itemsLoaded,itemsTotal);if(itemsLoaded===itemsTotal&&(isLoading=!1,void 0!==scope.onLoad))scope.onLoad()};this.itemError=function(url){if(void 0!==scope.onError)scope.onError(url)};this.resolveURL=function(url){return urlModifier?urlModifier(url):url};this.setURLModifier=function(transform){urlModifier=transform;return this}}function FileLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}
function AnimationLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function CompressedTextureLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;this._parser=null}function DataTextureLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;this._parser=null}function ImageLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function CubeTextureLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}
function TextureLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function Curve(){this.type="Curve";this.arcLengthDivisions=200}function EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){Curve.call(this);this.type="EllipseCurve";this.aX=aX||0;this.aY=aY||0;this.xRadius=xRadius||1;this.yRadius=yRadius||1;this.aStartAngle=aStartAngle||0;this.aEndAngle=aEndAngle||2*Math.PI;this.aClockwise=aClockwise||!1;this.aRotation=aRotation||0}function ArcCurve(aX,
aY,aRadius,aStartAngle,aEndAngle,aClockwise){EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type="ArcCurve"}function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;return{initCatmullRom:function(x0,x1,x2,x3,tension){x0=tension*(x2-x0);x3=tension*(x3-x1);c0=x1;c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){x0=((x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1)*dt1;x3=((x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2)*dt1;c0=x1;
c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},calc:function(t){var t2=t*t;return c0+c1*t+c2*t2+c3*t2*t}}}function CatmullRomCurve3(points,closed,curveType,tension){Curve.call(this);this.type="CatmullRomCurve3";this.points=points||[];this.closed=closed||!1;this.curveType=curveType||"centripetal";this.tension=tension||.5}function CatmullRom(t,p0,p1,p2,p3){p0=.5*(p2-p0);p3=.5*(p3-p1);var t2=t*t;return(2*p1-2*p2+p0+p3)*t*t2+(-3*p1+3*p2-2*p0-p3)*t2+p0*t+p1}function QuadraticBezier(t,p0,p1,p2){var k=
1-t;return k*k*p0+2*(1-t)*t*p1+t*t*p2}function CubicBezier(t,p0,p1,p2,p3){var k=1-t,k$jscomp$0=1-t;return k*k*k*p0+3*k$jscomp$0*k$jscomp$0*t*p1+3*(1-t)*t*t*p2+t*t*t*p3}function CubicBezierCurve(v0,v1,v2,v3){Curve.call(this);this.type="CubicBezierCurve";this.v0=v0||new Vector2;this.v1=v1||new Vector2;this.v2=v2||new Vector2;this.v3=v3||new Vector2}function CubicBezierCurve3(v0,v1,v2,v3){Curve.call(this);this.type="CubicBezierCurve3";this.v0=v0||new Vector3;this.v1=v1||new Vector3;this.v2=v2||new Vector3;
this.v3=v3||new Vector3}function LineCurve(v1,v2){Curve.call(this);this.type="LineCurve";this.v1=v1||new Vector2;this.v2=v2||new Vector2}function LineCurve3(v1,v2){Curve.call(this);this.type="LineCurve3";this.v1=v1||new Vector3;this.v2=v2||new Vector3}function QuadraticBezierCurve(v0,v1,v2){Curve.call(this);this.type="QuadraticBezierCurve";this.v0=v0||new Vector2;this.v1=v1||new Vector2;this.v2=v2||new Vector2}function QuadraticBezierCurve3(v0,v1,v2){Curve.call(this);this.type="QuadraticBezierCurve3";
this.v0=v0||new Vector3;this.v1=v1||new Vector3;this.v2=v2||new Vector3}function SplineCurve(points){Curve.call(this);this.type="SplineCurve";this.points=points||[]}function CurvePath(){Curve.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Path(points){CurvePath.call(this);this.type="Path";this.currentPoint=new Vector2;points&&this.setFromPoints(points)}function Shape(points){Path.call(this,points);this.uuid=_Math.generateUUID();this.type="Shape";this.holes=[]}function Light(color,
intensity){Object3D.call(this);this.type="Light";this.color=new Color(color);this.intensity=void 0!==intensity?intensity:1;this.receiveShadow=void 0}function HemisphereLight(skyColor,groundColor,intensity){Light.call(this,skyColor,intensity);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor)}function LightShadow(camera){this.camera=camera;this.bias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=
null;this.matrix=new Matrix4}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}function SpotLight(color,intensity,distance,angle,penumbra,decay){Light.call(this,color,intensity);this.type="SpotLight";this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(power){this.intensity=power/Math.PI}});this.distance=void 0!==distance?distance:0;this.angle=
void 0!==angle?angle:Math.PI/3;this.penumbra=void 0!==penumbra?penumbra:0;this.decay=void 0!==decay?decay:1;this.shadow=new SpotLightShadow}function PointLight(color,intensity,distance,decay){Light.call(this,color,intensity);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(power){this.intensity=power/(4*Math.PI)}});this.distance=void 0!==distance?distance:0;this.decay=void 0!==decay?decay:1;this.shadow=new LightShadow(new PerspectiveCamera(90,
1,.5,500))}function OrthographicCamera(left,right,top,bottom,near,far){Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=void 0!==left?left:-1;this.right=void 0!==right?right:1;this.top=void 0!==top?top:1;this.bottom=void 0!==bottom?bottom:-1;this.near=void 0!==near?near:.1;this.far=void 0!==far?far:2E3;this.updateProjectionMatrix()}function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(color,
intensity){Light.call(this,color,intensity);this.type="DirectionalLight";this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D;this.shadow=new DirectionalLightShadow}function AmbientLight(color,intensity){Light.call(this,color,intensity);this.type="AmbientLight";this.castShadow=void 0}function RectAreaLight(color,intensity,width,height){Light.call(this,color,intensity);this.type="RectAreaLight";this.width=void 0!==width?width:10;this.height=void 0!==height?height:10}
function MaterialLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;this.textures={}}function BufferGeometryLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function ObjectLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;this.resourcePath=""}function ImageBitmapLoader(manager){"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.");"undefined"===typeof fetch&&
console.warn("THREE.ImageBitmapLoader: fetch() not supported.");this.manager=void 0!==manager?manager:DefaultLoadingManager;this.options=void 0}function ShapePath(){this.type="ShapePath";this.color=new Color;this.subPaths=[];this.currentPath=null}function Font(data){this.type="Font";this.data=data}function FontLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function Loader(){}function AudioLoader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager}function StereoCamera(){this.type=
"StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function CubeCamera(near,far,cubeResolution,options){Object3D.call(this);this.type="CubeCamera";var cameraPX=new PerspectiveCamera(90,1,near,far);cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);var cameraNX=new PerspectiveCamera(90,
1,near,far);cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);var cameraPY=new PerspectiveCamera(90,1,near,far);cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);var cameraNY=new PerspectiveCamera(90,1,near,far);cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);var cameraPZ=new PerspectiveCamera(90,1,near,far);cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);var cameraNZ=new PerspectiveCamera(90,
1,near,far);cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);options=options||{format:1022,magFilter:1006,minFilter:1006};this.renderTarget=new WebGLRenderTargetCube(cubeResolution,cubeResolution,options);this.renderTarget.texture.name="CubeCamera";this.update=function(renderer,scene){null===this.parent&&this.updateMatrixWorld();var currentRenderTarget=renderer.getRenderTarget(),renderTarget=this.renderTarget,generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=
!1;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget)};
this.clear=function(renderer,color,depth,stencil){for(var currentRenderTarget=renderer.getRenderTarget(),renderTarget=this.renderTarget,i=0;6>i;i++)renderer.setRenderTarget(renderTarget,i),renderer.clear(color,depth,stencil);renderer.setRenderTarget(currentRenderTarget)}}function Clock(autoStart){this.autoStart=void 0!==autoStart?autoStart:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function AudioListener(){Object3D.call(this);this.type="AudioListener";this.context=AudioContext.getContext();
this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0}function Audio(listener){Object3D.call(this);this.type="Audio";this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=!1;this.buffer=null;this.detune=0;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function PositionalAudio(listener){Audio.call(this,
listener);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function AudioAnalyser(audio,fftSize){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=void 0!==fftSize?fftSize:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser)}function PropertyMixer(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;binding=Float64Array;switch(typeName){case "quaternion":typeName=this._slerp;break;case "string":case "bool":binding=
Array;typeName=this._select;break;default:typeName=this._lerp}this.buffer=new binding(4*valueSize);this._mixBufferRegion=typeName;this.referenceCount=this.useCount=this.cumulativeWeight=0}function Composite(targetGroup,path,optionalParsedPath){optionalParsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,optionalParsedPath)}function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||
PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode}function AnimationObjectGroup(){this.uuid=_Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var indices={};this._indicesByUUID=indices;for(var i=0,n=arguments.length;i!==n;++i)indices[arguments[i].uuid]=i;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var scope=this;this.stats=
{objects:{get total(){return scope._objects.length},get inUse(){return this.total-scope.nCachedObjects_}},get bindingsPerObject(){return scope._bindings.length}}}function AnimationAction(mixer,clip,localRoot){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot||null;mixer=clip.tracks;clip=mixer.length;localRoot=Array(clip);for(var interpolantSettings={endingStart:2400,endingEnd:2400},i=0;i!==clip;++i){var interpolant=mixer[i].createInterpolant(null);localRoot[i]=interpolant;interpolant.settings=
interpolantSettings}this._interpolantSettings=interpolantSettings;this._interpolants=localRoot;this._propertyBindings=Array(clip);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function AnimationMixer(root){this._root=
root;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Uniform(value,JSCompiler_OptimizeArgumentsArray_p2){"string"===typeof value&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),value=JSCompiler_OptimizeArgumentsArray_p2);this.value=value}function InstancedBufferGeometry(){BufferGeometry.call(this);this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,
array,stride);this.meshPerAttribute=meshPerAttribute||1}function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){"number"===typeof normalized&&(meshPerAttribute=normalized,normalized=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1}function Raycaster(origin,direction,near,far){this.ray=new Ray(origin,direction);this.near=
near||0;this.far=far||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function ascSort(a,b){return a.distance-b.distance}function intersectObject(object,raycaster,intersects,recursive){if(!1!==object.visible&&(object.raycast(raycaster,intersects),!0===recursive)){object=object.children;recursive=0;
for(var l=object.length;recursive<l;recursive++)intersectObject(object[recursive],raycaster,intersects,!0)}}function Spherical(radius,phi,theta){this.radius=void 0!==radius?radius:1;this.phi=void 0!==phi?phi:0;this.theta=void 0!==theta?theta:0;return this}function Cylindrical(radius,theta,y){this.radius=void 0!==radius?radius:1;this.theta=void 0!==theta?theta:0;this.y=void 0!==y?y:0;return this}function Box2(min,max){this.min=void 0!==min?min:new Vector2(Infinity,Infinity);this.max=void 0!==max?max:
new Vector2(-Infinity,-Infinity)}function Line3(start,end){this.start=void 0!==start?start:new Vector3;this.end=void 0!==end?end:new Vector3}function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function(){}}function VertexNormalsHelper(object,size,hex,linewidth){this.object=object;this.size=void 0!==size?size:1;object=void 0!==hex?hex:16711680;linewidth=void 0!==linewidth?linewidth:1;size=0;(hex=this.object.geometry)&&hex.isGeometry?size=3*hex.faces.length:
hex&&hex.isBufferGeometry&&(size=hex.attributes.normal.count);hex=new BufferGeometry;size=new Float32BufferAttribute(6*size,3);hex.addAttribute("position",size);LineSegments.call(this,hex,new LineBasicMaterial({color:object,linewidth:linewidth}));this.matrixAutoUpdate=!1;this.update()}function SpotLightHelper(light,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;light=new BufferGeometry;color=[0,0,0,
0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var i=0,j=1;32>i;i++,j++){var p1=i/32*Math.PI*2,p2=j/32*Math.PI*2;color.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1)}light.addAttribute("position",new Float32BufferAttribute(color,3));color=new LineBasicMaterial({fog:!1});this.cone=new LineSegments(light,color);this.add(this.cone);this.update()}function getBoneList(object){var boneList=[];object&&object.isBone&&boneList.push(object);for(var i=0;i<object.children.length;i++)boneList.push.apply(boneList,
getBoneList(object.children[i]));return boneList}function SkeletonHelper(object){for(var bones=getBoneList(object),geometry=new BufferGeometry,vertices=[],colors=[],color1=new Color(0,0,1),color2=new Color(0,1,0),i=0;i<bones.length;i++){var bone=bones[i];bone.parent&&bone.parent.isBone&&(vertices.push(0,0,0),vertices.push(0,0,0),colors.push(color1.r,color1.g,color1.b),colors.push(color2.r,color2.g,color2.b))}geometry.addAttribute("position",new Float32BufferAttribute(vertices,3));geometry.addAttribute("color",
new Float32BufferAttribute(colors,3));vertices=new LineBasicMaterial({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});LineSegments.call(this,geometry,vertices);this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=!1}function PointLightHelper(light,sphereSize,color){this.light=light;this.light.updateMatrixWorld();this.color=color;light=new SphereBufferGeometry(sphereSize,4,2);sphereSize=new MeshBasicMaterial({wireframe:!0,fog:!1});Mesh.call(this,light,sphereSize);
this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function RectAreaLightHelper(light,color){this.type="RectAreaLightHelper";this.light=light;this.color=color;light=new BufferGeometry;light.addAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3));light.computeBoundingSphere();color=new LineBasicMaterial({fog:!1});Line.call(this,light,color);light=new BufferGeometry;light.addAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,
0,1,1,0,-1,-1,0,1,-1,0],3));light.computeBoundingSphere();this.add(new Mesh(light,new MeshBasicMaterial({side:1,fog:!1})));this.update()}function HemisphereLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;light=new OctahedronBufferGeometry(size);light.rotateY(.5*Math.PI);this.material=new MeshBasicMaterial({wireframe:!0,fog:!1});void 0===this.color&&(this.material.vertexColors=
2);size=light.getAttribute("position");size=new Float32Array(3*size.count);light.addAttribute("color",new BufferAttribute(size,3));this.add(new Mesh(light,this.material));this.update()}function GridHelper(size,divisions,color1,color2){size=size||10;divisions=divisions||10;color1=new Color(void 0!==color1?color1:4473924);color2=new Color(void 0!==color2?color2:8947848);var center=divisions/2,step=size/divisions,halfSize=size/2;size=[];for(var colors=[],i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){size.push(-halfSize,
0,k,halfSize,0,k);size.push(k,0,-halfSize,k,0,halfSize);var color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3}divisions=new BufferGeometry;divisions.addAttribute("position",new Float32BufferAttribute(size,3));divisions.addAttribute("color",new Float32BufferAttribute(colors,3));color1=new LineBasicMaterial({vertexColors:2});LineSegments.call(this,divisions,color1)}function PolarGridHelper(radius,radials,
circles,divisions,color1,color2){radius=radius||10;radials=radials||16;circles=circles||8;divisions=divisions||64;color1=new Color(void 0!==color1?color1:4473924);color2=new Color(void 0!==color2?color2:8947848);var vertices=[],colors=[],i;for(i=0;i<=radials;i++){var z=i/radials*2*Math.PI;var x=Math.sin(z)*radius;z=Math.cos(z)*radius;vertices.push(0,0,0);vertices.push(x,0,z);var color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b)}for(i=0;i<=circles;i++){color=
i&1?color1:color2;var r=radius-radius/circles*i;for(radials=0;radials<divisions;radials++)z=radials/divisions*2*Math.PI,x=Math.sin(z)*r,z=Math.cos(z)*r,vertices.push(x,0,z),colors.push(color.r,color.g,color.b),z=(radials+1)/divisions*2*Math.PI,x=Math.sin(z)*r,z=Math.cos(z)*r,vertices.push(x,0,z),colors.push(color.r,color.g,color.b)}radius=new BufferGeometry;radius.addAttribute("position",new Float32BufferAttribute(vertices,3));radius.addAttribute("color",new Float32BufferAttribute(colors,3));vertices=
new LineBasicMaterial({vertexColors:2});LineSegments.call(this,radius,vertices)}function PositionalAudioHelper(audio,range,divisionsInnerAngle,divisionsOuterAngle){this.audio=audio;this.range=range||1;this.divisionsInnerAngle=divisionsInnerAngle||16;this.divisionsOuterAngle=divisionsOuterAngle||2;audio=new BufferGeometry;range=new Float32Array(3*(3*(this.divisionsInnerAngle+2*this.divisionsOuterAngle)+3));audio.addAttribute("position",new BufferAttribute(range,3));range=new LineBasicMaterial({color:65280});
divisionsInnerAngle=new LineBasicMaterial({color:16776960});Line.call(this,audio,[divisionsInnerAngle,range]);this.update()}function FaceNormalsHelper(object,size,hex,linewidth){this.object=object;this.size=void 0!==size?size:1;object=void 0!==hex?hex:16776960;linewidth=void 0!==linewidth?linewidth:1;size=0;(hex=this.object.geometry)&&hex.isGeometry?size=hex.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");hex=new BufferGeometry;
size=new Float32BufferAttribute(6*size,3);hex.addAttribute("position",size);LineSegments.call(this,hex,new LineBasicMaterial({color:object,linewidth:linewidth}));this.matrixAutoUpdate=!1;this.update()}function DirectionalLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;void 0===size&&(size=1);light=new BufferGeometry;light.addAttribute("position",new Float32BufferAttribute([-size,
size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));size=new LineBasicMaterial({fog:!1});this.lightPlane=new Line(light,size);this.add(this.lightPlane);light=new BufferGeometry;light.addAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(light,size);this.add(this.targetLine);this.update()}function CameraHelper(camera){function addLine(a,b,color){addPoint(a,color);addPoint(b,color)}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,
color.g,color.b);void 0===pointMap[id]&&(pointMap[id]=[]);pointMap[id].push(vertices.length/3-1)}var geometry=new BufferGeometry,material=new LineBasicMaterial({color:16777215,vertexColors:1}),vertices=[],colors=[],pointMap={},colorFrustum=new Color(16755200),colorCone=new Color(16711680),colorUp=new Color(43775),colorTarget=new Color(16777215),colorCross=new Color(3355443);addLine("n1","n2",colorFrustum);addLine("n2","n4",colorFrustum);addLine("n4","n3",colorFrustum);addLine("n3","n1",colorFrustum);
addLine("f1","f2",colorFrustum);addLine("f2","f4",colorFrustum);addLine("f4","f3",colorFrustum);addLine("f3","f1",colorFrustum);addLine("n1","f1",colorFrustum);addLine("n2","f2",colorFrustum);addLine("n3","f3",colorFrustum);addLine("n4","f4",colorFrustum);addLine("p","n1",colorCone);addLine("p","n2",colorCone);addLine("p","n3",colorCone);addLine("p","n4",colorCone);addLine("u1","u2",colorUp);addLine("u2","u3",colorUp);addLine("u3","u1",colorUp);addLine("c","t",colorTarget);addLine("p","c",colorCross);
addLine("cn1","cn2",colorCross);addLine("cn3","cn4",colorCross);addLine("cf1","cf2",colorCross);addLine("cf3","cf4",colorCross);geometry.addAttribute("position",new Float32BufferAttribute(vertices,3));geometry.addAttribute("color",new Float32BufferAttribute(colors,3));LineSegments.call(this,geometry,material);this.camera=camera;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=pointMap;this.update()}function BoxHelper(object,
color){this.object=object;void 0===color&&(color=16776960);object=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array(24),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(object,1));geometry.addAttribute("position",new BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color}));this.matrixAutoUpdate=!1;this.update()}function Box3Helper(box,hex){this.type="Box3Helper";this.box=box;box=void 0!==hex?
hex:16776960;hex=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(hex,1));geometry.addAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));LineSegments.call(this,geometry,new LineBasicMaterial({color:box}));this.geometry.computeBoundingSphere()}function PlaneHelper(plane,size,hex){this.type="PlaneHelper";this.plane=plane;this.size=void 0===size?1:size;
plane=void 0!==hex?hex:16776960;size=new BufferGeometry;size.addAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));size.computeBoundingSphere();Line.call(this,size,new LineBasicMaterial({color:plane}));size=new BufferGeometry;size.addAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));size.computeBoundingSphere();this.add(new Mesh(size,new MeshBasicMaterial({color:plane,opacity:.2,transparent:!0,
depthWrite:!1})))}function ArrowHelper(dir,origin,length,color,headLength,headWidth){Object3D.call(this);void 0===dir&&(dir=new Vector3(0,0,1));void 0===origin&&(origin=new Vector3(0,0,0));void 0===length&&(length=1);void 0===color&&(color=16776960);void 0===headLength&&(headLength=.2*length);void 0===headWidth&&(headWidth=.2*headLength);void 0===lineGeometry&&(lineGeometry=new BufferGeometry,lineGeometry.addAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),coneGeometry=new CylinderBufferGeometry(0,
.5,1,5,1),coneGeometry.translate(0,-.5,0));this.position.copy(origin);this.line=new Line(lineGeometry,new LineBasicMaterial({color:color}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new Mesh(coneGeometry,new MeshBasicMaterial({color:color}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth)}function AxesHelper(size){size=size||1;var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];size=new BufferGeometry;size.addAttribute("position",
new Float32BufferAttribute(vertices,3));size.addAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));vertices=new LineBasicMaterial({vertexColors:2});LineSegments.call(this,size,vertices)}function ClosedSplineCurve3(points){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3.call(this,points);this.type="catmullrom";this.closed=!0}function SplineCurve3(points){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");
CatmullRomCurve3.call(this,points);this.type="catmullrom"}function Spline(points){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3.call(this,points);this.type="catmullrom"}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Number.isInteger&&(Number.isInteger=function(value){return"number"===typeof value&&isFinite(value)&&Math.floor(value)===value});void 0===Math.sign&&(Math.sign=function(x){return 0>x?-1:0<x?1:+x});!1==="name"in Function.prototype&&
Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});void 0===Object.assign&&function(){Object.assign=function(target){if(void 0===target||null===target)throw new TypeError("Cannot convert undefined or null to object");for(var output=Object(target),index=1;index<arguments.length;index++){var source=arguments[index];if(void 0!==source&&null!==source)for(var nextKey in source)Object.prototype.hasOwnProperty.call(source,nextKey)&&
(output[nextKey]=source[nextKey])}return output}}();Object.assign(EventDispatcher.prototype,{addEventListener:function(type,listener){void 0===this._listeners&&(this._listeners={});var listeners=this._listeners;void 0===listeners[type]&&(listeners[type]=[]);-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)},hasEventListener:function(type,listener){if(void 0===this._listeners)return!1;var listeners=this._listeners;return void 0!==listeners[type]&&-1!==listeners[type].indexOf(listener)},
removeEventListener:function(type,listener){void 0!==this._listeners&&(type=this._listeners[type],void 0!==type&&(listener=type.indexOf(listener),-1!==listener&&type.splice(listener,1)))},dispatchEvent:function(event){if(void 0!==this._listeners){var listenerArray=this._listeners[event.type];if(void 0!==listenerArray){event.target=this;listenerArray=listenerArray.slice(0);for(var i=0,l=listenerArray.length;i<l;i++)listenerArray[i].call(this,event)}}}});var _Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,
generateUUID:function(){for(var lut=[],i=0;256>i;i++)lut[i]=(16>i?"0":"")+i.toString(16);return function(){var d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(lut[d0&255]+lut[d0>>8&255]+lut[d0>>16&255]+lut[d0>>24&255]+"-"+lut[d1&255]+lut[d1>>8&255]+"-"+lut[d1>>16&15|64]+lut[d1>>24&255]+"-"+lut[d2&63|128]+lut[d2>>8&255]+"-"+lut[d2>>16&255]+lut[d2>>24&255]+lut[d3&255]+lut[d3>>8&255]+lut[d3>>16&255]+lut[d3>>24&255]).toUpperCase()}}(),
clamp:function(value,min,max){return Math.max(min,Math.min(max,value))},euclideanModulo:function(n,m){return(n%m+m)%m},mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},lerp:function(x,y,t){return(1-t)*x+t*y},smoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x)},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(6*x-15)+10)},randInt:function(low,high){return low+Math.floor(Math.random()*
(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*(.5-Math.random())},degToRad:function(degrees){return degrees*_Math.DEG2RAD},radToDeg:function(radians){return radians*_Math.RAD2DEG},isPowerOfTwo:function(value){return 0===(value&value-1)&&0!==value},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2))},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2))}};
Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(value){this.x=value}},height:{get:function(){return this.y},set:function(value){this.y=value}}});Object.assign(Vector2.prototype,{isVector2:!0,set:function(x,y){this.x=x;this.y=y;return this},setScalar:function(scalar){this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=
value;break;default:throw Error("index is out of range: "+index);}return this},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(v){this.x=v.x;this.y=v.y;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w);this.x+=
v.x;this.y+=v.y;return this},addScalar:function(s){this.x+=s;this.y+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;return this},subScalar:function(s){this.x-=s;this.y-=s;return this},subVectors:function(a,b){this.x=
a.x-b.x;this.y=a.y-b.y;return this},multiply:function(v){this.x*=v.x;this.y*=v.y;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;return this},divide:function(v){this.x/=v.x;this.y/=v.y;return this},divideScalar:function(scalar){return this.multiplyScalar(1/scalar)},applyMatrix3:function(m){var x=this.x,y=this.y;m=m.elements;this.x=m[0]*x+m[3]*y+m[6];this.y=m[1]*x+m[4]*y+m[7];return this},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this},
max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this},clampScalar:function(){var min=new Vector2,max=new Vector2;return function(minVal,maxVal){min.set(minVal,minVal);max.set(maxVal,maxVal);return this.clamp(min,max)}}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,
length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(v){return this.x*v.x+this.y*v.y},
cross:function(v){return this.x*v.y-this.y*v.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var angle=Math.atan2(this.y,this.x);0>angle&&(angle+=2*Math.PI);return angle},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=
this.x-v.x;v=this.y-v.y;return dx*dx+v*v},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1)},equals:function(v){return v.x===this.x&&v.y===this.y},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=
array[offset];this.y=array[offset+1];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.x;array[offset+1]=this.y;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");this.x=attribute.getX(index);this.y=attribute.getY(index);return this},rotateAround:function(center,angle){var c=Math.cos(angle);angle=Math.sin(angle);var x=
this.x-center.x,y=this.y-center.y;this.x=x*c-y*angle+center.x;this.y=x*angle+y*c+center.y;return this}});Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},
clone:function(){return(new Matrix4).fromArray(this.elements)},copy:function(m){var te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];te[9]=m[9];te[10]=m[10];te[11]=m[11];te[12]=m[12];te[13]=m[13];te[14]=m[14];te[15]=m[15];return this},copyPosition:function(m){var te=this.elements;m=m.elements;te[12]=m[12];te[13]=m[13];te[14]=m[14];return this},extractBasis:function(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);
yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this},makeBasis:function(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this},extractRotation:function(){var v1=new Vector3;return function(m){var te=this.elements,me=m.elements,scaleX=1/v1.setFromMatrixColumn(m,0).length(),scaleY=1/v1.setFromMatrixColumn(m,1).length();m=1/v1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=
me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*m;te[9]=me[9]*m;te[10]=me[10]*m;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this}}(),makeRotationFromEuler:function(euler){euler&&euler.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var te=this.elements,x=euler.x,y=euler.y,z=euler.z,a=Math.cos(x);x=Math.sin(x);var c=Math.cos(y);y=Math.sin(y);var e=Math.cos(z);z=
Math.sin(z);if("XYZ"===euler.order){euler=a*e;var af=a*z,be=x*e,bf=x*z;te[0]=c*e;te[4]=-c*z;te[8]=y;te[1]=af+be*y;te[5]=euler-bf*y;te[9]=-x*c;te[2]=bf-euler*y;te[6]=be+af*y;te[10]=a*c}else"YXZ"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler+bf*x,te[4]=be*x-af,te[8]=a*y,te[1]=a*z,te[5]=a*e,te[9]=-x,te[2]=af*x-be,te[6]=bf+euler*x,te[10]=a*c):"ZXY"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler-bf*x,te[4]=-a*z,te[8]=be+af*x,te[1]=af+be*x,te[5]=a*e,te[9]=bf-euler*x,te[2]=-a*y,te[6]=
x,te[10]=a*c):"ZYX"===euler.order?(euler=a*e,af=a*z,be=x*e,bf=x*z,te[0]=c*e,te[4]=be*y-af,te[8]=euler*y+bf,te[1]=c*z,te[5]=bf*y+euler,te[9]=af*y-be,te[2]=-y,te[6]=x*c,te[10]=a*c):"YZX"===euler.order?(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=bf-euler*z,te[8]=be*z+af,te[1]=z,te[5]=a*e,te[9]=-x*e,te[2]=-y*e,te[6]=af*z+be,te[10]=euler-bf*z):"XZY"===euler.order&&(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=-z,te[8]=y*e,te[1]=euler*z+bf,te[5]=a*e,te[9]=af*z-be,te[2]=be*z-af,te[6]=x*e,te[10]=bf*
z+euler);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this},makeRotationFromQuaternion:function(){var zero=new Vector3(0,0,0),one=new Vector3(1,1,1);return function(q){return this.compose(zero,q,one)}}(),lookAt:function(){var x=new Vector3,y=new Vector3,z=new Vector3;return function(eye,target,up){var te=this.elements;z.subVectors(eye,target);0===z.lengthSq()&&(z.z=1);z.normalize();x.crossVectors(up,z);0===x.lengthSq()&&(1===Math.abs(up.z)?z.x+=1E-4:z.z+=1E-4,z.normalize(),
x.crossVectors(up,z));x.normalize();y.crossVectors(z,x);te[0]=x.x;te[4]=y.x;te[8]=z.x;te[1]=x.y;te[5]=y.y;te[9]=z.y;te[2]=x.z;te[6]=y.z;te[10]=z.z;return this}}(),multiply:function(m,n){return void 0!==n?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(m,n)):this.multiplyMatrices(this,m)},premultiply:function(m){return this.multiplyMatrices(m,this)},multiplyMatrices:function(a,b){var ae=a.elements,be=b.elements;
b=this.elements;a=ae[0];var a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11];ae=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11];be=be[15];b[0]=a*b11+a12*b21+a13*b31+a14*b41;b[4]=a*b12+a12*b22+a13*b32+a14*b42;b[8]=a*b13+a12*b23+a13*b33+a14*b43;b[12]=a*b14+a12*b24+a13*b34+a14*be;b[1]=a21*
b11+a22*b21+a23*b31+a24*b41;b[5]=a21*b12+a22*b22+a23*b32+a24*b42;b[9]=a21*b13+a22*b23+a23*b33+a24*b43;b[13]=a21*b14+a22*b24+a23*b34+a24*be;b[2]=a31*b11+a32*b21+a33*b31+a34*b41;b[6]=a31*b12+a32*b22+a33*b32+a34*b42;b[10]=a31*b13+a32*b23+a33*b33+a34*b43;b[14]=a31*b14+a32*b24+a33*b34+a34*be;b[3]=a41*b11+a42*b21+a43*b31+ae*b41;b[7]=a41*b12+a42*b22+a43*b32+ae*b42;b[11]=a41*b13+a42*b23+a43*b33+ae*b43;b[15]=a41*b14+a42*b24+a43*b34+ae*be;return this},multiplyScalar:function(s){var te=this.elements;te[0]*=
s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this},applyToBufferAttribute:function(){var v1=new Vector3;return function(attribute){for(var i=0,l=attribute.count;i<l;i++)v1.x=attribute.getX(i),v1.y=attribute.getY(i),v1.z=attribute.getZ(i),v1.applyMatrix4(this),attribute.setXYZ(i,v1.x,v1.y,v1.z);return attribute}}(),determinant:function(){var te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],
n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14];return te[3]*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+te[7]*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+te[11]*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+te[15]*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)},transpose:function(){var te=this.elements;var tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];
te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this},setPosition:function(v){var te=this.elements;te[12]=v.x;te[13]=v.y;te[14]=v.z;return this},getInverse:function(m,throwOnDegenerate){var te=this.elements,me=m.elements;m=me[0];var n21=me[1],n31=me[2],n41=me[3],n12=me[4],n22=me[5],n32=me[6],n42=me[7],n13=me[8],n23=me[9],n33=me[10],n43=me[11],n14=me[12],n24=me[13],n34=me[14];me=me[15];
var t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*me+n22*n33*me,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*me-n12*n33*me,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*me+n12*n23*me,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,det=m*t11+n21*t12+n31*t13+n41*t14;if(0===det){if(!0===throwOnDegenerate)throw Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");
return this.identity()}throwOnDegenerate=1/det;te[0]=t11*throwOnDegenerate;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*me-n21*n33*me)*throwOnDegenerate;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*me+n21*n32*me)*throwOnDegenerate;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*throwOnDegenerate;te[4]=t12*throwOnDegenerate;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-m*n34*n43-n13*n31*me+m*n33*me)*throwOnDegenerate;te[6]=(n14*n32*n41-
n12*n34*n41-n14*n31*n42+m*n34*n42+n12*n31*me-m*n32*me)*throwOnDegenerate;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-m*n33*n42-n12*n31*n43+m*n32*n43)*throwOnDegenerate;te[8]=t13*throwOnDegenerate;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+m*n24*n43+n13*n21*me-m*n23*me)*throwOnDegenerate;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-m*n24*n42-n12*n21*me+m*n22*me)*throwOnDegenerate;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+m*n23*n42+n12*n21*n43-m*n22*n43)*throwOnDegenerate;te[12]=t14*throwOnDegenerate;
te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-m*n24*n33-n13*n21*n34+m*n23*n34)*throwOnDegenerate;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+m*n24*n32+n12*n21*n34-m*n22*n34)*throwOnDegenerate;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-m*n23*n32-n12*n21*n33+m*n22*n33)*throwOnDegenerate;return this},scale:function(v){var te=this.elements,x=v.x,y=v.y;v=v.z;te[0]*=x;te[4]*=y;te[8]*=v;te[1]*=x;te[5]*=y;te[9]*=v;te[2]*=x;te[6]*=y;te[10]*=v;te[3]*=x;te[7]*=y;te[11]*=v;return this},getMaxScaleOnAxis:function(){var te=
this.elements;return Math.sqrt(Math.max(te[0]*te[0]+te[1]*te[1]+te[2]*te[2],te[4]*te[4]+te[5]*te[5]+te[6]*te[6],te[8]*te[8]+te[9]*te[9]+te[10]*te[10]))},makeTranslation:function(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this},makeRotationX:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(1,0,0,0,0,c,-theta,0,0,theta,c,0,0,0,0,1);return this},makeRotationY:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,0,theta,0,0,1,0,0,-theta,0,c,0,0,0,0,1);
return this},makeRotationZ:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,-theta,0,0,theta,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(axis,angle){var c=Math.cos(angle);angle=Math.sin(angle);var t=1-c,x=axis.x,y=axis.y;axis=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-angle*axis,tx*axis+angle*y,0,tx*y+angle*axis,ty*y+c,ty*axis-angle*x,0,tx*axis-angle*y,ty*axis+angle*x,t*axis*axis+c,0,0,0,0,1);return this},makeScale:function(x,y,z){this.set(x,0,0,0,0,y,0,
0,0,0,z,0,0,0,0,1);return this},makeShear:function(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this},compose:function(position,quaternion,scale){var te=this.elements,x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w,x2=x+x,y2=y+y,z2=z+z;quaternion=x*x2;var xy=x*y2;x*=z2;var yy=y*y2;y*=z2;z*=z2;x2*=w;y2*=w;w*=z2;z2=scale.x;var sy=scale.y;scale=scale.z;te[0]=(1-(yy+z))*z2;te[1]=(xy+w)*z2;te[2]=(x-y2)*z2;te[3]=0;te[4]=(xy-w)*sy;te[5]=(1-(quaternion+z))*sy;te[6]=(y+x2)*sy;te[7]=
0;te[8]=(x+y2)*scale;te[9]=(y-x2)*scale;te[10]=(1-(quaternion+yy))*scale;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this},decompose:function(){var vector=new Vector3,matrix=new Matrix4;return function(position,quaternion,scale){var te=this.elements,sx=vector.set(te[0],te[1],te[2]).length(),sy=vector.set(te[4],te[5],te[6]).length(),sz=vector.set(te[8],te[9],te[10]).length();0>this.determinant()&&(sx=-sx);position.x=te[12];position.y=te[13];position.z=te[14];matrix.copy(this);
position=1/sx;te=1/sy;var invSZ=1/sz;matrix.elements[0]*=position;matrix.elements[1]*=position;matrix.elements[2]*=position;matrix.elements[4]*=te;matrix.elements[5]*=te;matrix.elements[6]*=te;matrix.elements[8]*=invSZ;matrix.elements[9]*=invSZ;matrix.elements[10]*=invSZ;quaternion.setFromRotationMatrix(matrix);scale.x=sx;scale.y=sy;scale.z=sz;return this}}(),makePerspective:function(left,right,top,bottom,near,far){void 0===far&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
var te=this.elements;te[0]=2*near/(right-left);te[4]=0;te[8]=(right+left)/(right-left);te[12]=0;te[1]=0;te[5]=2*near/(top-bottom);te[9]=(top+bottom)/(top-bottom);te[13]=0;te[2]=0;te[6]=0;te[10]=-(far+near)/(far-near);te[14]=-2*far*near/(far-near);te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements,w=1/(right-left),h=1/(top-bottom),p=1/(far-near);te[0]=2*w;te[4]=0;te[8]=0;te[12]=-((right+left)*w);te[1]=0;te[5]=2*h;te[9]=0;te[13]=
-((top+bottom)*h);te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-((far+near)*p);te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this},equals:function(matrix){var te=this.elements;matrix=matrix.elements;for(var i=0;16>i;i++)if(te[i]!==matrix[i])return!1;return!0},fromArray:function(array,offset){void 0===offset&&(offset=0);for(var i=0;16>i;i++)this.elements[i]=array[i+offset];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);var te=this.elements;array[offset]=te[0];array[offset+
1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array}});Object.assign(Quaternion,{slerp:function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t)},slerpFlat:function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){var x0=
src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2];src0=src0[srcOffset0+3];srcOffset0=src1[srcOffset1+0];var y1=src1[srcOffset1+1],z1=src1[srcOffset1+2];src1=src1[srcOffset1+3];if(src0!==src1||x0!==srcOffset0||y0!==y1||z0!==z1){srcOffset1=1-t;var cos=x0*srcOffset0+y0*y1+z0*z1+src0*src1,dir=0<=cos?1:-1,sqrSin=1-cos*cos;sqrSin>Number.EPSILON&&(sqrSin=Math.sqrt(sqrSin),cos=Math.atan2(sqrSin,cos*dir),srcOffset1=Math.sin(srcOffset1*cos)/sqrSin,t=Math.sin(t*cos)/sqrSin);dir*=t;x0=x0*srcOffset1+
srcOffset0*dir;y0=y0*srcOffset1+y1*dir;z0=z0*srcOffset1+z1*dir;src0=src0*srcOffset1+src1*dir;srcOffset1===1-t&&(t=1/Math.sqrt(x0*x0+y0*y0+z0*z0+src0*src0),x0*=t,y0*=t,z0*=t,src0*=t)}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=src0}});Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(value){this._x=value;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(value){this._y=value;this.onChangeCallback()}},z:{get:function(){return this._z},
set:function(value){this._z=value;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(value){this._w=value;this.onChangeCallback()}}});Object.assign(Quaternion.prototype,{isQuaternion:!0,set:function(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this.onChangeCallback();
return this},setFromEuler:function(euler,update){if(!euler||!euler.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var x=euler._x,y=euler._y,z=euler._z;euler=euler.order;var cos=Math.cos,sin=Math.sin,c1=cos(x/2),c2=cos(y/2);cos=cos(z/2);x=sin(x/2);y=sin(y/2);z=sin(z/2);"XYZ"===euler?(this._x=x*c2*cos+c1*y*z,this._y=c1*y*cos-x*c2*z,this._z=c1*c2*z+x*y*cos,this._w=c1*c2*cos-x*y*z):"YXZ"===euler?(this._x=x*c2*cos+c1*y*z,this._y=
c1*y*cos-x*c2*z,this._z=c1*c2*z-x*y*cos,this._w=c1*c2*cos+x*y*z):"ZXY"===euler?(this._x=x*c2*cos-c1*y*z,this._y=c1*y*cos+x*c2*z,this._z=c1*c2*z+x*y*cos,this._w=c1*c2*cos-x*y*z):"ZYX"===euler?(this._x=x*c2*cos-c1*y*z,this._y=c1*y*cos+x*c2*z,this._z=c1*c2*z-x*y*cos,this._w=c1*c2*cos+x*y*z):"YZX"===euler?(this._x=x*c2*cos+c1*y*z,this._y=c1*y*cos+x*c2*z,this._z=c1*c2*z-x*y*cos,this._w=c1*c2*cos-x*y*z):"XZY"===euler&&(this._x=x*c2*cos-c1*y*z,this._y=c1*y*cos-x*c2*z,this._z=c1*c2*z+x*y*cos,this._w=c1*c2*
cos+x*y*z);if(!1!==update)this.onChangeCallback();return this},setFromAxisAngle:function(axis,angle){angle/=2;var s=Math.sin(angle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(angle);this.onChangeCallback();return this},setFromRotationMatrix:function(m){var te=m.elements,m11=te[0];m=te[4];var m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];var trace=m11+m22+te;0<trace?(m11=.5/Math.sqrt(trace+1),this._w=.25/m11,this._x=(m32-m23)*m11,this._y=(m13-m31)*m11,
this._z=(m21-m)*m11):m11>m22&&m11>te?(m11=2*Math.sqrt(1+m11-m22-te),this._w=(m32-m23)/m11,this._x=.25*m11,this._y=(m+m21)/m11,this._z=(m13+m31)/m11):m22>te?(m11=2*Math.sqrt(1+m22-m11-te),this._w=(m13-m31)/m11,this._x=(m+m21)/m11,this._y=.25*m11,this._z=(m23+m32)/m11):(m11=2*Math.sqrt(1+te-m11-m22),this._w=(m21-m)/m11,this._x=(m13+m31)/m11,this._y=(m23+m32)/m11,this._z=.25*m11);this.onChangeCallback();return this},setFromUnitVectors:function(){var v1=new Vector3,r;return function(vFrom,vTo){void 0===
v1&&(v1=new Vector3);r=vFrom.dot(vTo)+1;1E-6>r?(r=0,Math.abs(vFrom.x)>Math.abs(vFrom.z)?v1.set(-vFrom.y,vFrom.x,0):v1.set(0,-vFrom.z,vFrom.y)):v1.crossVectors(vFrom,vTo);this._x=v1.x;this._y=v1.y;this._z=v1.z;this._w=r;return this.normalize()}}(),angleTo:function(q){return 2*Math.acos(Math.abs(_Math.clamp(this.dot(q),-1,1)))},rotateTowards:function(q,step){var angle=this.angleTo(q);if(0===angle)return this;this.slerp(q,Math.min(1,step/angle));return this},inverse:function(){return this.conjugate()},
conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var l=this.length();0===l?(this._z=this._y=this._x=0,this._w=1):(l=1/l,this._x*=l,this._y*=l,this._z*=l,this._w*=l);this.onChangeCallback();
return this},multiply:function(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)},premultiply:function(q){return this.multiplyQuaternions(q,this)},multiplyQuaternions:function(a,b){var qax=a._x,qay=a._y,qaz=a._z;a=a._w;var qbx=b._x,qby=b._y,qbz=b._z;b=b._w;this._x=qax*b+a*qbx+qay*qbz-qaz*qby;this._y=qay*b+a*qby+qaz*qbx-qax*qbz;this._z=qaz*b+a*
qbz+qax*qby-qay*qbx;this._w=a*b-qax*qbx-qay*qby-qaz*qbz;this.onChangeCallback();return this},slerp:function(qb,t){if(0===t)return this;if(1===t)return this.copy(qb);var x=this._x,y=this._y,z=this._z,w=this._w,cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;0>cosHalfTheta?(this._w=-qb._w,this._x=-qb._x,this._y=-qb._y,this._z=-qb._z,cosHalfTheta=-cosHalfTheta):this.copy(qb);if(1<=cosHalfTheta)return this._w=w,this._x=x,this._y=y,this._z=z,this;qb=1-cosHalfTheta*cosHalfTheta;if(qb<=Number.EPSILON)return cosHalfTheta=
1-t,this._w=cosHalfTheta*w+t*this._w,this._x=cosHalfTheta*x+t*this._x,this._y=cosHalfTheta*y+t*this._y,this._z=cosHalfTheta*z+t*this._z,this.normalize();qb=Math.sqrt(qb);var halfTheta=Math.atan2(qb,cosHalfTheta);cosHalfTheta=Math.sin((1-t)*halfTheta)/qb;t=Math.sin(t*halfTheta)/qb;this._w=w*cosHalfTheta+this._w*t;this._x=x*cosHalfTheta+this._x*t;this._y=y*cosHalfTheta+this._y*t;this._z=z*cosHalfTheta+this._z*t;this.onChangeCallback();return this},equals:function(quaternion){return quaternion._x===
this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w},fromArray:function(array,offset){void 0===offset&&(offset=0);this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this.onChangeCallback();return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array},onChange:function(callback){this.onChangeCallback=
callback;return this},onChangeCallback:function(){}});Object.assign(Vector3.prototype,{isVector3:!0,set:function(x,y,z){this.x=x;this.y=y;this.z=z;return this},setScalar:function(scalar){this.z=this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw Error("index is out of range: "+
index);}return this},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w);this.x+=v.x;this.y+=v.y;this.z+=
v.z;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;this.z-=v.z;return this},subScalar:function(s){this.x-=s;this.y-=
s;this.z-=s;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(v,w);this.x*=v.x;this.y*=v.y;this.z*=v.z;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;
return this},applyEuler:function(){var quaternion=new Quaternion;return function(euler){euler&&euler.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");return this.applyQuaternion(quaternion.setFromEuler(euler))}}(),applyAxisAngle:function(){var quaternion=new Quaternion;return function(axis,angle){return this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle))}}(),applyMatrix3:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;
this.x=m[0]*x+m[3]*y+m[6]*z;this.y=m[1]*x+m[4]*y+m[7]*z;this.z=m[2]*x+m[5]*y+m[8]*z;return this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;var w=1/(m[3]*x+m[7]*y+m[11]*z+m[15]);this.x=(m[0]*x+m[4]*y+m[8]*z+m[12])*w;this.y=(m[1]*x+m[5]*y+m[9]*z+m[13])*w;this.z=(m[2]*x+m[6]*y+m[10]*z+m[14])*w;return this},applyQuaternion:function(q){var x=this.x,y=this.y,z=this.z,qx=q.x,qy=q.y,qz=q.z;q=q.w;var ix=q*x+qy*z-qz*y,iy=q*y+qz*x-qx*z,iz=q*z+qx*y-qy*x;x=-qx*x-qy*y-qz*z;this.x=ix*
q+x*-qx+iy*-qz-iz*-qy;this.y=iy*q+x*-qy+iz*-qx-ix*-qz;this.z=iz*q+x*-qz+ix*-qy-iy*-qx;return this},project:function(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix)},unproject:function(){var matrix=new Matrix4;return function(camera){return this.applyMatrix4(matrix.getInverse(camera.projectionMatrix)).applyMatrix4(camera.matrixWorld)}}(),transformDirection:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z;this.y=m[1]*
x+m[5]*y+m[9]*z;this.z=m[2]*x+m[6]*y+m[10]*z;return this.normalize()},divide:function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this},divideScalar:function(scalar){return this.multiplyScalar(1/scalar)},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));
this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this},clampScalar:function(){var min=new Vector3,max=new Vector3;return function(minVal,maxVal){min.set(minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal);return this.clamp(min,max)}}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=
Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;
return this},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=
(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1)},cross:function(v,w){return void 0!==w?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(v,w)):this.crossVectors(this,v)},crossVectors:function(a,b){var ax=a.x,ay=a.y;a=a.z;var bx=b.x,by=b.y;b=b.z;this.x=ay*b-a*by;this.y=a*bx-ax*b;this.z=ax*by-ay*bx;return this},projectOnVector:function(vector){var scalar=
vector.dot(this)/vector.lengthSq();return this.copy(vector).multiplyScalar(scalar)},projectOnPlane:function(){var v1=new Vector3;return function(planeNormal){v1.copy(this).projectOnVector(planeNormal);return this.sub(v1)}}(),reflect:function(){var v1=new Vector3;return function(normal){return this.sub(v1.copy(normal).multiplyScalar(2*this.dot(normal)))}}(),angleTo:function(v){v=this.dot(v)/Math.sqrt(this.lengthSq()*v.lengthSq());return Math.acos(_Math.clamp(v,-1,1))},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},
distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;v=this.z-v.z;return dx*dx+dy*dy+v*v},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z)},setFromSpherical:function(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)},setFromSphericalCoords:function(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this},setFromCylindrical:function(c){return this.setFromCylindricalCoords(c.radius,
c.theta,c.y)},setFromCylindricalCoords:function(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this},setFromMatrixPosition:function(m){m=m.elements;this.x=m[12];this.y=m[13];this.z=m[14];return this},setFromMatrixScale:function(m){var sx=this.setFromMatrixColumn(m,0).length(),sy=this.setFromMatrixColumn(m,1).length();m=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=m;return this},setFromMatrixColumn:function(m,index){return this.fromArray(m.elements,
4*index)},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().");
this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this}});Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(m){var te=this.elements;m=m.elements;
te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];return this},setFromMatrix4:function(m){m=m.elements;this.set(m[0],m[4],m[8],m[1],m[5],m[9],m[2],m[6],m[10]);return this},applyToBufferAttribute:function(){var v1=new Vector3;return function(attribute){for(var i=0,l=attribute.count;i<l;i++)v1.x=attribute.getX(i),v1.y=attribute.getY(i),v1.z=attribute.getZ(i),v1.applyMatrix3(this),attribute.setXYZ(i,v1.x,v1.y,v1.z);return attribute}}(),multiply:function(m){return this.multiplyMatrices(this,
m)},premultiply:function(m){return this.multiplyMatrices(m,this)},multiplyMatrices:function(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];var a12=ae[3],a13=ae[6],a21=ae[1],a22=ae[4],a23=ae[7],a31=ae[2],a32=ae[5];ae=ae[8];var b11=be[0],b12=be[3],b13=be[6],b21=be[1],b22=be[4],b23=be[7],b31=be[2],b32=be[5];be=be[8];b[0]=a*b11+a12*b21+a13*b31;b[3]=a*b12+a12*b22+a13*b32;b[6]=a*b13+a12*b23+a13*be;b[1]=a21*b11+a22*b21+a23*b31;b[4]=a21*b12+a22*b22+a23*b32;b[7]=a21*b13+a22*b23+a23*be;b[2]=a31*
b11+a32*b21+ae*b31;b[5]=a31*b12+a32*b22+ae*b32;b[8]=a31*b13+a32*b23+ae*be;return this},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this},determinant:function(){var te=this.elements,a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7];te=te[8];return a*e*te-a*f*h-b*d*te+b*f*g+c*d*h-c*e*g},getInverse:function(matrix,throwOnDegenerate){matrix&&matrix.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
var me=matrix.elements;matrix=this.elements;var n11=me[0],n21=me[1],n31=me[2],n12=me[3],n22=me[4],n32=me[5],n13=me[6],n23=me[7];me=me[8];var t11=me*n22-n32*n23,t12=n32*n13-me*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(0===det){if(!0===throwOnDegenerate)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return this.identity()}throwOnDegenerate=1/det;matrix[0]=t11*throwOnDegenerate;
matrix[1]=(n31*n23-me*n21)*throwOnDegenerate;matrix[2]=(n32*n21-n31*n22)*throwOnDegenerate;matrix[3]=t12*throwOnDegenerate;matrix[4]=(me*n11-n31*n13)*throwOnDegenerate;matrix[5]=(n31*n12-n32*n11)*throwOnDegenerate;matrix[6]=t13*throwOnDegenerate;matrix[7]=(n21*n13-n23*n11)*throwOnDegenerate;matrix[8]=(n22*n11-n21*n12)*throwOnDegenerate;return this},transpose:function(){var m=this.elements;var tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this},getNormalMatrix:function(matrix4){return this.setFromMatrix4(matrix4).getInverse(this).transpose()},
transposeIntoArray:function(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this},setUvTransform:function(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);rotation=Math.sin(rotation);this.set(sx*c,sx*rotation,-sx*(c*cx+rotation*cy)+cx+tx,-sy*rotation,sy*c,-sy*(-rotation*cx+c*cy)+cy+ty,0,0,1)},scale:function(sx,sy){var te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this},rotate:function(theta){var c=
Math.cos(theta);theta=Math.sin(theta);var te=this.elements,a11=te[0],a12=te[3],a13=te[6],a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+theta*a21;te[3]=c*a12+theta*a22;te[6]=c*a13+theta*a23;te[1]=-theta*a11+c*a21;te[4]=-theta*a12+c*a22;te[7]=-theta*a13+c*a23;return this},translate:function(tx,ty){var te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this},equals:function(matrix){var te=this.elements;matrix=matrix.elements;for(var i=
0;9>i;i++)if(te[i]!==matrix[i])return!1;return!0},fromArray:function(array,offset){void 0===offset&&(offset=0);for(var i=0;9>i;i++)this.elements[i]=array[i+offset];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array}});var _canvas,
ImageUtils={getDataURL:function(image){if("undefined"==typeof HTMLCanvasElement)return image.src;if(!(image instanceof HTMLCanvasElement)){void 0===_canvas&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"));_canvas.width=image.width;_canvas.height=image.height;var context=_canvas.getContext("2d");image instanceof ImageData?context.putImageData(image,0,0):context.drawImage(image,0,0,image.width,image.height);image=_canvas}return 2048<image.width||2048<image.height?image.toDataURL("image/jpeg",
.6):image.toDataURL("image/png")}},textureId=0;Texture.DEFAULT_IMAGE=void 0;Texture.DEFAULT_MAPPING=300;Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name;this.image=source.image;this.mipmaps=
source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=
source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this},toJSON:function(meta){var isRootObject=void 0===meta||"string"===typeof meta;if(!isRootObject&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];var output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,
this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var image=this.image;void 0===image.uuid&&(image.uuid=_Math.generateUUID());if(!isRootObject&&void 0===meta.images[image.uuid]){if(Array.isArray(image)){var url=[];for(var i=0,l=image.length;i<
l;i++)url.push(ImageUtils.getDataURL(image[i]))}else url=ImageUtils.getDataURL(image);meta.images[image.uuid]={uuid:image.uuid,url:url}}output.image=image.uuid}isRootObject||(meta.textures[this.uuid]=output);return output},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(uv){if(300!==this.mapping)return uv;uv.applyMatrix3(this.matrix);if(0>uv.x||1<uv.x)switch(this.wrapS){case 1E3:uv.x-=Math.floor(uv.x);break;case 1001:uv.x=0>uv.x?0:1;break;case 1002:uv.x=1===Math.abs(Math.floor(uv.x)%
2)?Math.ceil(uv.x)-uv.x:uv.x-Math.floor(uv.x)}if(0>uv.y||1<uv.y)switch(this.wrapT){case 1E3:uv.y-=Math.floor(uv.y);break;case 1001:uv.y=0>uv.y?0:1;break;case 1002:uv.y=1===Math.abs(Math.floor(uv.y)%2)?Math.ceil(uv.y)-uv.y:uv.y-Math.floor(uv.y)}this.flipY&&(uv.y=1-uv.y);return uv}});Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});Object.assign(Vector4.prototype,{isVector4:!0,set:function(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this},
setScalar:function(scalar){this.w=this.z=this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setW:function(w){this.w=w;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw Error("index is out of range: "+index);}return this},getComponent:function(index){switch(index){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=void 0!==v.w?v.w:1;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w);this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this},
addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this},subScalar:function(s){this.x-=
s;this.y-=s;this.z-=s;this.w-=s;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z,w=this.w;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z+m[12]*w;this.y=m[1]*x+m[5]*y+m[9]*z+m[13]*w;this.z=m[2]*x+m[6]*y+m[10]*z+m[14]*w;this.w=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return this},divideScalar:function(scalar){return this.multiplyScalar(1/
scalar)},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);1E-4>s?(this.x=1,this.z=this.y=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s);return this},setAxisAngleFromRotationMatrix:function(m){m=m.elements;var m11=m[0];var z=m[4];var m13=m[8],m21=m[1],m22=m[5],m23=m[9];var y=m[2];var x=m[6];var m33=m[10];if(.01>Math.abs(z-m21)&&.01>Math.abs(m13-y)&&.01>Math.abs(m23-x)){if(.1>Math.abs(z+m21)&&.1>Math.abs(m13+y)&&.1>Math.abs(m23+x)&&.1>Math.abs(m11+m22+m33-3))return this.set(1,
0,0,0),this;m=Math.PI;m11=(m11+1)/2;m22=(m22+1)/2;m33=(m33+1)/2;z=(z+m21)/4;m13=(m13+y)/4;m23=(m23+x)/4;m11>m22&&m11>m33?.01>m11?(x=0,z=y=.707106781):(x=Math.sqrt(m11),y=z/x,z=m13/x):m22>m33?.01>m22?(x=.707106781,y=0,z=.707106781):(y=Math.sqrt(m22),x=z/y,z=m23/y):.01>m33?(y=x=.707106781,z=0):(z=Math.sqrt(m33),x=m13/z,y=m23/z);this.set(x,y,z,m);return this}m=Math.sqrt((x-m23)*(x-m23)+(m13-y)*(m13-y)+(m21-z)*(m21-z));.001>Math.abs(m)&&(m=1);this.x=(x-m23)/m;this.y=(m13-y)/m;this.z=(m21-z)/m;this.w=
Math.acos((m11+m22+m33-1)/2);return this},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,
Math.min(max.w,this.w));return this},clampScalar:function(){var min,max;return function(minVal,maxVal){void 0===min&&(min=new Vector4,max=new Vector4);min.set(minVal,minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal,maxVal);return this.clamp(min,max)}}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=
Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):
Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||
1)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1)},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=array[offset];this.y=array[offset+
1];this.z=array[offset+2];this.w=array[offset+3];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);
return this}});WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(width,height){if(this.width!==width||this.height!==height)this.width=width,this.height=height,this.dispose();this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.width=source.width;this.height=source.height;this.viewport.copy(source.viewport);
this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(source){WebGLRenderTarget.prototype.copy.call(this,source);this.samples=source.samples;return this}});
WebGLRenderTargetCube.prototype=Object.create(WebGLRenderTarget.prototype);WebGLRenderTargetCube.prototype.constructor=WebGLRenderTargetCube;WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube=!0;DataTexture.prototype=Object.create(Texture.prototype);DataTexture.prototype.constructor=DataTexture;DataTexture.prototype.isDataTexture=!0;Object.assign(Box3.prototype,{isBox3:!0,set:function(min,max){this.min.copy(min);this.max.copy(max);return this},setFromArray:function(array){for(var minX=Infinity,
minY=Infinity,minZ=Infinity,maxX=-Infinity,maxY=-Infinity,maxZ=-Infinity,i=0,l=array.length;i<l;i+=3){var x=array[i],y=array[i+1],z=array[i+2];x<minX&&(minX=x);y<minY&&(minY=y);z<minZ&&(minZ=z);x>maxX&&(maxX=x);y>maxY&&(maxY=y);z>maxZ&&(maxZ=z)}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this},setFromBufferAttribute:function(attribute){for(var minX=Infinity,minY=Infinity,minZ=Infinity,maxX=-Infinity,maxY=-Infinity,maxZ=-Infinity,i=0,l=attribute.count;i<l;i++){var x=attribute.getX(i),
y=attribute.getY(i),z=attribute.getZ(i);x<minX&&(minX=x);y<minY&&(minY=y);z<minZ&&(minZ=z);x>maxX&&(maxX=x);y>maxY&&(maxY=y);z>maxZ&&(maxZ=z)}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this},setFromPoints:function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this},setFromCenterAndSize:function(){var v1=new Vector3;return function(center,size){size=v1.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);
return this}}(),setFromObject:function(object){this.makeEmpty();return this.expandByObject(object)},clone:function(){return(new this.constructor).copy(this)},copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(target){void 0===target&&(console.warn("THREE.Box3: .getCenter() target is now required"),
target=new Vector3);return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(target){void 0===target&&(console.warn("THREE.Box3: .getSize() target is now required"),target=new Vector3);return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);
this.max.addScalar(scalar);return this},expandByObject:function(){function traverse(node){var geometry=node.geometry;if(void 0!==geometry)if(geometry.isGeometry)for(geometry=geometry.vertices,i=0,l=geometry.length;i<l;i++)v1.copy(geometry[i]),v1.applyMatrix4(node.matrixWorld),scope.expandByPoint(v1);else if(geometry.isBufferGeometry&&(geometry=geometry.attributes.position,void 0!==geometry))for(i=0,l=geometry.count;i<l;i++)v1.fromBufferAttribute(geometry,i).applyMatrix4(node.matrixWorld),scope.expandByPoint(v1)}
var scope,i,l,v1=new Vector3;return function(object){scope=this;object.updateMatrixWorld(!0);object.traverse(traverse);return this}}(),containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z},getParameter:function(point,target){void 0===
target&&(console.warn("THREE.Box3: .getParameter() target is now required"),target=new Vector3);return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(box){return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?!1:!0},intersectsSphere:function(){var closestPoint=new Vector3;return function(sphere){this.clampPoint(sphere.center,
closestPoint);return closestPoint.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius}}(),intersectsPlane:function(plane){if(0<plane.normal.x){var min=plane.normal.x*this.min.x;var max=plane.normal.x*this.max.x}else min=plane.normal.x*this.max.x,max=plane.normal.x*this.min.x;0<plane.normal.y?(min+=plane.normal.y*this.min.y,max+=plane.normal.y*this.max.y):(min+=plane.normal.y*this.max.y,max+=plane.normal.y*this.min.y);0<plane.normal.z?(min+=plane.normal.z*this.min.z,max+=plane.normal.z*this.max.z):
(min+=plane.normal.z*this.max.z,max+=plane.normal.z*this.min.z);return min<=-plane.constant&&max>=-plane.constant},intersectsTriangle:function(){function satForAxes(axes){var j;var i=0;for(j=axes.length-3;i<=j;i+=3){testAxis.fromArray(axes,i);var r=extents.x*Math.abs(testAxis.x)+extents.y*Math.abs(testAxis.y)+extents.z*Math.abs(testAxis.z),p0=v0.dot(testAxis),p1=v1.dot(testAxis),p2=v2.dot(testAxis);if(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r)return!1}return!0}var v0=new Vector3,v1=new Vector3,
v2=new Vector3,f0=new Vector3,f1=new Vector3,f2=new Vector3,testAxis=new Vector3,center=new Vector3,extents=new Vector3,triangleNormal=new Vector3;return function(triangle){if(this.isEmpty())return!1;this.getCenter(center);extents.subVectors(this.max,center);v0.subVectors(triangle.a,center);v1.subVectors(triangle.b,center);v2.subVectors(triangle.c,center);f0.subVectors(v1,v0);f1.subVectors(v2,v1);f2.subVectors(v0,v2);triangle=[0,-f0.z,f0.y,0,-f1.z,f1.y,0,-f2.z,f2.y,f0.z,0,-f0.x,f1.z,0,-f1.x,f2.z,
0,-f2.x,-f0.y,f0.x,0,-f1.y,f1.x,0,-f2.y,f2.x,0];if(!satForAxes(triangle))return!1;triangle=[1,0,0,0,1,0,0,0,1];if(!satForAxes(triangle))return!1;triangleNormal.crossVectors(f0,f1);triangle=[triangleNormal.x,triangleNormal.y,triangleNormal.z];return satForAxes(triangle)}}(),clampPoint:function(point,target){void 0===target&&(console.warn("THREE.Box3: .clampPoint() target is now required"),target=new Vector3);return target.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new Vector3;
return function(point){return v1.copy(point).clamp(this.min,this.max).sub(point).length()}}(),getBoundingSphere:function(){var v1=new Vector3;return function(target){void 0===target&&(console.warn("THREE.Box3: .getBoundingSphere() target is now required"),target=new Sphere);this.getCenter(target.center);target.radius=.5*this.getSize(v1).length();return target}}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);this.isEmpty()&&this.makeEmpty();return this},union:function(box){this.min.min(box.min);
this.max.max(box.max);return this},applyMatrix4:function(){var points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3];return function(matrix){if(this.isEmpty())return this;points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);points[4].set(this.max.x,
this.min.y,this.min.z).applyMatrix4(matrix);points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);this.setFromPoints(points);return this}}(),translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)}});Object.assign(Sphere.prototype,{set:function(center,
radius){this.center.copy(center);this.radius=radius;return this},setFromPoints:function(){var box=new Box3;return function(points,optionalCenter){var center=this.center;void 0!==optionalCenter?center.copy(optionalCenter):box.setFromPoints(points).getCenter(center);for(var i=optionalCenter=0,il=points.length;i<il;i++)optionalCenter=Math.max(optionalCenter,center.distanceToSquared(points[i]));this.radius=Math.sqrt(optionalCenter);return this}}(),clone:function(){return(new this.constructor).copy(this)},
copy:function(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(point){return point.distanceTo(this.center)-this.radius},intersectsSphere:function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum},intersectsBox:function(box){return box.intersectsSphere(this)},
intersectsPlane:function(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius},clampPoint:function(point,target){var deltaLengthSq=this.center.distanceToSquared(point);void 0===target&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),target=new Vector3);target.copy(point);deltaLengthSq>this.radius*this.radius&&(target.sub(this.center).normalize(),target.multiplyScalar(this.radius).add(this.center));return target},getBoundingBox:function(target){void 0===target&&
(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),target=new Box3);target.set(this.center,this.center);target.expandByScalar(this.radius);return target},applyMatrix4:function(matrix){this.center.applyMatrix4(matrix);this.radius*=matrix.getMaxScaleOnAxis();return this},translate:function(offset){this.center.add(offset);return this},equals:function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius}});Object.assign(Plane.prototype,{set:function(normal,
constant){this.normal.copy(normal);this.constant=constant;return this},setComponents:function(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this},setFromNormalAndCoplanarPoint:function(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this},setFromCoplanarPoints:function(){var v1=new Vector3,v2=new Vector3;return function(a,b,c){b=v1.subVectors(c,b).cross(v2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this}}(),clone:function(){return(new this.constructor).copy(this)},
copy:function(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this},normalize:function(){var inverseNormalLength=1/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(point){return this.normal.dot(point)+this.constant},distanceToSphere:function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius},projectPoint:function(point,
target){void 0===target&&(console.warn("THREE.Plane: .projectPoint() target is now required"),target=new Vector3);return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point)},intersectLine:function(){var v1=new Vector3;return function(line,target){void 0===target&&(console.warn("THREE.Plane: .intersectLine() target is now required"),target=new Vector3);var direction=line.delta(v1),denominator=this.normal.dot(direction);if(0===denominator){if(0===this.distanceToPoint(line.start))return target.copy(line.start)}else if(denominator=
-(line.start.dot(this.normal)+this.constant)/denominator,!(0>denominator||1<denominator))return target.copy(direction).multiplyScalar(denominator).add(line.start)}}(),intersectsLine:function(line){var startSign=this.distanceToPoint(line.start);line=this.distanceToPoint(line.end);return 0>startSign&&0<line||0>line&&0<startSign},intersectsBox:function(box){return box.intersectsPlane(this)},intersectsSphere:function(sphere){return sphere.intersectsPlane(this)},coplanarPoint:function(target){void 0===
target&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),target=new Vector3);return target.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var v1=new Vector3,m1=new Matrix3;return function(matrix,optionalNormalMatrix){optionalNormalMatrix=optionalNormalMatrix||m1.getNormalMatrix(matrix);matrix=this.coplanarPoint(v1).applyMatrix4(matrix);optionalNormalMatrix=this.normal.applyMatrix3(optionalNormalMatrix).normalize();this.constant=-matrix.dot(optionalNormalMatrix);
return this}}(),translate:function(offset){this.constant-=offset.dot(this.normal);return this},equals:function(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant}});Object.assign(Frustum.prototype,{set:function(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(frustum){for(var planes=
this.planes,i=0;6>i;i++)planes[i].copy(frustum.planes[i]);return this},setFromMatrix:function(m){var planes=this.planes,me=m.elements;m=me[0];var me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14];me=me[15];planes[0].setComponents(me3-m,me7-me4,me11-me8,me-me12).normalize();planes[1].setComponents(me3+m,me7+me4,me11+me8,me+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me+me13).normalize();
planes[3].setComponents(me3-me1,me7-me5,me11-me9,me-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me+me14).normalize();return this},intersectsObject:function(){var sphere=new Sphere;return function(object){var geometry=object.geometry;null===geometry.boundingSphere&&geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(sphere)}}(),
intersectsSprite:function(){var sphere=new Sphere;return function(sprite){sphere.center.set(0,0,0);sphere.radius=.7071067811865476;sphere.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(sphere)}}(),intersectsSphere:function(sphere){var planes=this.planes,center=sphere.center;sphere=-sphere.radius;for(var i=0;6>i;i++)if(planes[i].distanceToPoint(center)<sphere)return!1;return!0},intersectsBox:function(){var p=new Vector3;return function(box){for(var planes=this.planes,i=0;6>i;i++){var plane=
planes[i];p.x=0<plane.normal.x?box.max.x:box.min.x;p.y=0<plane.normal.y?box.max.y:box.min.y;p.z=0<plane.normal.z?box.max.z:box.min.z;if(0>plane.distanceToPoint(p))return!1}return!0}}(),containsPoint:function(point){for(var planes=this.planes,i=0;6>i;i++)if(0>planes[i].distanceToPoint(point))return!1;return!0}});var ShaderChunk={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *\x3d texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a \x3c ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion \x3d ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *\x3d ambientOcclusion;\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( PHYSICAL )\n\t\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *\x3d computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed \x3d vec3( position );",beginnormal_vertex:"vec3 objectNormal \x3d vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent \x3d vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 \x3d vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 \x3d vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r \x3d roughness * c0 + c1;\n\tfloat a004 \x3d min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff \x3d 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance \x3e 0.0 ) {\n\t\tdistanceFalloff *\x3d pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance \x3e 0.0 \x26\x26 decayExponent \x3e 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel \x3d exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat gl \x3d dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv \x3d dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat gv \x3d dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl \x3d dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat denom \x3d pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha \x3d pow2( roughness );\n\tvec3 halfDir \x3d normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL \x3d saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH \x3d saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH \x3d saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, dotLH );\n\tfloat G \x3d G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D \x3d D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  \x3d 64.0;\n\tconst float LUT_SCALE \x3d ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  \x3d 0.5 / LUT_SIZE;\n\tfloat dotNV \x3d saturate( dot( N, V ) );\n\tvec2 uv \x3d vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv \x3d uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l \x3d length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x \x3d dot( v1, v2 );\n\tfloat y \x3d abs( x );\n\tfloat a \x3d 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b \x3d 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v \x3d a / b;\n\tfloat theta_sintheta \x3d ( x \x3e 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 \x3d rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 \x3d rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal \x3d cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) \x3c 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 \x3d normalize( V - N * dot( V, N ) );\n\tT2 \x3d - cross( N, T1 );\n\tmat3 mat \x3d mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] \x3d mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] \x3d mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] \x3d mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] \x3d mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] \x3d normalize( coords[ 0 ] );\n\tcoords[ 1 ] \x3d normalize( coords[ 1 ] );\n\tcoords[ 2 ] \x3d normalize( coords[ 2 ] );\n\tcoords[ 3 ] \x3d normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor \x3d vec3( 0.0 );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result \x3d LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec2 brdf \x3d integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, dotNV );\n\tvec2 brdf \x3d integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss \x3d F * brdf.x + brdf.y;\n\tfloat Ess \x3d brdf.x + brdf.y;\n\tfloat Ems \x3d 1.0 - Ess;\n\tvec3 Favg \x3d specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms \x3d FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter +\x3d FssEss;\n\tmultiScatter +\x3d Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir \x3d normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH \x3d saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH \x3d saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, dotLH );\n\tfloat G \x3d G_BlinnPhong_Implicit( );\n\tfloat D \x3d D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",
bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx \x3d dFdx( vUv );\n\t\tvec2 dSTdy \x3d dFdy( vUv );\n\t\tfloat Hll \x3d bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx \x3d bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy \x3d bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX \x3d vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY \x3d vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN \x3d surf_norm;\n\t\tvec3 R1 \x3d cross( vSigmaY, vN );\n\t\tvec3 R2 \x3d cross( vN, vSigmaX );\n\t\tfloat fDet \x3d dot( vSigmaX, R1 );\n\t\tfDet *\x3d ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad \x3d sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
clipping_planes_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane \x3d clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) \x3e plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES \x3c NUM_CLIPPING_PLANES\n\t\tbool clipped \x3d true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i \x3d UNION_CLIPPING_PLANES; i \x3c NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\tclipped \x3d ( dot( vViewPosition, plane.xyz ) \x3e plane.w ) \x26\x26 clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\t#if ! defined( PHYSICAL ) \x26\x26 ! defined( PHONG ) \x26\x26 ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES \x3e 0 \x26\x26 ! defined( PHYSICAL ) \x26\x26 ! defined( PHONG ) \x26\x26 ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES \x3e 0 \x26\x26 ! defined( PHYSICAL ) \x26\x26 ! defined( PHONG ) \x26\x26 ! defined( MATCAP )\n\tvViewPosition \x3d - mvPosition.xyz;\n#endif",
color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *\x3d vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz \x3d color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 \x3d x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a \x3d 12.9898, b \x3d 78.233, c \x3d 43758.5453;\n\thighp float dt \x3d dot( uv.xy, vec2( a,b ) ), sn \x3d mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance \x3d dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] \x3d vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] \x3d vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] \x3d vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights \x3d vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}",
cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection \x3d abs(direction);\n\tint face \x3d -1;\n\tif( absDirection.x \x3e absDirection.z ) {\n\t\tif(absDirection.x \x3e absDirection.y )\n\t\t\tface \x3d direction.x \x3e 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface \x3d direction.y \x3e 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z \x3e absDirection.y )\n\t\t\tface \x3d direction.z \x3e 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface \x3d direction.y \x3e 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale \x3d exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness \x3d dFdx(roughness);\n\tfloat dyRoughness \x3d dFdy(roughness);\n\tvec3 dx \x3d dFdx( vec * scale * dxRoughness );\n\tvec3 dy \x3d dFdy( vec * scale * dyRoughness );\n\tfloat d \x3d max( dot( dx, dx ), dot( dy, dy ) );\n\td \x3d clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel \x3d 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel \x3d roughnessLevel \x3e cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a \x3d 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed \x3d exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed \x3d vec2( 1.0 ) / exp2_packed;\n\tfloat powScale \x3d exp2_packed.x * exp2_packed.y;\n\tfloat scale \x3d rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset \x3d 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes \x3d mipLevel \x3d\x3d 0.0;\n\tscale \x3d  bRes \x26\x26 (scale \x3c a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face \x3d getFaceFromDirection(direction);\n\tfloat rcpPowScale \x3d 1.0 / powScale;\n\tif( face \x3d\x3d 0) {\n\t\tr \x3d vec3(direction.x, -direction.z, direction.y);\n\t\toffset \x3d vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? a : offset.y;\n\t}\n\telse if( face \x3d\x3d 1) {\n\t\tr \x3d vec3(direction.y, direction.x, direction.z);\n\t\toffset \x3d vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? a : offset.y;\n\t}\n\telse if( face \x3d\x3d 2) {\n\t\tr \x3d vec3(direction.z, direction.x, direction.y);\n\t\toffset \x3d vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? a : offset.y;\n\t}\n\telse if( face \x3d\x3d 3) {\n\t\tr \x3d vec3(direction.x, direction.z, direction.y);\n\t\toffset \x3d vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face \x3d\x3d 4) {\n\t\tr \x3d vec3(direction.y, direction.x, -direction.z);\n\t\toffset \x3d vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr \x3d vec3(direction.z, -direction.x, direction.y);\n\t\toffset \x3d vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y \x3d bRes \x26\x26 (offset.y \x3c 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr \x3d normalize(r);\n\tfloat texelOffset \x3d 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s \x3d ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base \x3d offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal \x3d roughness* cubeUV_maxLods3;\n\tfloat r1 \x3d floor(roughnessVal);\n\tfloat r2 \x3d r1 + 1.0;\n\tfloat t \x3d fract(roughnessVal);\n\tvec2 mipInfo \x3d MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s \x3d mipInfo.y;\n\tfloat level0 \x3d mipInfo.x;\n\tfloat level1 \x3d level0 + 1.0;\n\tlevel1 \x3d level1 \x3e 5.0 ? 5.0 : level1;\n\tlevel0 +\x3d min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 \x3d getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 \x3d envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 \x3d getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 \x3d envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result \x3d mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",
defaultnormal_vertex:"vec3 transformedNormal \x3d normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal \x3d - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent \x3d normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent \x3d - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed +\x3d normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif",
emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor \x3d texture2D( emissiveMap, vUv );\n\temissiveColor.rgb \x3d emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *\x3d emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor \x3d linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent \x3d max( max( value.r, value.g ), value.b );\n\tfloat fExp \x3d clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB \x3d max( value.r, max( value.g, value.b ) );\n\tfloat M \x3d clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM \x3d ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB \x3d max( value.r, max( value.g, value.b ) );\n\tfloat D \x3d max( maxRange / maxRGB, 1.0 );\n\tD \x3d min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM \x3d mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp \x3d cLogLuvM * value.rgb;\n\tXp_Y_XYZp \x3d max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy \x3d Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le \x3d 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w \x3d fract( Le );\n\tvResult.z \x3d ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM \x3d mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le \x3d value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y \x3d exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z \x3d Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x \x3d value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB \x3d cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex \x3d normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal \x3d inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec \x3d reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec \x3d refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec \x3d vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor \x3d textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec \x3d normalize( reflectVec );\n\t\tsampleUV.y \x3d asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x \x3d atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor \x3d texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec \x3d normalize( reflectVec );\n\t\tvec3 reflectView \x3d normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor \x3d texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor \x3d vec4( 0.0 );\n\t#endif\n\tenvColor \x3d envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight \x3d mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight \x3d mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight +\x3d envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) \x26\x26 ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP ) \x26\x26 defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal \x3d inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec \x3d vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec \x3d vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor \x3d vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar \x3d float( maxMIPLevel );\n\t\tfloat desiredMIPLevel \x3d maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec \x3d reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec \x3d refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec \x3d inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel \x3d getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec \x3d vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec \x3d vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y \x3d asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x \x3d atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView \x3d normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition \x3d worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex \x3d normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal \x3d inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect \x3d reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect \x3d refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
fog_vertex:"#ifdef USE_FOG\n\tfogDepth \x3d -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor \x3d whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor \x3d smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb \x3d mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL \x3d dot( normal, lightDirection );\n\t\tvec2 coord \x3d vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x \x3c 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse +\x3d PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse \x3d vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position \x3d mvPosition.xyz;\ngeometry.normal \x3d normalize( transformedNormal );\ngeometry.viewDir \x3d normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position \x3d geometry.position;\nbackGeometry.normal \x3d -geometry.normal;\nbackGeometry.viewDir \x3d geometry.viewDir;\nvLightFront \x3d vec3( 0.0 );\nvIndirectFront \x3d vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack \x3d vec3( 0.0 );\n\tvIndirectBack \x3d vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",
lights_pars_begin:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance \x3d ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS \x3e 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color \x3d directionalLight.color;\n\t\tdirectLight.direction \x3d directionalLight.direction;\n\t\tdirectLight.visible \x3d true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS \x3e 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector \x3d pointLight.position - geometry.position;\n\t\tdirectLight.direction \x3d normalize( lVector );\n\t\tfloat lightDistance \x3d length( lVector );\n\t\tdirectLight.color \x3d pointLight.color;\n\t\tdirectLight.color *\x3d punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible \x3d ( directLight.color !\x3d vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS \x3e 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector \x3d spotLight.position - geometry.position;\n\t\tdirectLight.direction \x3d normalize( lVector );\n\t\tfloat lightDistance \x3d length( lVector );\n\t\tfloat angleCos \x3d dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos \x3e spotLight.coneCos ) {\n\t\t\tfloat spotEffect \x3d smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color \x3d spotLight.color;\n\t\t\tdirectLight.color *\x3d spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible \x3d true;\n\t\t} else {\n\t\t\tdirectLight.color \x3d vec3( 0.0 );\n\t\t\tdirectLight.visible \x3d false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS \x3e 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL \x3d dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight \x3d 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance \x3d mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *\x3d PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;\nmaterial.specularColor \x3d specular;\nmaterial.specularShininess \x3d shininess;\nmaterial.specularStrength \x3d specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance \x3d getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL \x3d saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance \x3d dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular +\x3d irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness \x3d clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor \x3d mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor \x3d mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat \x3d saturate( clearCoat );\tmaterial.clearCoatRoughness \x3d clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif",
lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal \x3d geometry.normal;\n\t\tvec3 viewDir \x3d geometry.viewDir;\n\t\tvec3 position \x3d geometry.position;\n\t\tvec3 lightPos \x3d rectAreaLight.position;\n\t\tvec3 halfWidth \x3d rectAreaLight.halfWidth;\n\t\tvec3 halfHeight \x3d rectAreaLight.halfHeight;\n\t\tvec3 lightColor \x3d rectAreaLight.color;\n\t\tfloat roughness \x3d material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] \x3d lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] \x3d lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] \x3d lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] \x3d lightPos + halfWidth + halfHeight;\n\t\tvec2 uv \x3d LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 \x3d texture2D( ltc_1, uv );\n\t\tvec4 t2 \x3d texture2D( ltc_2, uv );\n\t\tmat3 mInv \x3d mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel \x3d ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular +\x3d lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse +\x3d lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR \x3d material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR \x3d 0.0;\n\t#endif\n\treflectedLight.directSpecular +\x3d ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse +\x3d ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular +\x3d irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#endif\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifndef STANDARD\n\t\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL \x3d dotNV;\n\t\tfloat clearCoatDHR \x3d material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR \x3d 0.0;\n\t#endif\n\tfloat clearCoatInv \x3d 1.0 - clearCoatDHR;\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 singleScattering \x3d vec3( 0.0 );\n\t\tvec3 multiScattering \x3d vec3( 0.0 );\n\t\tvec3 cosineWeightedIrradiance \x3d irradiance * RECIPROCAL_PI;\n\t\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\t\tvec3 diffuse \x3d material.diffuseColor;\n\t\treflectedLight.indirectSpecular +\x3d clearCoatInv * radiance * singleScattering;\n\t\treflectedLight.indirectDiffuse +\x3d multiScattering * cosineWeightedIrradiance;\n\t\treflectedLight.indirectDiffuse +\x3d diffuse * cosineWeightedIrradiance;\n\t#else\n\t\treflectedLight.indirectSpecular +\x3d clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#endif\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular +\x3d clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position \x3d - vViewPosition;\ngeometry.normal \x3d normal;\ngeometry.viewDir \x3d normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight \x3d pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *\x3d all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight \x3d spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *\x3d all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *\x3d all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight \x3d rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance \x3d getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS \x3e 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i \x3d 0; i \x3c NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance \x3d vec3( 0.0 );\n\tvec3 clearCoatRadiance \x3d vec3( 0.0 );\n#endif",
lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance \x3d texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *\x3d PI;\n\t\t#endif\n\t\tirradiance +\x3d lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( PHYSICAL ) \x26\x26 defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance +\x3d getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) \x26\x26 defined( RE_IndirectSpecular )\n\tradiance +\x3d getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance +\x3d getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif",
lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) \x26\x26 defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT \x3d log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) \x26\x26 defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif",
logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth \x3d 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z \x3d log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *\x3d gl_Position.w;\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor \x3d texture2D( map, vUv );\n\ttexelColor \x3d mapTexelToLinear( texelColor );\n\tdiffuseColor *\x3d texelColor;\n#endif",
map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv \x3d ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel \x3d texture2D( map, uv );\n\tdiffuseColor *\x3d mapTexelToLinear( mapTexel );\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif",metalnessmap_fragment:"float metalnessFactor \x3d metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness \x3d texture2D( metalnessMap, vUv );\n\tmetalnessFactor *\x3d texelMetalness.b;\n#endif",
metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal +\x3d ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal +\x3d ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal +\x3d ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal +\x3d ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed +\x3d ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed +\x3d ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed +\x3d ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed +\x3d ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed +\x3d ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed +\x3d ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed +\x3d ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed +\x3d ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx \x3d vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy \x3d vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal \x3d normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal \x3d normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal \x3d normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent \x3d normalize( vTangent );\n\t\tvec3 bitangent \x3d normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent \x3d tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent \x3d bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif",
normal_fragment_maps:"#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal \x3d texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal \x3d - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal \x3d normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal \x3d normalize( normalMatrix * normal );\n\t#else\n\t\t#ifdef USE_TANGENT\n\t\t\tmat3 vTBN \x3d mat3( tangent, bitangent, normal );\n\t\t\tvec3 mapN \x3d texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy \x3d normalScale * mapN.xy;\n\t\t\tnormal \x3d normalize( vTBN * mapN );\n\t\t#else\n\t\t\tnormal \x3d perturbNormal2Arb( -vViewPosition, normal );\n\t\t#endif\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal \x3d perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 \x3d vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 \x3d vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 \x3d dFdx( vUv.st );\n\t\t\tvec2 st1 \x3d dFdy( vUv.st );\n\t\t\tfloat scale \x3d sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S \x3d normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T \x3d normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N \x3d normalize( surf_norm );\n\t\t\tmat3 tsn \x3d mat3( S, T, N );\n\t\t\tvec3 mapN \x3d texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *\x3d normalScale;\n\t\t\tmapN.xy *\x3d ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif",
packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale \x3d 256. / 255.;const float UnpackDownscale \x3d 255. / 256.;\nconst vec3 PackFactors \x3d vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors \x3d UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 \x3d 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r \x3d vec4( fract( v * PackFactors ), v );\n\tr.yzw -\x3d r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *\x3d gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition \x3d modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position \x3d projectionMatrix * mvPosition;",dithering_fragment:"#if defined( DITHERING )\n\tgl_FragColor.rgb \x3d dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position \x3d rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB \x3d vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB \x3d mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
roughnessmap_fragment:"float roughnessFactor \x3d roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness \x3d texture2D( roughnessMap, vUv );\n\troughnessFactor *\x3d texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS \x3e 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS \x3e 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS \x3e 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset \x3d vec2( 0.0, 1.0 );\n\t\tvec2 texelSize \x3d vec2( 1.0 ) / size;\n\t\tvec2 centroidUV \x3d floor( uv * size + 0.5 ) / size;\n\t\tfloat lb \x3d texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt \x3d texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb \x3d texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt \x3d texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f \x3d fract( uv * size + 0.5 );\n\t\tfloat a \x3d mix( lb, lt, f.y );\n\t\tfloat b \x3d mix( rb, rt, f.y );\n\t\tfloat c \x3d mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow \x3d 1.0;\n\t\tshadowCoord.xyz /\x3d shadowCoord.w;\n\t\tshadowCoord.z +\x3d shadowBias;\n\t\tbvec4 inFrustumVec \x3d bvec4 ( shadowCoord.x \x3e\x3d 0.0, shadowCoord.x \x3c\x3d 1.0, shadowCoord.y \x3e\x3d 0.0, shadowCoord.y \x3c\x3d 1.0 );\n\t\tbool inFrustum \x3d all( inFrustumVec );\n\t\tbvec2 frustumTestVec \x3d bvec2( inFrustum, shadowCoord.z \x3c\x3d 1.0 );\n\t\tbool frustumTest \x3d all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 \x3d - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 \x3d - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 \x3d + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 \x3d + texelSize.y * shadowRadius;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 \x3d - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 \x3d - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 \x3d + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 \x3d + texelSize.y * shadowRadius;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow \x3d texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV \x3d abs( v );\n\t\tfloat scaleToCube \x3d 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *\x3d scaleToCube;\n\t\tv *\x3d scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar \x3d v.xy;\n\t\tfloat almostATexel \x3d 1.5 * texelSizeY;\n\t\tfloat almostOne \x3d 1.0 - almostATexel;\n\t\tif ( absV.z \x3e\x3d almostOne ) {\n\t\t\tif ( v.z \x3e 0.0 )\n\t\t\t\tplanar.x \x3d 4.0 - v.x;\n\t\t} else if ( absV.x \x3e\x3d almostOne ) {\n\t\t\tfloat signX \x3d sign( v.x );\n\t\t\tplanar.x \x3d v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y \x3e\x3d almostOne ) {\n\t\t\tfloat signY \x3d sign( v.y );\n\t\t\tplanar.x \x3d v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y \x3d v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize \x3d vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition \x3d shadowCoord.xyz;\n\t\tfloat dp \x3d ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp +\x3d shadowBias;\n\t\tvec3 bd3D \x3d normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset \x3d vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS \x3e 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS \x3e 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS \x3e 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif",
shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] \x3d directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] \x3d spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS \x3e 0\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] \x3d pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",
shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow \x3d 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS \x3e 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLights[ i ];\n\t\tshadow *\x3d bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS \x3e 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight \x3d spotLights[ i ];\n\t\tshadow *\x3d bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS \x3e 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight \x3d pointLights[ i ];\n\t\tshadow *\x3d bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",
skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX \x3d getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY \x3d getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ \x3d getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW \x3d getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j \x3d i * 4.0;\n\t\t\tfloat x \x3d mod( j, float( boneTextureSize ) );\n\t\t\tfloat y \x3d floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx \x3d 1.0 / float( boneTextureSize );\n\t\t\tfloat dy \x3d 1.0 / float( boneTextureSize );\n\t\t\ty \x3d dy * ( y + 0.5 );\n\t\t\tvec4 v1 \x3d texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 \x3d texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 \x3d texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 \x3d texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone \x3d mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone \x3d boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex \x3d bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned \x3d vec4( 0.0 );\n\tskinned +\x3d boneMatX * skinVertex * skinWeight.x;\n\tskinned +\x3d boneMatY * skinVertex * skinWeight.y;\n\tskinned +\x3d boneMatZ * skinVertex * skinWeight.z;\n\tskinned +\x3d boneMatW * skinVertex * skinWeight.w;\n\ttransformed \x3d ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix \x3d mat4( 0.0 );\n\tskinMatrix +\x3d skinWeight.x * boneMatX;\n\tskinMatrix +\x3d skinWeight.y * boneMatY;\n\tskinMatrix +\x3d skinWeight.z * boneMatZ;\n\tskinMatrix +\x3d skinWeight.w * boneMatW;\n\tskinMatrix  \x3d bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal \x3d vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent \x3d vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular \x3d texture2D( specularMap, vUv );\n\tspecularStrength \x3d texelSpecular.r;\n#else\n\tspecularStrength \x3d 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb \x3d toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\tcolor \x3d max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif",
uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 \x3d uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition \x3d modelMatrix * vec4( transformed, 1.0 );\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor \x3d texture2D( t2D, vUv );\n\tgl_FragColor \x3d mapTexelToLinear( texColor );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",
background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position \x3d vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor \x3d textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor \x3d mapTexelToLinear( texColor );\n\tgl_FragColor.a *\x3d opacity;\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",
cube_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_Position.z \x3d gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING \x3d\x3d 3200\n\tuniform float opacity;\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tdiffuseColor.a \x3d opacity;\n\t#endif\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tgl_FragColor \x3d vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING \x3d\x3d 3201\n\t\tgl_FragColor \x3d packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",
depth_vert:"#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n}",
distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main () {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\tfloat dist \x3d length( vWorldPosition - referencePosition );\n\tdist \x3d ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist \x3d saturate( dist );\n\tgl_FragColor \x3d packDepthToRGBA( dist );\n}",
distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvWorldPosition \x3d worldPosition.xyz;\n}",
equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvec3 direction \x3d normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y \x3d asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x \x3d atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor \x3d texture2D( tEquirect, sampleUV );\n\tgl_FragColor \x3d mapTexelToLinear( texColor );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",
equirect_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tif ( mod( vLineDistance, totalSize ) \x3e dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3ccolor_vertex\x3e\n\tvLineDistance \x3d scale * lineDistance;\n\tvec4 mvPosition \x3d modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position \x3d projectionMatrix * mvPosition;\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse +\x3d texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse +\x3d vec3( 1.0 );\n\t#endif\n\t#include \x3caomap_fragment\x3e\n\treflectedLight.indirectDiffuse *\x3d diffuseColor.rgb;\n\tvec3 outgoingLight \x3d reflectedLight.indirectDiffuse;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
meshbasic_vert:"#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_ENVMAP\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cshadowmask_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\treflectedLight.indirectDiffuse \x3d getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse +\x3d ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse +\x3d vIndirectFront;\n\t#endif\n\t#include \x3clightmap_fragment\x3e\n\treflectedLight.indirectDiffuse *\x3d BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse \x3d ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse \x3d vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *\x3d BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3clights_lambert_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tvec3 viewDir \x3d normalize( vViewPosition );\n\tvec3 x \x3d normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y \x3d cross( viewDir, x );\n\tvec2 uv \x3d vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor \x3d texture2D( matcap, uv );\n\t\tmatcapColor \x3d matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor \x3d vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight \x3d diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#ifndef FLAT_SHADED\n\t\tvNormal \x3d normalize( transformedNormal );\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n}",
meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cgradientmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_phong_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_phong_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cenvmap_physical_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_physical_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3croughnessmap_pars_fragment\x3e\n#include \x3cmetalnessmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3croughnessmap_fragment\x3e\n\t#include \x3cmetalnessmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_physical_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent \x3d normalize( transformedTangent );\n\t\tvBitangent \x3d normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) \x26\x26 ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\nvoid main() {\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tgl_FragColor \x3d vec4( packNormalToRGB( normal ), opacity );\n}",
normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) \x26\x26 ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent \x3d normalize( transformedTangent );\n\t\tvBitangent \x3d normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) \x26\x26 ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition \x3d - mvPosition.xyz;\n#endif\n}",
points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cmap_particle_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_particle_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
points_vert:"uniform float size;\nuniform float scale;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_PointSize \x3d size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d ( projectionMatrix[ 2 ][ 3 ] \x3d\x3d - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *\x3d ( scale / - mvPosition.z );\n\t#endif\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cshadowmask_pars_fragment\x3e\nvoid main() {\n\tgl_FragColor \x3d vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include \x3cfog_fragment\x3e\n}",shadow_vert:"#include \x3cfog_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\nvoid main() {\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\tvec4 mvPosition \x3d modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x \x3d length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y \x3d length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d ( projectionMatrix[ 2 ][ 3 ] \x3d\x3d - 1.0 );\n\t\tif ( isPerspective ) scale *\x3d - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition \x3d ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x \x3d cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y \x3d sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy +\x3d rotatedPosition;\n\tgl_Position \x3d projectionMatrix * mvPosition;\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}"},
UniformsUtils={clone:cloneUniforms,merge:mergeUniforms},ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,
darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,
gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,
lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,
orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,
steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(value){value&&value.isColor?this.copy(value):"number"===typeof value?this.setHex(value):"string"===typeof value&&this.setStyle(value);return this},setScalar:function(scalar){this.b=this.g=this.r=scalar;return this},setHex:function(hex){hex=
Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this},setRGB:function(r,g,b){this.r=r;this.g=g;this.b=b;return this},setHSL:function(){function hue2rgb(p,q,t){0>t&&(t+=1);1<t&&--t;return t<1/6?p+6*(q-p)*t:.5>t?q:t<2/3?p+6*(q-p)*(2/3-t):p}return function(h,s,l){h=_Math.euclideanModulo(h,1);s=_Math.clamp(s,0,1);l=_Math.clamp(l,0,1);0===s?this.r=this.g=this.b=l:(s=.5>=l?l*(1+s):l+s-l*s,l=2*l-s,this.r=hue2rgb(l,s,h+1/3),this.g=hue2rgb(l,s,h),this.b=hue2rgb(l,
s,h-1/3));return this}}(),setStyle:function(style){function handleAlpha(string){void 0!==string&&1>parseFloat(string)&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}var m;if(m=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(style)){var components=m[2];switch(m[1]){case "rgb":case "rgba":if(m=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components))return this.r=Math.min(255,parseInt(m[1],10))/255,this.g=Math.min(255,parseInt(m[2],10))/255,this.b=Math.min(255,
parseInt(m[3],10))/255,handleAlpha(m[5]),this;if(m=/^(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components))return this.r=Math.min(100,parseInt(m[1],10))/100,this.g=Math.min(100,parseInt(m[2],10))/100,this.b=Math.min(100,parseInt(m[3],10))/100,handleAlpha(m[5]),this;break;case "hsl":case "hsla":if(m=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components)){components=parseFloat(m[1])/360;var s=parseInt(m[2],10)/100,l=parseInt(m[3],10)/
100;handleAlpha(m[5]);return this.setHSL(components,s,l)}}}else if(m=/^#([A-Fa-f0-9]+)$/.exec(style)){m=m[1];components=m.length;if(3===components)return this.r=parseInt(m.charAt(0)+m.charAt(0),16)/255,this.g=parseInt(m.charAt(1)+m.charAt(1),16)/255,this.b=parseInt(m.charAt(2)+m.charAt(2),16)/255,this;if(6===components)return this.r=parseInt(m.charAt(0)+m.charAt(1),16)/255,this.g=parseInt(m.charAt(2)+m.charAt(3),16)/255,this.b=parseInt(m.charAt(4)+m.charAt(5),16)/255,this}style&&0<style.length&&(m=
ColorKeywords[style],void 0!==m?this.setHex(m):console.warn("THREE.Color: Unknown color "+style));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(color){this.r=color.r;this.g=color.g;this.b=color.b;return this},copyGammaToLinear:function(color,gammaFactor){void 0===gammaFactor&&(gammaFactor=2);this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this},copyLinearToGamma:function(color,gammaFactor){void 0===
gammaFactor&&(gammaFactor=2);gammaFactor=0<gammaFactor?1/gammaFactor:1;this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this},convertGammaToLinear:function(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this},convertLinearToGamma:function(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this},copySRGBToLinear:function(){function SRGBToLinear(c){return.04045>c?.0773993808*c:Math.pow(.9478672986*c+.0521327014,
2.4)}return function(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this}}(),copyLinearToSRGB:function(){function LinearToSRGB(c){return.0031308>c?12.92*c:1.055*Math.pow(c,.41666)-.055}return function(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this}}(),convertSRGBToLinear:function(){this.copySRGBToLinear(this);return this},convertLinearToSRGB:function(){this.copyLinearToSRGB(this);return this},
getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(target){void 0===target&&(console.warn("THREE.Color: .getHSL() target is now required"),target={h:0,s:0,l:0});var r=this.r,g=this.g,b=this.b,max=Math.max(r,g,b),min=Math.min(r,g,b),hue,lightness=(min+max)/2;if(min===max)min=hue=0;else{var delta=max-min;min=.5>=lightness?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+
(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4}hue/=6}target.h=hue;target.s=min;target.l=lightness;return target},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(){var hsl={};return function(h,s,l){this.getHSL(hsl);hsl.h+=h;hsl.s+=s;hsl.l+=l;this.setHSL(hsl.h,hsl.s,hsl.l);return this}}(),add:function(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this},addColors:function(color1,color2){this.r=color1.r+
color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this},addScalar:function(s){this.r+=s;this.g+=s;this.b+=s;return this},sub:function(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this},multiply:function(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this},multiplyScalar:function(s){this.r*=s;this.g*=s;this.b*=s;return this},lerp:function(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-
this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this},lerpHSL:function(){var hslA={h:0,s:0,l:0},hslB={h:0,s:0,l:0};return function(color,alpha){this.getHSL(hslA);color.getHSL(hslB);color=_Math.lerp(hslA.h,hslB.h,alpha);var s=_Math.lerp(hslA.s,hslB.s,alpha);alpha=_Math.lerp(hslA.l,hslB.l,alpha);this.setHSL(color,s,alpha);return this}}(),equals:function(c){return c.r===this.r&&c.g===this.g&&c.b===this.b},fromArray:function(array,offset){void 0===offset&&(offset=0);this.r=array[offset];this.g=array[offset+
1];this.b=array[offset+2];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array},toJSON:function(){return this.getHex()}});var UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},
refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},
gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},
shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},
opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},
lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,
UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,
UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,
UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,
UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:{tCube:{value:null},
tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1E3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,
UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};Object.assign(Face3.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.a=source.a;this.b=source.b;this.c=
source.c;this.normal.copy(source.normal);this.color.copy(source.color);this.materialIndex=source.materialIndex;for(var i=0,il=source.vertexNormals.length;i<il;i++)this.vertexNormals[i]=source.vertexNormals[i].clone();i=0;for(il=source.vertexColors.length;i<il;i++)this.vertexColors[i]=source.vertexColors[i].clone();return this}});Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");Euler.DefaultOrder="XYZ";Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},set:function(value){this._x=
value;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(value){this._y=value;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(value){this._z=value;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(value){this._order=value;this.onChangeCallback()}}});Object.assign(Euler.prototype,{isEuler:!0,set:function(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,
this._y,this._z,this._order)},copy:function(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this.onChangeCallback();return this},setFromRotationMatrix:function(m,order,update){var clamp=_Math.clamp,te=m.elements;m=te[0];var m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];order=order||this._order;"XYZ"===order?(this._y=Math.asin(clamp(m13,-1,1)),.99999>Math.abs(m13)?(this._x=Math.atan2(-m23,te),this._z=Math.atan2(-m12,m)):(this._x=
Math.atan2(m32,m22),this._z=0)):"YXZ"===order?(this._x=Math.asin(-clamp(m23,-1,1)),.99999>Math.abs(m23)?(this._y=Math.atan2(m13,te),this._z=Math.atan2(m21,m22)):(this._y=Math.atan2(-m31,m),this._z=0)):"ZXY"===order?(this._x=Math.asin(clamp(m32,-1,1)),.99999>Math.abs(m32)?(this._y=Math.atan2(-m31,te),this._z=Math.atan2(-m12,m22)):(this._y=0,this._z=Math.atan2(m21,m))):"ZYX"===order?(this._y=Math.asin(-clamp(m31,-1,1)),.99999>Math.abs(m31)?(this._x=Math.atan2(m32,te),this._z=Math.atan2(m21,m)):(this._x=
0,this._z=Math.atan2(-m12,m22))):"YZX"===order?(this._z=Math.asin(clamp(m21,-1,1)),.99999>Math.abs(m21)?(this._x=Math.atan2(-m23,m22),this._y=Math.atan2(-m31,m)):(this._x=0,this._y=Math.atan2(m13,te))):"XZY"===order?(this._z=Math.asin(-clamp(m12,-1,1)),.99999>Math.abs(m12)?(this._x=Math.atan2(m32,m22),this._y=Math.atan2(m13,m)):(this._x=Math.atan2(-m23,te),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+order);this._order=order;if(!1!==update)this.onChangeCallback();
return this},setFromQuaternion:function(){var matrix=new Matrix4;return function(q,order,update){matrix.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(matrix,order,update)}}(),setFromVector3:function(v,order){return this.set(v.x,v.y,v.z,order||this._order)},reorder:function(){var q=new Quaternion;return function(newOrder){q.setFromEuler(this);return this.setFromQuaternion(q,newOrder)}}(),equals:function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===
this._order},fromArray:function(array){this._x=array[0];this._y=array[1];this._z=array[2];void 0!==array[3]&&(this._order=array[3]);this.onChangeCallback();return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array},toVector3:function(optionalResult){return optionalResult?optionalResult.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)},
onChange:function(callback){this.onChangeCallback=callback;return this},onChangeCallback:function(){}});Object.assign(Layers.prototype,{set:function(channel){this.mask=1<<channel|0},enable:function(channel){this.mask=this.mask|1<<channel|0},toggle:function(channel){this.mask^=1<<channel|0},disable:function(channel){this.mask&=~(1<<channel|0)},test:function(layers){return 0!==(this.mask&layers.mask)}});var object3DId=0;Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=!0;Object3D.prototype=
Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(matrix){this.matrix.multiplyMatrices(matrix,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(q){this.quaternion.premultiply(q);return this},setRotationFromAxisAngle:function(axis,angle){this.quaternion.setFromAxisAngle(axis,angle)},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,
!0)},setRotationFromMatrix:function(m){this.quaternion.setFromRotationMatrix(m)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},rotateOnAxis:function(){var q1=new Quaternion;return function(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(q1);return this}}(),rotateOnWorldAxis:function(){var q1=new Quaternion;return function(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(q1);return this}}(),rotateX:function(){var v1=new Vector3(1,0,0);return function(angle){return this.rotateOnAxis(v1,
angle)}}(),rotateY:function(){var v1=new Vector3(0,1,0);return function(angle){return this.rotateOnAxis(v1,angle)}}(),rotateZ:function(){var v1=new Vector3(0,0,1);return function(angle){return this.rotateOnAxis(v1,angle)}}(),translateOnAxis:function(){var v1=new Vector3;return function(axis,distance){v1.copy(axis).applyQuaternion(this.quaternion);this.position.add(v1.multiplyScalar(distance));return this}}(),translateX:function(){var v1=new Vector3(1,0,0);return function(distance){return this.translateOnAxis(v1,
distance)}}(),translateY:function(){var v1=new Vector3(0,1,0);return function(distance){return this.translateOnAxis(v1,distance)}}(),translateZ:function(){var v1=new Vector3(0,0,1);return function(distance){return this.translateOnAxis(v1,distance)}}(),localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var m1=new Matrix4;return function(vector){return vector.applyMatrix4(m1.getInverse(this.matrixWorld))}}(),lookAt:function(){var q1=new Quaternion,m1=
new Matrix4,target=new Vector3,position=new Vector3;return function(x,y,z){x.isVector3?target.copy(x):target.set(x,y,z);x=this.parent;this.updateWorldMatrix(!0,!1);position.setFromMatrixPosition(this.matrixWorld);this.isCamera||this.isLight?m1.lookAt(position,target,this.up):m1.lookAt(target,position,this.up);this.quaternion.setFromRotationMatrix(m1);x&&(m1.extractRotation(x.matrixWorld),q1.setFromRotationMatrix(m1),this.quaternion.premultiply(q1.inverse()))}}(),add:function(object){if(1<arguments.length){for(var i=
0;i<arguments.length;i++)this.add(arguments[i]);return this}if(object===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this;object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,object.dispatchEvent({type:"added"}),this.children.push(object)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object);return this},remove:function(object){if(1<arguments.length){for(var i=0;i<arguments.length;i++)this.remove(arguments[i]);
return this}i=this.children.indexOf(object);-1!==i&&(object.parent=null,object.dispatchEvent({type:"removed"}),this.children.splice(i,1));return this},getObjectById:function(id){return this.getObjectByProperty("id",id)},getObjectByName:function(name){return this.getObjectByProperty("name",name)},getObjectByProperty:function(name,value){if(this[name]===value)return this;for(var i=0,l=this.children.length;i<l;i++){var object=this.children[i].getObjectByProperty(name,value);if(void 0!==object)return object}},
getWorldPosition:function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);return target.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var position=new Vector3,scale=new Vector3;return function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),target=new Quaternion);this.updateMatrixWorld(!0);this.matrixWorld.decompose(position,
target,scale);return target}}(),getWorldScale:function(){var position=new Vector3,quaternion=new Quaternion;return function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);this.matrixWorld.decompose(position,quaternion,target);return target}}(),getWorldDirection:function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);
var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(callback){callback(this);for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].traverse(callback)},traverseVisible:function(callback){if(!1!==this.visible){callback(this);for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].traverseVisible(callback)}},traverseAncestors:function(callback){var parent=this.parent;null!==parent&&(callback(parent),
parent.traverseAncestors(callback))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0;for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].updateMatrixWorld(force)},
updateWorldMatrix:function(updateParents,updateChildren){var parent=this.parent;!0===updateParents&&null!==parent&&parent.updateWorldMatrix(!0,!1);this.matrixAutoUpdate&&this.updateMatrix();null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);if(!0===updateChildren)for(updateParents=this.children,updateChildren=0,parent=updateParents.length;updateChildren<parent;updateChildren++)updateParents[updateChildren].updateWorldMatrix(!1,
!0)},toJSON:function(meta){function serialize(library,element){void 0===library[element.uuid]&&(library[element.uuid]=element.toJSON(meta));return element.uuid}function extractFromCache(cache){var values=[],key;for(key in cache){var data=cache[key];delete data.metadata;values.push(data)}return values}var isRootObject=void 0===meta||"string"===typeof meta,output={};isRootObject&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});
var object={};object.uuid=this.uuid;object.type=this.type;""!==this.name&&(object.name=this.name);!0===this.castShadow&&(object.castShadow=!0);!0===this.receiveShadow&&(object.receiveShadow=!0);!1===this.visible&&(object.visible=!1);!1===this.frustumCulled&&(object.frustumCulled=!1);0!==this.renderOrder&&(object.renderOrder=this.renderOrder);"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData);object.layers=this.layers.mask;object.matrix=this.matrix.toArray();!1===this.matrixAutoUpdate&&
(object.matrixAutoUpdate=!1);this.isMesh&&0!==this.drawMode&&(object.drawMode=this.drawMode);if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(void 0!==parameters&&void 0!==parameters.shapes)if(parameters=parameters.shapes,Array.isArray(parameters))for(var i=0,l=parameters.length;i<l;i++)serialize(meta.shapes,parameters[i]);else serialize(meta.shapes,parameters)}if(void 0!==this.material)if(Array.isArray(this.material)){parameters=
[];i=0;for(l=this.material.length;i<l;i++)parameters.push(serialize(meta.materials,this.material[i]));object.material=parameters}else object.material=serialize(meta.materials,this.material);if(0<this.children.length)for(object.children=[],i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object);if(isRootObject){isRootObject=extractFromCache(meta.geometries);i=extractFromCache(meta.materials);l=extractFromCache(meta.textures);var images=extractFromCache(meta.images);
parameters=extractFromCache(meta.shapes);0<isRootObject.length&&(output.geometries=isRootObject);0<i.length&&(output.materials=i);0<l.length&&(output.textures=l);0<images.length&&(output.images=images);0<parameters.length&&(output.shapes=parameters)}output.object=object;return output},clone:function(recursive){return(new this.constructor).copy(this,recursive)},copy:function(source,recursive){void 0===recursive&&(recursive=!0);this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);
this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));
if(!0===recursive)for(recursive=0;recursive<source.children.length;recursive++)this.add(source.children[recursive].clone());return this}});var geometryId=0;Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix:function(matrix){for(var normalMatrix=(new Matrix3).getNormalMatrix(matrix),i=0,il=this.vertices.length;i<il;i++)this.vertices[i].applyMatrix4(matrix);i=0;for(il=this.faces.length;i<il;i++){matrix=this.faces[i];matrix.normal.applyMatrix3(normalMatrix).normalize();
for(var j=0,jl=matrix.vertexNormals.length;j<jl;j++)matrix.vertexNormals[j].applyMatrix3(normalMatrix).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var m1=new Matrix4;return function(angle){m1.makeRotationX(angle);this.applyMatrix(m1);return this}}(),rotateY:function(){var m1=new Matrix4;return function(angle){m1.makeRotationY(angle);this.applyMatrix(m1);
return this}}(),rotateZ:function(){var m1=new Matrix4;return function(angle){m1.makeRotationZ(angle);this.applyMatrix(m1);return this}}(),translate:function(){var m1=new Matrix4;return function(x,y,z){m1.makeTranslation(x,y,z);this.applyMatrix(m1);return this}}(),scale:function(){var m1=new Matrix4;return function(x,y,z){m1.makeScale(x,y,z);this.applyMatrix(m1);return this}}(),lookAt:function(){var obj=new Object3D;return function(vector){obj.lookAt(vector);obj.updateMatrix();this.applyMatrix(obj.matrix)}}(),
fromBufferGeometry:function(geometry){function addFace(a,b,c,materialIndex){var vertexColors=void 0===colors?[]:[scope.colors[a].clone(),scope.colors[b].clone(),scope.colors[c].clone()],vertexNormals=void 0===normals?[]:[(new Vector3).fromArray(normals,3*a),(new Vector3).fromArray(normals,3*b),(new Vector3).fromArray(normals,3*c)];materialIndex=new Face3(a,b,c,vertexNormals,vertexColors,materialIndex);scope.faces.push(materialIndex);void 0!==uvs&&scope.faceVertexUvs[0].push([(new Vector2).fromArray(uvs,
2*a),(new Vector2).fromArray(uvs,2*b),(new Vector2).fromArray(uvs,2*c)]);void 0!==uvs2&&scope.faceVertexUvs[1].push([(new Vector2).fromArray(uvs2,2*a),(new Vector2).fromArray(uvs2,2*b),(new Vector2).fromArray(uvs2,2*c)])}var scope=this,indices=null!==geometry.index?geometry.index.array:void 0,attributes=geometry.attributes,positions=attributes.position.array,normals=void 0!==attributes.normal?attributes.normal.array:void 0,colors=void 0!==attributes.color?attributes.color.array:void 0,uvs=void 0!==
attributes.uv?attributes.uv.array:void 0,uvs2=void 0!==attributes.uv2?attributes.uv2.array:void 0;void 0!==uvs2&&(this.faceVertexUvs[1]=[]);for(var j=attributes=0;attributes<positions.length;attributes+=3,j+=2)scope.vertices.push((new Vector3).fromArray(positions,attributes)),void 0!==colors&&scope.colors.push((new Color).fromArray(colors,attributes));var groups=geometry.groups;if(0<groups.length)for(attributes=0;attributes<groups.length;attributes++){positions=groups[attributes];var start=positions.start,
count=positions.count;j=start;for(start+=count;j<start;j+=3)void 0!==indices?addFace(indices[j],indices[j+1],indices[j+2],positions.materialIndex):addFace(j,j+1,j+2,positions.materialIndex)}else if(void 0!==indices)for(attributes=0;attributes<indices.length;attributes+=3)addFace(indices[attributes],indices[attributes+1],indices[attributes+2]);else for(attributes=0;attributes<positions.length/3;attributes+=3)addFace(attributes,attributes+1,attributes+2);this.computeFaceNormals();null!==geometry.boundingBox&&
(this.boundingBox=geometry.boundingBox.clone());null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());return this},center:function(){var offset=new Vector3;return function(){this.computeBoundingBox();this.boundingBox.getCenter(offset).negate();this.translate(offset.x,offset.y,offset.z);return this}}(),normalize:function(){this.computeBoundingSphere();var center=this.boundingSphere.center,radius=this.boundingSphere.radius;radius=0===radius?1:1/radius;var matrix=new Matrix4;
matrix.set(radius,0,0,-radius*center.x,0,radius,0,-radius*center.y,0,0,radius,-radius*center.z,0,0,0,1);this.applyMatrix(matrix);return this},computeFaceNormals:function(){for(var cb=new Vector3,ab=new Vector3,f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f],vA=this.vertices[face.a],vB=this.vertices[face.b];cb.subVectors(this.vertices[face.c],vB);ab.subVectors(vA,vB);cb.cross(ab);cb.normalize();face.normal.copy(cb)}},computeVertexNormals:function(areaWeighted){void 0===areaWeighted&&(areaWeighted=
!0);var vl;var vertices=Array(this.vertices.length);var v=0;for(vl=this.vertices.length;v<vl;v++)vertices[v]=new Vector3;if(areaWeighted){var cb=new Vector3,ab=new Vector3;areaWeighted=0;for(v=this.faces.length;areaWeighted<v;areaWeighted++){vl=this.faces[areaWeighted];var vA=this.vertices[vl.a];var vB=this.vertices[vl.b];var vC=this.vertices[vl.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);vertices[vl.a].add(cb);vertices[vl.b].add(cb);vertices[vl.c].add(cb)}}else for(this.computeFaceNormals(),
areaWeighted=0,v=this.faces.length;areaWeighted<v;areaWeighted++)vl=this.faces[areaWeighted],vertices[vl.a].add(vl.normal),vertices[vl.b].add(vl.normal),vertices[vl.c].add(vl.normal);v=0;for(vl=this.vertices.length;v<vl;v++)vertices[v].normalize();areaWeighted=0;for(v=this.faces.length;areaWeighted<v;areaWeighted++)vl=this.faces[areaWeighted],vA=vl.vertexNormals,3===vA.length?(vA[0].copy(vertices[vl.a]),vA[1].copy(vertices[vl.b]),vA[2].copy(vertices[vl.c])):(vA[0]=vertices[vl.a].clone(),vA[1]=vertices[vl.b].clone(),
vA[2]=vertices[vl.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var fl;this.computeFaceNormals();var f=0;for(fl=this.faces.length;f<fl;f++){var face=this.faces[f];var vertexNormals=face.vertexNormals;3===vertexNormals.length?(vertexNormals[0].copy(face.normal),vertexNormals[1].copy(face.normal),vertexNormals[2].copy(face.normal)):(vertexNormals[0]=face.normal.clone(),vertexNormals[1]=face.normal.clone(),vertexNormals[2]=face.normal.clone())}0<this.faces.length&&
(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var il,fl;var f=0;for(fl=this.faces.length;f<fl;f++){var face=this.faces[f];face.__originalFaceNormal?face.__originalFaceNormal.copy(face.normal):face.__originalFaceNormal=face.normal.clone();face.__originalVertexNormals||(face.__originalVertexNormals=[]);var i=0;for(il=face.vertexNormals.length;i<il;i++)face.__originalVertexNormals[i]?face.__originalVertexNormals[i].copy(face.vertexNormals[i]):face.__originalVertexNormals[i]=face.vertexNormals[i].clone()}var tmpGeo=
new Geometry;tmpGeo.faces=this.faces;i=0;for(il=this.morphTargets.length;i<il;i++){if(!this.morphNormals[i]){this.morphNormals[i]={};this.morphNormals[i].faceNormals=[];this.morphNormals[i].vertexNormals=[];face=this.morphNormals[i].faceNormals;var dstNormalsVertex=this.morphNormals[i].vertexNormals;f=0;for(fl=this.faces.length;f<fl;f++){var faceNormal=new Vector3;var vertexNormals={a:new Vector3,b:new Vector3,c:new Vector3};face.push(faceNormal);dstNormalsVertex.push(vertexNormals)}}dstNormalsVertex=
this.morphNormals[i];tmpGeo.vertices=this.morphTargets[i].vertices;tmpGeo.computeFaceNormals();tmpGeo.computeVertexNormals();f=0;for(fl=this.faces.length;f<fl;f++)face=this.faces[f],faceNormal=dstNormalsVertex.faceNormals[f],vertexNormals=dstNormalsVertex.vertexNormals[f],faceNormal.copy(face.normal),vertexNormals.a.copy(face.vertexNormals[0]),vertexNormals.b.copy(face.vertexNormals[1]),vertexNormals.c.copy(face.vertexNormals[2])}f=0;for(fl=this.faces.length;f<fl;f++)face=this.faces[f],face.normal=
face.__originalFaceNormal,face.vertexNormals=face.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(geometry,matrix,materialIndexOffset){if(geometry&&geometry.isGeometry){var normalMatrix,vertexOffset=this.vertices.length,vertices1=this.vertices,
vertices2=geometry.vertices,faces1=this.faces,faces2=geometry.faces,uvs1=this.faceVertexUvs[0],uvs2=geometry.faceVertexUvs[0],colors1=this.colors,colors2=geometry.colors;void 0===materialIndexOffset&&(materialIndexOffset=0);void 0!==matrix&&(normalMatrix=(new Matrix3).getNormalMatrix(matrix));geometry=0;for(var il=vertices2.length;geometry<il;geometry++){var vertexCopy=vertices2[geometry].clone();void 0!==matrix&&vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy)}geometry=0;for(il=colors2.length;geometry<
il;geometry++)colors1.push(colors2[geometry].clone());geometry=0;for(il=faces2.length;geometry<il;geometry++){vertices2=faces2[geometry];var faceVertexNormals=vertices2.vertexNormals;colors2=vertices2.vertexColors;colors1=new Face3(vertices2.a+vertexOffset,vertices2.b+vertexOffset,vertices2.c+vertexOffset);colors1.normal.copy(vertices2.normal);void 0!==normalMatrix&&colors1.normal.applyMatrix3(normalMatrix).normalize();matrix=0;for(vertices1=faceVertexNormals.length;matrix<vertices1;matrix++)vertexCopy=
faceVertexNormals[matrix].clone(),void 0!==normalMatrix&&vertexCopy.applyMatrix3(normalMatrix).normalize(),colors1.vertexNormals.push(vertexCopy);colors1.color.copy(vertices2.color);matrix=0;for(vertices1=colors2.length;matrix<vertices1;matrix++)vertexCopy=colors2[matrix],colors1.vertexColors.push(vertexCopy.clone());colors1.materialIndex=vertices2.materialIndex+materialIndexOffset;faces1.push(colors1)}geometry=0;for(il=uvs2.length;geometry<il;geometry++)if(materialIndexOffset=uvs2[geometry],normalMatrix=
[],void 0!==materialIndexOffset){matrix=0;for(vertices1=materialIndexOffset.length;matrix<vertices1;matrix++)normalMatrix.push(materialIndexOffset[matrix].clone());uvs1.push(normalMatrix)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",geometry)},mergeMesh:function(mesh){mesh&&mesh.isMesh?(mesh.matrixAutoUpdate&&mesh.updateMatrix(),this.merge(mesh.geometry,mesh.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",mesh)},
mergeVertices:function(){var verticesMap={},unique=[],changes=[],precision=Math.pow(10,4),il;var i=0;for(il=this.vertices.length;i<il;i++){var v=this.vertices[i];v=Math.round(v.x*precision)+"_"+Math.round(v.y*precision)+"_"+Math.round(v.z*precision);void 0===verticesMap[v]?(verticesMap[v]=i,unique.push(this.vertices[i]),changes[i]=unique.length-1):changes[i]=changes[verticesMap[v]]}verticesMap=[];i=0;for(il=this.faces.length;i<il;i++)for(precision=this.faces[i],precision.a=changes[precision.a],precision.b=
changes[precision.b],precision.c=changes[precision.c],precision=[precision.a,precision.b,precision.c],v=0;3>v;v++)if(precision[v]===precision[(v+1)%3]){verticesMap.push(i);break}for(i=verticesMap.length-1;0<=i;i--)for(precision=verticesMap[i],this.faces.splice(precision,1),changes=0,il=this.faceVertexUvs.length;changes<il;changes++)this.faceVertexUvs[changes].splice(precision,1);i=this.vertices.length-unique.length;this.vertices=unique;return i},setFromPoints:function(points){this.vertices=[];for(var i=
0,l=points.length;i<l;i++){var point=points[i];this.vertices.push(new Vector3(point.x,point.y,point.z||0))}return this},sortFacesByMaterialIndex:function(){for(var faces=this.faces,length=faces.length,i=0;i<length;i++)faces[i]._id=i;faces.sort(function(a,b){return a.materialIndex-b.materialIndex});var uvs1=this.faceVertexUvs[0],uvs2=this.faceVertexUvs[1],newUvs1,newUvs2;uvs1&&uvs1.length===length&&(newUvs1=[]);uvs2&&uvs2.length===length&&(newUvs2=[]);for(i=0;i<length;i++){var id=faces[i]._id;newUvs1&&
newUvs1.push(uvs1[id]);newUvs2&&newUvs2.push(uvs2[id])}newUvs1&&(this.faceVertexUvs[0]=newUvs1);newUvs2&&(this.faceVertexUvs[1]=newUvs2)},toJSON:function(){function setBit(value,position,enabled){return enabled?value|1<<position:value&~(1<<position)}function getNormalIndex(normal){var hash=normal.x.toString()+normal.y.toString()+normal.z.toString();if(void 0!==normalsHash[hash])return normalsHash[hash];normalsHash[hash]=normals.length/3;normals.push(normal.x,normal.y,normal.z);return normalsHash[hash]}
function getColorIndex(color){var hash=color.r.toString()+color.g.toString()+color.b.toString();if(void 0!==colorsHash[hash])return colorsHash[hash];colorsHash[hash]=colors.length;colors.push(color.getHex());return colorsHash[hash]}function getUvIndex(uv){var hash=uv.x.toString()+uv.y.toString();if(void 0!==uvsHash[hash])return uvsHash[hash];uvsHash[hash]=uvs.length/2;uvs.push(uv.x,uv.y);return uvsHash[hash]}var data={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};data.uuid=this.uuid;
data.type=this.type;""!==this.name&&(data.name=this.name);if(void 0!==this.parameters){var parameters=this.parameters,key;for(key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}parameters=[];for(key=0;key<this.vertices.length;key++){var vertex=this.vertices[key];parameters.push(vertex.x,vertex.y,vertex.z)}vertex=[];var normals=[],normalsHash={},colors=[],colorsHash={},uvs=[],uvsHash={};for(key=0;key<this.faces.length;key++){var face=this.faces[key],hasFaceVertexUv=
void 0!==this.faceVertexUvs[0][key],hasFaceNormal=0<face.normal.length(),hasFaceVertexNormal=0<face.vertexNormals.length,hasFaceColor=1!==face.color.r||1!==face.color.g||1!==face.color.b,hasFaceVertexColor=0<face.vertexColors.length,faceType=0;faceType=setBit(faceType,0,0);faceType=setBit(faceType,1,!0);faceType=setBit(faceType,2,!1);faceType=setBit(faceType,3,hasFaceVertexUv);faceType=setBit(faceType,4,hasFaceNormal);faceType=setBit(faceType,5,hasFaceVertexNormal);faceType=setBit(faceType,6,hasFaceColor);
faceType=setBit(faceType,7,hasFaceVertexColor);vertex.push(faceType);vertex.push(face.a,face.b,face.c);vertex.push(face.materialIndex);hasFaceVertexUv&&(hasFaceVertexUv=this.faceVertexUvs[0][key],vertex.push(getUvIndex(hasFaceVertexUv[0]),getUvIndex(hasFaceVertexUv[1]),getUvIndex(hasFaceVertexUv[2])));hasFaceNormal&&vertex.push(getNormalIndex(face.normal));hasFaceVertexNormal&&(hasFaceNormal=face.vertexNormals,vertex.push(getNormalIndex(hasFaceNormal[0]),getNormalIndex(hasFaceNormal[1]),getNormalIndex(hasFaceNormal[2])));
hasFaceColor&&vertex.push(getColorIndex(face.color));hasFaceVertexColor&&(face=face.vertexColors,vertex.push(getColorIndex(face[0]),getColorIndex(face[1]),getColorIndex(face[2])))}data.data={};data.data.vertices=parameters;data.data.normals=normals;0<colors.length&&(data.data.colors=colors);0<uvs.length&&(data.data.uvs=[uvs]);data.data.faces=vertex;return data},clone:function(){return(new Geometry).copy(this)},copy:function(source){var il,jl,kl;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=
[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=source.name;var j=source.vertices;var i=0;for(il=j.length;i<il;i++)this.vertices.push(j[i].clone());j=source.colors;i=0;for(il=j.length;i<il;i++)this.colors.push(j[i].clone());j=source.faces;i=0;for(il=j.length;i<il;i++)this.faces.push(j[i].clone());i=0;for(il=source.faceVertexUvs.length;i<il;i++){var faceVertexUvs=source.faceVertexUvs[i];
void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);j=0;for(jl=faceVertexUvs.length;j<jl;j++){var uvs=faceVertexUvs[j],uvsCopy=[];var k=0;for(kl=uvs.length;k<kl;k++)uvsCopy.push(uvs[k].clone());this.faceVertexUvs[i].push(uvsCopy)}}k=source.morphTargets;i=0;for(il=k.length;i<il;i++){kl={};kl.name=k[i].name;if(void 0!==k[i].vertices)for(kl.vertices=[],j=0,jl=k[i].vertices.length;j<jl;j++)kl.vertices.push(k[i].vertices[j].clone());if(void 0!==k[i].normals)for(kl.normals=[],j=0,jl=k[i].normals.length;j<
jl;j++)kl.normals.push(k[i].normals[j].clone());this.morphTargets.push(kl)}k=source.morphNormals;i=0;for(il=k.length;i<il;i++){kl={};if(void 0!==k[i].vertexNormals)for(kl.vertexNormals=[],j=0,jl=k[i].vertexNormals.length;j<jl;j++)faceVertexUvs=k[i].vertexNormals[j],uvs={},uvs.a=faceVertexUvs.a.clone(),uvs.b=faceVertexUvs.b.clone(),uvs.c=faceVertexUvs.c.clone(),kl.vertexNormals.push(uvs);if(void 0!==k[i].faceNormals)for(kl.faceNormals=[],j=0,jl=k[i].faceNormals.length;j<jl;j++)kl.faceNormals.push(k[i].faceNormals[j].clone());
this.morphNormals.push(kl)}j=source.skinWeights;i=0;for(il=j.length;i<il;i++)this.skinWeights.push(j[i].clone());j=source.skinIndices;i=0;for(il=j.length;i<il;i++)this.skinIndices.push(j[i].clone());j=source.lineDistances;i=0;for(il=j.length;i<il;i++)this.lineDistances.push(j[i]);i=source.boundingBox;null!==i&&(this.boundingBox=i.clone());i=source.boundingSphere;null!==i&&(this.boundingSphere=i.clone());this.elementsNeedUpdate=source.elementsNeedUpdate;this.verticesNeedUpdate=source.verticesNeedUpdate;
this.uvsNeedUpdate=source.uvsNeedUpdate;this.normalsNeedUpdate=source.normalsNeedUpdate;this.colorsNeedUpdate=source.colorsNeedUpdate;this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate;this.groupsNeedUpdate=source.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},
setArray:function(array){if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==array?array.length/this.itemSize:0;this.array=array;return this},setDynamic:function(value){this.dynamic=value;return this},copy:function(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.dynamic=source.dynamic;return this},copyAt:function(index1,
attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var i=0,l=this.itemSize;i<l;i++)this.array[index1+i]=attribute.array[index2+i];return this},copyArray:function(array){this.array.set(array);return this},copyColorsArray:function(colors){for(var array=this.array,offset=0,i=0,l=colors.length;i<l;i++){var color=colors[i];void 0===color&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),color=new Color);array[offset++]=color.r;array[offset++]=color.g;array[offset++]=
color.b}return this},copyVector2sArray:function(vectors){for(var array=this.array,offset=0,i=0,l=vectors.length;i<l;i++){var vector=vectors[i];void 0===vector&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),vector=new Vector2);array[offset++]=vector.x;array[offset++]=vector.y}return this},copyVector3sArray:function(vectors){for(var array=this.array,offset=0,i=0,l=vectors.length;i<l;i++){var vector=vectors[i];void 0===vector&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",
i),vector=new Vector3);array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z}return this},copyVector4sArray:function(vectors){for(var array=this.array,offset=0,i=0,l=vectors.length;i<l;i++){var vector=vectors[i];void 0===vector&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),vector=new Vector4);array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w}return this},set:function(value,offset){void 0===
offset&&(offset=0);this.array.set(value,offset);return this},getX:function(index){return this.array[index*this.itemSize]},setX:function(index,x){this.array[index*this.itemSize]=x;return this},getY:function(index){return this.array[index*this.itemSize+1]},setY:function(index,y){this.array[index*this.itemSize+1]=y;return this},getZ:function(index){return this.array[index*this.itemSize+2]},setZ:function(index,z){this.array[index*this.itemSize+2]=z;return this},getW:function(index){return this.array[index*
this.itemSize+3]},setW:function(index,w){this.array[index*this.itemSize+3]=w;return this},setXY:function(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this},setXYZ:function(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this},setXYZW:function(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this},onUpload:function(callback){this.onUploadCallback=
callback;return this},clone:function(){return(new this.constructor(this.array,this.itemSize)).copy(this)}});Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=
Uint8ClampedBufferAttribute;Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);
Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;Object.assign(DirectGeometry.prototype,{computeGroups:function(geometry){var groups=[],materialIndex=void 0;geometry=geometry.faces;for(var i=0;i<geometry.length;i++){var face=
geometry[i];if(face.materialIndex!==materialIndex){materialIndex=face.materialIndex;void 0!==group&&(group.count=3*i-group.start,groups.push(group));var group={start:3*i,materialIndex:materialIndex}}}void 0!==group&&(group.count=3*i-group.start,groups.push(group));this.groups=groups},fromGeometry:function(geometry){var faces=geometry.faces,vertices=geometry.vertices,faceVertexUvs=geometry.faceVertexUvs,hasFaceVertexUv=faceVertexUvs[0]&&0<faceVertexUvs[0].length,hasFaceVertexUv2=faceVertexUvs[1]&&
0<faceVertexUvs[1].length,morphTargets=geometry.morphTargets,morphTargetsLength=morphTargets.length;if(0<morphTargetsLength){var morphTargetsPosition=[];for(var i=0;i<morphTargetsLength;i++)morphTargetsPosition[i]={name:morphTargets[i].name,data:[]};this.morphTargets.position=morphTargetsPosition}var morphNormals=geometry.morphNormals,morphNormalsLength=morphNormals.length;if(0<morphNormalsLength){var morphTargetsNormal=[];for(i=0;i<morphNormalsLength;i++)morphTargetsNormal[i]={name:morphNormals[i].name,
data:[]};this.morphTargets.normal=morphTargetsNormal}var skinIndices=geometry.skinIndices,skinWeights=geometry.skinWeights,hasSkinIndices=skinIndices.length===vertices.length,hasSkinWeights=skinWeights.length===vertices.length;0<vertices.length&&0===faces.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(i=0;i<faces.length;i++){var face=faces[i];this.vertices.push(vertices[face.a],vertices[face.b],vertices[face.c]);var vertexNormals=face.vertexNormals;3===vertexNormals.length?
this.normals.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(vertexNormals=face.normal,this.normals.push(vertexNormals,vertexNormals,vertexNormals));vertexNormals=face.vertexColors;3===vertexNormals.length?this.colors.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(vertexNormals=face.color,this.colors.push(vertexNormals,vertexNormals,vertexNormals));!0===hasFaceVertexUv&&(vertexNormals=faceVertexUvs[0][i],void 0!==vertexNormals?this.uvs.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):
(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",i),this.uvs.push(new Vector2,new Vector2,new Vector2)));!0===hasFaceVertexUv2&&(vertexNormals=faceVertexUvs[1][i],void 0!==vertexNormals?this.uvs2.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",i),this.uvs2.push(new Vector2,new Vector2,new Vector2)));for(vertexNormals=0;vertexNormals<morphTargetsLength;vertexNormals++){var morphTarget=morphTargets[vertexNormals].vertices;
morphTargetsPosition[vertexNormals].data.push(morphTarget[face.a],morphTarget[face.b],morphTarget[face.c])}for(vertexNormals=0;vertexNormals<morphNormalsLength;vertexNormals++)morphTarget=morphNormals[vertexNormals].vertexNormals[i],morphTargetsNormal[vertexNormals].data.push(morphTarget.a,morphTarget.b,morphTarget.c);hasSkinIndices&&this.skinIndices.push(skinIndices[face.a],skinIndices[face.b],skinIndices[face.c]);hasSkinWeights&&this.skinWeights.push(skinWeights[face.a],skinWeights[face.b],skinWeights[face.c])}this.computeGroups(geometry);
this.verticesNeedUpdate=geometry.verticesNeedUpdate;this.normalsNeedUpdate=geometry.normalsNeedUpdate;this.colorsNeedUpdate=geometry.colorsNeedUpdate;this.uvsNeedUpdate=geometry.uvsNeedUpdate;this.groupsNeedUpdate=geometry.groupsNeedUpdate;return this}});var bufferGeometryId=1;BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(index){Array.isArray(index)?this.index=
new (65535<arrayMax(index)?Uint32BufferAttribute:Uint16BufferAttribute)(index,1):this.index=index},addAttribute:function(name,attribute,JSCompiler_OptimizeArgumentsArray_p3){if(!(attribute&&attribute.isBufferAttribute||attribute&&attribute.isInterleavedBufferAttribute))return console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(name,new BufferAttribute(attribute,JSCompiler_OptimizeArgumentsArray_p3));if("index"===name)return console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
this.setIndex(attribute),this;this.attributes[name]=attribute;return this},getAttribute:function(name){return this.attributes[name]},removeAttribute:function(name){delete this.attributes[name];return this},addGroup:function(start,count,materialIndex){this.groups.push({start:start,count:count,materialIndex:void 0!==materialIndex?materialIndex:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(start,count){this.drawRange.start=start;this.drawRange.count=count},applyMatrix:function(matrix){var position=
this.attributes.position;void 0!==position&&(matrix.applyToBufferAttribute(position),position.needsUpdate=!0);var normal=this.attributes.normal;void 0!==normal&&(position=(new Matrix3).getNormalMatrix(matrix),position.applyToBufferAttribute(normal),normal.needsUpdate=!0);normal=this.attributes.tangent;void 0!==normal&&(position=(new Matrix3).getNormalMatrix(matrix),position.applyToBufferAttribute(normal),normal.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&
this.computeBoundingSphere();return this},rotateX:function(){var m1=new Matrix4;return function(angle){m1.makeRotationX(angle);this.applyMatrix(m1);return this}}(),rotateY:function(){var m1=new Matrix4;return function(angle){m1.makeRotationY(angle);this.applyMatrix(m1);return this}}(),rotateZ:function(){var m1=new Matrix4;return function(angle){m1.makeRotationZ(angle);this.applyMatrix(m1);return this}}(),translate:function(){var m1=new Matrix4;return function(x,y,z){m1.makeTranslation(x,y,z);this.applyMatrix(m1);
return this}}(),scale:function(){var m1=new Matrix4;return function(x,y,z){m1.makeScale(x,y,z);this.applyMatrix(m1);return this}}(),lookAt:function(){var obj=new Object3D;return function(vector){obj.lookAt(vector);obj.updateMatrix();this.applyMatrix(obj.matrix)}}(),center:function(){var offset=new Vector3;return function(){this.computeBoundingBox();this.boundingBox.getCenter(offset).negate();this.translate(offset.x,offset.y,offset.z);return this}}(),setFromObject:function(object){var geometry=object.geometry;
if(object.isPoints||object.isLine){object=new Float32BufferAttribute(3*geometry.vertices.length,3);var colors=new Float32BufferAttribute(3*geometry.colors.length,3);this.addAttribute("position",object.copyVector3sArray(geometry.vertices));this.addAttribute("color",colors.copyColorsArray(geometry.colors));geometry.lineDistances&&geometry.lineDistances.length===geometry.vertices.length&&(object=new Float32BufferAttribute(geometry.lineDistances.length,1),this.addAttribute("lineDistance",object.copyArray(geometry.lineDistances)));
null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());null!==geometry.boundingBox&&(this.boundingBox=geometry.boundingBox.clone())}else object.isMesh&&geometry&&geometry.isGeometry&&this.fromGeometry(geometry);return this},setFromPoints:function(points){for(var position=[],i=0,l=points.length;i<l;i++){var point=points[i];position.push(point.x,point.y,point.z||0)}this.addAttribute("position",new Float32BufferAttribute(position,3));return this},updateFromObject:function(object){var geometry=
object.geometry;if(object.isMesh){var direct=geometry.__directGeometry;!0===geometry.elementsNeedUpdate&&(direct=void 0,geometry.elementsNeedUpdate=!1);if(void 0===direct)return this.fromGeometry(geometry);direct.verticesNeedUpdate=geometry.verticesNeedUpdate;direct.normalsNeedUpdate=geometry.normalsNeedUpdate;direct.colorsNeedUpdate=geometry.colorsNeedUpdate;direct.uvsNeedUpdate=geometry.uvsNeedUpdate;direct.groupsNeedUpdate=geometry.groupsNeedUpdate;geometry.verticesNeedUpdate=!1;geometry.normalsNeedUpdate=
!1;geometry.colorsNeedUpdate=!1;geometry.uvsNeedUpdate=!1;geometry.groupsNeedUpdate=!1;geometry=direct}!0===geometry.verticesNeedUpdate&&(direct=this.attributes.position,void 0!==direct&&(direct.copyVector3sArray(geometry.vertices),direct.needsUpdate=!0),geometry.verticesNeedUpdate=!1);!0===geometry.normalsNeedUpdate&&(direct=this.attributes.normal,void 0!==direct&&(direct.copyVector3sArray(geometry.normals),direct.needsUpdate=!0),geometry.normalsNeedUpdate=!1);!0===geometry.colorsNeedUpdate&&(direct=
this.attributes.color,void 0!==direct&&(direct.copyColorsArray(geometry.colors),direct.needsUpdate=!0),geometry.colorsNeedUpdate=!1);geometry.uvsNeedUpdate&&(direct=this.attributes.uv,void 0!==direct&&(direct.copyVector2sArray(geometry.uvs),direct.needsUpdate=!0),geometry.uvsNeedUpdate=!1);geometry.lineDistancesNeedUpdate&&(direct=this.attributes.lineDistance,void 0!==direct&&(direct.copyArray(geometry.lineDistances),direct.needsUpdate=!0),geometry.lineDistancesNeedUpdate=!1);geometry.groupsNeedUpdate&&
(geometry.computeGroups(object.geometry),this.groups=geometry.groups,geometry.groupsNeedUpdate=!1);return this},fromGeometry:function(geometry){geometry.__directGeometry=(new DirectGeometry).fromGeometry(geometry);return this.fromDirectGeometry(geometry.__directGeometry)},fromDirectGeometry:function(geometry){var positions=new Float32Array(3*geometry.vertices.length);this.addAttribute("position",(new BufferAttribute(positions,3)).copyVector3sArray(geometry.vertices));0<geometry.normals.length&&(positions=
new Float32Array(3*geometry.normals.length),this.addAttribute("normal",(new BufferAttribute(positions,3)).copyVector3sArray(geometry.normals)));0<geometry.colors.length&&(positions=new Float32Array(3*geometry.colors.length),this.addAttribute("color",(new BufferAttribute(positions,3)).copyColorsArray(geometry.colors)));0<geometry.uvs.length&&(positions=new Float32Array(2*geometry.uvs.length),this.addAttribute("uv",(new BufferAttribute(positions,2)).copyVector2sArray(geometry.uvs)));0<geometry.uvs2.length&&
(positions=new Float32Array(2*geometry.uvs2.length),this.addAttribute("uv2",(new BufferAttribute(positions,2)).copyVector2sArray(geometry.uvs2)));this.groups=geometry.groups;for(var name in geometry.morphTargets){positions=[];for(var morphTargets=geometry.morphTargets[name],i=0,l=morphTargets.length;i<l;i++){var morphTarget=morphTargets[i],attribute=new Float32BufferAttribute(3*morphTarget.data.length,3);attribute.name=morphTarget.name;positions.push(attribute.copyVector3sArray(morphTarget.data))}this.morphAttributes[name]=
positions}0<geometry.skinIndices.length&&(name=new Float32BufferAttribute(4*geometry.skinIndices.length,4),this.addAttribute("skinIndex",name.copyVector4sArray(geometry.skinIndices)));0<geometry.skinWeights.length&&(name=new Float32BufferAttribute(4*geometry.skinWeights.length,4),this.addAttribute("skinWeight",name.copyVector4sArray(geometry.skinWeights)));null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());null!==geometry.boundingBox&&(this.boundingBox=geometry.boundingBox.clone());
return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);var position=this.attributes.position;void 0!==position?this.boundingBox.setFromBufferAttribute(position):this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var box=
new Box3,vector=new Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var position=this.attributes.position;if(position){var center=this.boundingSphere.center;box.setFromBufferAttribute(position);box.getCenter(center);for(var maxRadiusSq=0,i=0,il=position.count;i<il;i++)vector.x=position.getX(i),vector.y=position.getY(i),vector.z=position.getZ(i),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(vector));this.boundingSphere.radius=Math.sqrt(maxRadiusSq);
isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var index=this.index,attributes=this.attributes;if(attributes.position){var positions=attributes.position.array;if(void 0===attributes.normal)this.addAttribute("normal",new BufferAttribute(new Float32Array(positions.length),3));else for(var array=attributes.normal.array,
i=0,il=array.length;i<il;i++)array[i]=0;array=attributes.normal.array;var pA=new Vector3,pB=new Vector3,pC=new Vector3,cb=new Vector3,ab=new Vector3;if(index){var indices=index.array;i=0;for(il=index.count;i<il;i+=3){index=3*indices[i+0];var vB=3*indices[i+1];var vC=3*indices[i+2];pA.fromArray(positions,index);pB.fromArray(positions,vB);pC.fromArray(positions,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);array[index]+=cb.x;array[index+1]+=cb.y;array[index+2]+=cb.z;array[vB]+=cb.x;array[vB+
1]+=cb.y;array[vB+2]+=cb.z;array[vC]+=cb.x;array[vC+1]+=cb.y;array[vC+2]+=cb.z}}else for(i=0,il=positions.length;i<il;i+=9)pA.fromArray(positions,i),pB.fromArray(positions,i+3),pC.fromArray(positions,i+6),cb.subVectors(pC,pB),ab.subVectors(pA,pB),cb.cross(ab),array[i]=cb.x,array[i+1]=cb.y,array[i+2]=cb.z,array[i+3]=cb.x,array[i+4]=cb.y,array[i+5]=cb.z,array[i+6]=cb.x,array[i+7]=cb.y,array[i+8]=cb.z;this.normalizeNormals();attributes.normal.needsUpdate=!0}},merge:function(geometry,offset){if(geometry&&
geometry.isBufferGeometry){void 0===offset&&(offset=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset\x3d0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var attributes=this.attributes,key;for(key in attributes)if(void 0!==geometry.attributes[key]){var attributeArray1=attributes[key].array,attribute2=geometry.attributes[key],attributeArray2=attribute2.array,i=0;for(attribute2=attribute2.itemSize*offset;i<attributeArray2.length;i++,
attribute2++)attributeArray1[attribute2]=attributeArray2[i]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",geometry)},normalizeNormals:function(){var vector=new Vector3;return function(){for(var normals=this.attributes.normal,i=0,il=normals.count;i<il;i++)vector.x=normals.getX(i),vector.y=normals.getY(i),vector.z=normals.getZ(i),vector.normalize(),normals.setXYZ(i,vector.x,vector.y,vector.z)}}(),toNonIndexed:function(){function convertBufferAttribute(attribute,
indices){var array=attribute.array;attribute=attribute.itemSize;for(var array2=new array.constructor(indices.length*attribute),index,index2=0,i=0,l=indices.length;i<l;i++){index=indices[i]*attribute;for(var j=0;j<attribute;j++)array2[index2++]=array[index++]}return new BufferAttribute(array2,attribute)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var geometry2=new BufferGeometry,indices$jscomp$0=this.index.array,attributes=
this.attributes,name;for(name in attributes){var attribute$jscomp$0=attributes[name];attribute$jscomp$0=convertBufferAttribute(attribute$jscomp$0,indices$jscomp$0);geometry2.addAttribute(name,attribute$jscomp$0)}var morphAttributes=this.morphAttributes;for(name in morphAttributes){var morphArray=[],morphAttribute=morphAttributes[name];attributes=0;for(var il=morphAttribute.length;attributes<il;attributes++)attribute$jscomp$0=morphAttribute[attributes],attribute$jscomp$0=convertBufferAttribute(attribute$jscomp$0,
indices$jscomp$0),morphArray.push(attribute$jscomp$0);geometry2.morphAttributes[name]=morphArray}indices$jscomp$0=this.groups;attributes=0;for(name=indices$jscomp$0.length;attributes<name;attributes++)attribute$jscomp$0=indices$jscomp$0[attributes],geometry2.addGroup(attribute$jscomp$0.start,attribute$jscomp$0.count,attribute$jscomp$0.materialIndex);return geometry2},toJSON:function(){var data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};data.uuid=this.uuid;data.type=
this.type;""!==this.name&&(data.name=this.name);0<Object.keys(this.userData).length&&(data.userData=this.userData);if(void 0!==this.parameters){var parameters=this.parameters;for(key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}data.data={attributes:{}};parameters=this.index;null!==parameters&&(data.data.index={type:parameters.array.constructor.name,array:Array.prototype.slice.call(parameters.array)});var attributes=this.attributes;for(key in attributes){parameters=
attributes[key];var attributeData={itemSize:parameters.itemSize,type:parameters.array.constructor.name,array:Array.prototype.slice.call(parameters.array),normalized:parameters.normalized};""!==parameters.name&&(attributeData.name=parameters.name);data.data.attributes[key]=attributeData}attributes={};var hasMorphAttributes=!1;for(key in this.morphAttributes){for(var attributeArray=this.morphAttributes[key],array=[],i=0,il=attributeArray.length;i<il;i++)parameters=attributeArray[i],attributeData={itemSize:parameters.itemSize,
type:parameters.array.constructor.name,array:Array.prototype.slice.call(parameters.array),normalized:parameters.normalized},""!==parameters.name&&(attributeData.name=parameters.name),array.push(attributeData);0<array.length&&(attributes[key]=array,hasMorphAttributes=!0)}hasMorphAttributes&&(data.data.morphAttributes=attributes);var key=this.groups;0<key.length&&(data.data.groups=JSON.parse(JSON.stringify(key)));key=this.boundingSphere;null!==key&&(data.data.boundingSphere={center:key.center.toArray(),
radius:key.radius});return data},clone:function(){return(new BufferGeometry).copy(this)},copy:function(source){var l;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=source.name;var i=source.index;null!==i&&this.setIndex(i.clone());i=source.attributes;for(name in i)this.addAttribute(name,i[name].clone());var morphAttributes=source.morphAttributes;for(name in morphAttributes){var array=[],morphAttribute=morphAttributes[name];
i=0;for(l=morphAttribute.length;i<l;i++)array.push(morphAttribute[i].clone());this.morphAttributes[name]=array}var name=source.groups;i=0;for(l=name.length;i<l;i++)morphAttributes=name[i],this.addGroup(morphAttributes.start,morphAttributes.count,morphAttributes.materialIndex);name=source.boundingBox;null!==name&&(this.boundingBox=name.clone());name=source.boundingSphere;null!==name&&(this.boundingSphere=name.clone());this.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;
this.userData=source.userData;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});BoxGeometry.prototype=Object.create(Geometry.prototype);BoxGeometry.prototype.constructor=BoxGeometry;BoxBufferGeometry.prototype=Object.create(BufferGeometry.prototype);BoxBufferGeometry.prototype.constructor=BoxBufferGeometry;PlaneGeometry.prototype=Object.create(Geometry.prototype);PlaneGeometry.prototype.constructor=PlaneGeometry;PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype);
PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var materialId=0;Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},setValues:function(values){if(void 0!==values)for(var key in values){var newValue=values[key];if(void 0===newValue)console.warn("THREE.Material: '"+key+"' parameter is undefined.");else if("shading"===key)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),
this.flatShading=1===newValue?!0:!1;else{var currentValue=this[key];void 0===currentValue?console.warn("THREE."+this.type+": '"+key+"' is not a property of this material."):currentValue&&currentValue.isColor?currentValue.set(newValue):currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3?currentValue.copy(newValue):this[key]=newValue}}},toJSON:function(meta){function extractFromCache(cache){var values=[],key;for(key in cache){var data=cache[key];delete data.metadata;values.push(data)}return values}
var isRoot=void 0===meta||"string"===typeof meta;isRoot&&(meta={textures:{},images:{}});var data$jscomp$0={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};data$jscomp$0.uuid=this.uuid;data$jscomp$0.type=this.type;""!==this.name&&(data$jscomp$0.name=this.name);this.color&&this.color.isColor&&(data$jscomp$0.color=this.color.getHex());void 0!==this.roughness&&(data$jscomp$0.roughness=this.roughness);void 0!==this.metalness&&(data$jscomp$0.metalness=this.metalness);this.emissive&&
this.emissive.isColor&&(data$jscomp$0.emissive=this.emissive.getHex());1!==this.emissiveIntensity&&(data$jscomp$0.emissiveIntensity=this.emissiveIntensity);this.specular&&this.specular.isColor&&(data$jscomp$0.specular=this.specular.getHex());void 0!==this.shininess&&(data$jscomp$0.shininess=this.shininess);void 0!==this.clearCoat&&(data$jscomp$0.clearCoat=this.clearCoat);void 0!==this.clearCoatRoughness&&(data$jscomp$0.clearCoatRoughness=this.clearCoatRoughness);this.map&&this.map.isTexture&&(data$jscomp$0.map=
this.map.toJSON(meta).uuid);this.alphaMap&&this.alphaMap.isTexture&&(data$jscomp$0.alphaMap=this.alphaMap.toJSON(meta).uuid);this.lightMap&&this.lightMap.isTexture&&(data$jscomp$0.lightMap=this.lightMap.toJSON(meta).uuid);this.aoMap&&this.aoMap.isTexture&&(data$jscomp$0.aoMap=this.aoMap.toJSON(meta).uuid,data$jscomp$0.aoMapIntensity=this.aoMapIntensity);this.bumpMap&&this.bumpMap.isTexture&&(data$jscomp$0.bumpMap=this.bumpMap.toJSON(meta).uuid,data$jscomp$0.bumpScale=this.bumpScale);this.normalMap&&
this.normalMap.isTexture&&(data$jscomp$0.normalMap=this.normalMap.toJSON(meta).uuid,data$jscomp$0.normalMapType=this.normalMapType,data$jscomp$0.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(data$jscomp$0.displacementMap=this.displacementMap.toJSON(meta).uuid,data$jscomp$0.displacementScale=this.displacementScale,data$jscomp$0.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(data$jscomp$0.roughnessMap=this.roughnessMap.toJSON(meta).uuid);
this.metalnessMap&&this.metalnessMap.isTexture&&(data$jscomp$0.metalnessMap=this.metalnessMap.toJSON(meta).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(data$jscomp$0.emissiveMap=this.emissiveMap.toJSON(meta).uuid);this.specularMap&&this.specularMap.isTexture&&(data$jscomp$0.specularMap=this.specularMap.toJSON(meta).uuid);this.envMap&&this.envMap.isTexture&&(data$jscomp$0.envMap=this.envMap.toJSON(meta).uuid,data$jscomp$0.reflectivity=this.reflectivity,void 0!==this.combine&&(data$jscomp$0.combine=
this.combine),void 0!==this.envMapIntensity&&(data$jscomp$0.envMapIntensity=this.envMapIntensity));this.gradientMap&&this.gradientMap.isTexture&&(data$jscomp$0.gradientMap=this.gradientMap.toJSON(meta).uuid);void 0!==this.size&&(data$jscomp$0.size=this.size);void 0!==this.sizeAttenuation&&(data$jscomp$0.sizeAttenuation=this.sizeAttenuation);1!==this.blending&&(data$jscomp$0.blending=this.blending);!0===this.flatShading&&(data$jscomp$0.flatShading=this.flatShading);0!==this.side&&(data$jscomp$0.side=
this.side);0!==this.vertexColors&&(data$jscomp$0.vertexColors=this.vertexColors);1>this.opacity&&(data$jscomp$0.opacity=this.opacity);!0===this.transparent&&(data$jscomp$0.transparent=this.transparent);data$jscomp$0.depthFunc=this.depthFunc;data$jscomp$0.depthTest=this.depthTest;data$jscomp$0.depthWrite=this.depthWrite;0!==this.rotation&&(data$jscomp$0.rotation=this.rotation);!0===this.polygonOffset&&(data$jscomp$0.polygonOffset=!0);0!==this.polygonOffsetFactor&&(data$jscomp$0.polygonOffsetFactor=
this.polygonOffsetFactor);0!==this.polygonOffsetUnits&&(data$jscomp$0.polygonOffsetUnits=this.polygonOffsetUnits);1!==this.linewidth&&(data$jscomp$0.linewidth=this.linewidth);void 0!==this.dashSize&&(data$jscomp$0.dashSize=this.dashSize);void 0!==this.gapSize&&(data$jscomp$0.gapSize=this.gapSize);void 0!==this.scale&&(data$jscomp$0.scale=this.scale);!0===this.dithering&&(data$jscomp$0.dithering=!0);0<this.alphaTest&&(data$jscomp$0.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(data$jscomp$0.premultipliedAlpha=
this.premultipliedAlpha);!0===this.wireframe&&(data$jscomp$0.wireframe=this.wireframe);1<this.wireframeLinewidth&&(data$jscomp$0.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(data$jscomp$0.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(data$jscomp$0.wireframeLinejoin=this.wireframeLinejoin);!0===this.morphTargets&&(data$jscomp$0.morphTargets=!0);!0===this.skinning&&(data$jscomp$0.skinning=!0);!1===this.visible&&(data$jscomp$0.visible=!1);
"{}"!==JSON.stringify(this.userData)&&(data$jscomp$0.userData=this.userData);isRoot&&(isRoot=extractFromCache(meta.textures),meta=extractFromCache(meta.images),0<isRoot.length&&(data$jscomp$0.textures=isRoot),0<meta.length&&(data$jscomp$0.images=meta));return data$jscomp$0},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name;this.fog=source.fog;this.lights=source.lights;this.blending=source.blending;this.side=source.side;this.flatShading=source.flatShading;
this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=
source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.userData=JSON.parse(JSON.stringify(source.userData));this.clipShadows=source.clipShadows;this.clipIntersection=source.clipIntersection;var srcPlanes=source.clippingPlanes,dstPlanes=null;if(null!==srcPlanes){var n=srcPlanes.length;dstPlanes=
Array(n);for(var i=0;i!==n;++i)dstPlanes[i]=srcPlanes[i].clone()}this.clippingPlanes=dstPlanes;this.shadowSide=source.shadowSide;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=!0;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=
source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=source.extensions;return this};ShaderMaterial.prototype.toJSON=function(meta){var data=Material.prototype.toJSON.call(this,meta);data.uniforms=
{};for(var name in this.uniforms){var value=this.uniforms[name].value;data.uniforms[name]=value&&value.isTexture?{type:"t",value:value.toJSON(meta).uuid}:value&&value.isColor?{type:"c",value:value.getHex()}:value&&value.isVector2?{type:"v2",value:value.toArray()}:value&&value.isVector3?{type:"v3",value:value.toArray()}:value&&value.isVector4?{type:"v4",value:value.toArray()}:value&&value.isMatrix3?{type:"m3",value:value.toArray()}:value&&value.isMatrix4?{type:"m4",value:value.toArray()}:{value:value}}0<
Object.keys(this.defines).length&&(data.defines=this.defines);data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;meta={};for(var key in this.extensions)!0===this.extensions[key]&&(meta[key]=!0);0<Object.keys(meta).length&&(data.extensions=meta);return data};Object.assign(Ray.prototype,{set:function(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(ray){this.origin.copy(ray.origin);
this.direction.copy(ray.direction);return this},at:function(t,target){void 0===target&&(console.warn("THREE.Ray: .at() target is now required"),target=new Vector3);return target.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(v){this.direction.copy(v).sub(this.origin).normalize();return this},recast:function(){var v1=new Vector3;return function(t){this.origin.copy(this.at(t,v1));return this}}(),closestPointToPoint:function(point,target){void 0===target&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
target=new Vector3);target.subVectors(point,this.origin);point=target.dot(this.direction);return 0>point?target.copy(this.origin):target.copy(this.direction).multiplyScalar(point).add(this.origin)},distanceToPoint:function(point){return Math.sqrt(this.distanceSqToPoint(point))},distanceSqToPoint:function(){var v1=new Vector3;return function(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);if(0>directionDistance)return this.origin.distanceToSquared(point);v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);
return v1.distanceToSquared(point)}}(),distanceSqToSegment:function(){var segCenter=new Vector3,segDir=new Vector3,diff=new Vector3;return function(v0,v1,optionalPointOnRay,optionalPointOnSegment){segCenter.copy(v0).add(v1).multiplyScalar(.5);segDir.copy(v1).sub(v0).normalize();diff.copy(this.origin).sub(segCenter);var segExtent=.5*v0.distanceTo(v1),a01=-this.direction.dot(segDir),b0=diff.dot(this.direction),b1=-diff.dot(segDir),c=diff.lengthSq(),det=Math.abs(1-a01*a01);if(0<det){v0=a01*b1-b0;v1=
a01*b0-b1;var extDet=segExtent*det;0<=v0?v1>=-extDet?v1<=extDet?(segExtent=1/det,v0*=segExtent,v1*=segExtent,a01=v0*(v0+a01*v1+2*b0)+v1*(a01*v0+v1+2*b1)+c):(v1=segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):(v1=-segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=-extDet?(v0=Math.max(0,-(-a01*segExtent+b0)),v1=0<v0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=extDet?(v0=0,v1=Math.min(Math.max(-segExtent,-b1),segExtent),a01=
v1*(v1+2*b1)+c):(v0=Math.max(0,-(a01*segExtent+b0)),v1=0<v0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c)}else v1=0<a01?-segExtent:segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c;optionalPointOnRay&&optionalPointOnRay.copy(this.direction).multiplyScalar(v0).add(this.origin);optionalPointOnSegment&&optionalPointOnSegment.copy(segDir).multiplyScalar(v1).add(segCenter);return a01}}(),intersectSphere:function(){var v1=new Vector3;return function(sphere,
target){v1.subVectors(sphere.center,this.origin);var tca=v1.dot(this.direction),d2=v1.dot(v1)-tca*tca;sphere=sphere.radius*sphere.radius;if(d2>sphere)return null;sphere=Math.sqrt(sphere-d2);d2=tca-sphere;tca+=sphere;return 0>d2&&0>tca?null:0>d2?this.at(tca,target):this.at(d2,target)}}(),intersectsSphere:function(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius},distanceToPlane:function(plane){var denominator=plane.normal.dot(this.direction);if(0===denominator)return 0===
plane.distanceToPoint(this.origin)?0:null;plane=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return 0<=plane?plane:null},intersectPlane:function(plane,target){plane=this.distanceToPlane(plane);return null===plane?null:this.at(plane,target)},intersectsPlane:function(plane){var distToPoint=plane.distanceToPoint(this.origin);return 0===distToPoint||0>plane.normal.dot(this.direction)*distToPoint?!0:!1},intersectBox:function(box,target){var tmax=1/this.direction.x;var tymax=1/this.direction.y;
var invdirz=1/this.direction.z,origin=this.origin;if(0<=tmax){var tmin=(box.min.x-origin.x)*tmax;tmax*=box.max.x-origin.x}else tmin=(box.max.x-origin.x)*tmax,tmax*=box.min.x-origin.x;if(0<=tymax){var tymin=(box.min.y-origin.y)*tymax;tymax*=box.max.y-origin.y}else tymin=(box.max.y-origin.y)*tymax,tymax*=box.min.y-origin.y;if(tmin>tymax||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;0<=invdirz?(tymin=(box.min.z-origin.z)*invdirz,box=(box.max.z-origin.z)*
invdirz):(tymin=(box.max.z-origin.z)*invdirz,box=(box.min.z-origin.z)*invdirz);if(tmin>box||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(box<tmax||tmax!==tmax)tmax=box;return 0>tmax?null:this.at(0<=tmin?tmin:tmax,target)},intersectsBox:function(){var v=new Vector3;return function(box){return null!==this.intersectBox(box,v)}}(),intersectTriangle:function(){var diff=new Vector3,edge1=new Vector3,edge2=new Vector3,normal=new Vector3;return function(a,b,c,backfaceCulling,target){edge1.subVectors(b,
a);edge2.subVectors(c,a);normal.crossVectors(edge1,edge2);b=this.direction.dot(normal);if(0<b){if(backfaceCulling)return null;backfaceCulling=1}else if(0>b)backfaceCulling=-1,b=-b;else return null;diff.subVectors(this.origin,a);a=backfaceCulling*this.direction.dot(edge2.crossVectors(diff,edge2));if(0>a)return null;c=backfaceCulling*this.direction.dot(edge1.cross(diff));if(0>c||a+c>b)return null;a=-backfaceCulling*diff.dot(normal);return 0>a?null:this.at(a/b,target)}}(),applyMatrix4:function(matrix4){this.origin.applyMatrix4(matrix4);
this.direction.transformDirection(matrix4);return this},equals:function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)}});Object.assign(Triangle,{getNormal:function(){var v0=new Vector3;return function(a,b,c,target){void 0===target&&(console.warn("THREE.Triangle: .getNormal() target is now required"),target=new Vector3);target.subVectors(c,b);v0.subVectors(a,b);target.cross(v0);a=target.lengthSq();return 0<a?target.multiplyScalar(1/Math.sqrt(a)):target.set(0,0,0)}}(),
getBarycoord:function(){var v0=new Vector3,v1=new Vector3,v2=new Vector3;return function(point,a,b,c,target){v0.subVectors(c,a);v1.subVectors(b,a);v2.subVectors(point,a);point=v0.dot(v0);a=v0.dot(v1);b=v0.dot(v2);var dot11=v1.dot(v1);c=v1.dot(v2);var denom=point*dot11-a*a;void 0===target&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),target=new Vector3);if(0===denom)return target.set(-2,-1,-1);denom=1/denom;dot11=(dot11*b-a*c)*denom;point=(point*c-a*b)*denom;return target.set(1-
dot11-point,point,dot11)}}(),containsPoint:function(){var v1=new Vector3;return function(point,a,b,c){Triangle.getBarycoord(point,a,b,c,v1);return 0<=v1.x&&0<=v1.y&&1>=v1.x+v1.y}}(),getUV:function(){var barycoord=new Vector3;return function(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,barycoord);target.set(0,0);target.addScaledVector(uv1,barycoord.x);target.addScaledVector(uv2,barycoord.y);target.addScaledVector(uv3,barycoord.z);return target}}()});Object.assign(Triangle.prototype,
{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this},getArea:function(){var v0=new Vector3,v1=new Vector3;return function(){v0.subVectors(this.c,this.b);v1.subVectors(this.a,
this.b);return.5*v0.cross(v1).length()}}(),getMidpoint:function(target){void 0===target&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),target=new Vector3);return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(target){return Triangle.getNormal(this.a,this.b,this.c,target)},getPlane:function(target){void 0===target&&(console.warn("THREE.Triangle: .getPlane() target is now required"),target=new Vector3);return target.setFromCoplanarPoints(this.a,
this.b,this.c)},getBarycoord:function(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target)},containsPoint:function(point){return Triangle.containsPoint(point,this.a,this.b,this.c)},getUV:function(point,uv1,uv2,uv3,result){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,result)},intersectsBox:function(box){return box.intersectsTriangle(this)},closestPointToPoint:function(){var vab=new Vector3,vac=new Vector3,vbc=new Vector3,vap=new Vector3,vbp=new Vector3,vcp=
new Vector3;return function(p,target){void 0===target&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),target=new Vector3);var a=this.a,b=this.b,c=this.c;vab.subVectors(b,a);vac.subVectors(c,a);vap.subVectors(p,a);var d1=vab.dot(vap),d2=vac.dot(vap);if(0>=d1&&0>=d2)return target.copy(a);vbp.subVectors(p,b);var d3=vab.dot(vbp),d4=vac.dot(vbp);if(0<=d3&&d4<=d3)return target.copy(b);var w=d1*d4-d3*d2;if(0>=w&&0<=d1&&0>=d3)return b=d1/(d1-d3),target.copy(a).addScaledVector(vab,
b);vcp.subVectors(p,c);p=vab.dot(vcp);var d6=vac.dot(vcp);if(0<=d6&&p<=d6)return target.copy(c);d1=p*d2-d1*d6;if(0>=d1&&0<=d2&&0>=d6)return w=d2/(d2-d6),target.copy(a).addScaledVector(vac,w);d2=d3*d6-p*d4;if(0>=d2&&0<=d4-d3&&0<=p-d6)return vbc.subVectors(c,b),w=(d4-d3)/(d4-d3+(p-d6)),target.copy(b).addScaledVector(vbc,w);c=1/(d2+d1+w);b=d1*c;w*=c;return target.copy(a).addScaledVector(vab,b).addScaledVector(vac,w)}}(),equals:function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&
triangle.c.equals(this.c)}});MeshBasicMaterial.prototype=Object.create(Material.prototype);MeshBasicMaterial.prototype.constructor=MeshBasicMaterial;MeshBasicMaterial.prototype.isMeshBasicMaterial=!0;MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=
source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this};Mesh.prototype=Object.assign(Object.create(Object3D.prototype),
{constructor:Mesh,isMesh:!0,setDrawMode:function(value){this.drawMode=value},copy:function(source){Object3D.prototype.copy.call(this,source);this.drawMode=source.drawMode;void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice());void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary));return this},updateMorphTargets:function(){var geometry=this.geometry;if(geometry.isBufferGeometry){geometry=geometry.morphAttributes;
var ml=Object.keys(geometry);if(0<ml.length){var morphAttribute=geometry[ml[0]];if(void 0!==morphAttribute)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},geometry=0,ml=morphAttribute.length;geometry<ml;geometry++){var name=morphAttribute[geometry].name||String(geometry);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=geometry}}}else geometry=geometry.morphTargets,void 0!==geometry&&0<geometry.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},
raycast:function(){function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){if(null===(1===material.side?ray.intersectTriangle(pC,pB,pA,!0,point):ray.intersectTriangle(pA,pB,pC,2!==material.side,point)))return null;intersectionPointWorld.copy(point);intersectionPointWorld.applyMatrix4(object.matrixWorld);material=raycaster.ray.origin.distanceTo(intersectionPointWorld);return material<raycaster.near||material>raycaster.far?null:{distance:material,point:intersectionPointWorld.clone(),
object:object}}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,uv,a,b,c){vA.fromBufferAttribute(position,a);vB.fromBufferAttribute(position,b);vC.fromBufferAttribute(position,c);if(object=checkIntersection(object,material,raycaster,ray,vA,vB,vC,intersectionPoint))uv&&(uvA.fromBufferAttribute(uv,a),uvB.fromBufferAttribute(uv,b),uvC.fromBufferAttribute(uv,c),object.uv=Triangle.getUV(intersectionPoint,vA,vB,vC,uvA,uvB,uvC,new Vector2)),uv=new Face3(a,b,c),Triangle.getNormal(vA,
vB,vC,uv.normal),object.face=uv;return object}var inverseMatrix=new Matrix4,ray$jscomp$0=new Ray,sphere=new Sphere,vA=new Vector3,vB=new Vector3,vC=new Vector3,tempA=new Vector3,tempB=new Vector3,tempC=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,intersectionPoint=new Vector3,intersectionPointWorld=new Vector3;return function(raycaster,intersects){var geometry=this.geometry,material=this.material,matrixWorld=this.matrixWorld;if(void 0!==material&&(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),
sphere.copy(geometry.boundingSphere),sphere.applyMatrix4(matrixWorld),!1!==raycaster.ray.intersectsSphere(sphere)&&(inverseMatrix.getInverse(matrixWorld),ray$jscomp$0.copy(raycaster.ray).applyMatrix4(inverseMatrix),null===geometry.boundingBox||!1!==ray$jscomp$0.intersectsBox(geometry.boundingBox))))if(geometry.isBufferGeometry){var index=geometry.index,position=geometry.attributes.position,uv=geometry.attributes.uv,groups=geometry.groups;geometry=geometry.drawRange;var il,jl;if(null!==index)if(Array.isArray(material)){var i=
0;for(il=groups.length;i<il;i++){var group=groups[i];var groupMaterial=material[group.materialIndex];var j=Math.max(group.start,geometry.start);for(jl=matrixWorld=Math.min(group.start+group.count,geometry.start+geometry.count);j<jl;j+=3){matrixWorld=index.getX(j);var b=index.getX(j+1);var c=index.getX(j+2);if(matrixWorld=checkBufferGeometryIntersection(this,groupMaterial,raycaster,ray$jscomp$0,position,uv,matrixWorld,b,c))matrixWorld.faceIndex=Math.floor(j/3),matrixWorld.face.materialIndex=group.materialIndex,
intersects.push(matrixWorld)}}}else for(j=Math.max(0,geometry.start),matrixWorld=Math.min(index.count,geometry.start+geometry.count),i=j,il=matrixWorld;i<il;i+=3){if(matrixWorld=index.getX(i),b=index.getX(i+1),c=index.getX(i+2),matrixWorld=checkBufferGeometryIntersection(this,material,raycaster,ray$jscomp$0,position,uv,matrixWorld,b,c))matrixWorld.faceIndex=Math.floor(i/3),intersects.push(matrixWorld)}else if(void 0!==position)if(Array.isArray(material))for(i=0,il=groups.length;i<il;i++)for(group=
groups[i],groupMaterial=material[group.materialIndex],j=Math.max(group.start,geometry.start),jl=matrixWorld=Math.min(group.start+group.count,geometry.start+geometry.count);j<jl;j+=3){if(matrixWorld=j,b=j+1,c=j+2,matrixWorld=checkBufferGeometryIntersection(this,groupMaterial,raycaster,ray$jscomp$0,position,uv,matrixWorld,b,c))matrixWorld.faceIndex=Math.floor(j/3),matrixWorld.face.materialIndex=group.materialIndex,intersects.push(matrixWorld)}else for(j=Math.max(0,geometry.start),matrixWorld=Math.min(position.count,
geometry.start+geometry.count),i=j,il=matrixWorld;i<il;i+=3)if(matrixWorld=i,b=i+1,c=i+2,matrixWorld=checkBufferGeometryIntersection(this,material,raycaster,ray$jscomp$0,position,uv,matrixWorld,b,c))matrixWorld.faceIndex=Math.floor(i/3),intersects.push(matrixWorld)}else if(geometry.isGeometry)for(position=Array.isArray(material),uv=geometry.vertices,groups=geometry.faces,matrixWorld=geometry.faceVertexUvs[0],0<matrixWorld.length&&(index=matrixWorld),groupMaterial=0,j=groups.length;groupMaterial<j;groupMaterial++)if(jl=
groups[groupMaterial],matrixWorld=position?material[jl.materialIndex]:material,void 0!==matrixWorld){i=uv[jl.a];il=uv[jl.b];group=uv[jl.c];if(!0===matrixWorld.morphTargets){b=geometry.morphTargets;c=this.morphTargetInfluences;vA.set(0,0,0);vB.set(0,0,0);vC.set(0,0,0);for(var t=0,tl=b.length;t<tl;t++){var influence=c[t];if(0!==influence){var targets=b[t].vertices;vA.addScaledVector(tempA.subVectors(targets[jl.a],i),influence);vB.addScaledVector(tempB.subVectors(targets[jl.b],il),influence);vC.addScaledVector(tempC.subVectors(targets[jl.c],
group),influence)}}vA.add(i);vB.add(il);vC.add(group);i=vA;il=vB;group=vC}if(matrixWorld=checkIntersection(this,matrixWorld,raycaster,ray$jscomp$0,i,il,group,intersectionPoint))index&&index[groupMaterial]&&(b=index[groupMaterial],uvA.copy(b[0]),uvB.copy(b[1]),uvC.copy(b[2]),matrixWorld.uv=Triangle.getUV(intersectionPoint,i,il,group,uvA,uvB,uvC,new Vector2)),matrixWorld.face=jl,matrixWorld.faceIndex=groupMaterial,intersects.push(matrixWorld)}}}(),clone:function(){return(new this.constructor(this.geometry,
this.material)).copy(this)}});CubeTexture.prototype=Object.create(Texture.prototype);CubeTexture.prototype.constructor=CubeTexture;CubeTexture.prototype.isCubeTexture=!0;Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(value){this.image=value}});DataTexture3D.prototype=Object.create(Texture.prototype);DataTexture3D.prototype.constructor=DataTexture3D;DataTexture3D.prototype.isDataTexture3D=!0;var emptyTexture=new Texture,emptyTexture3d=new DataTexture3D,
emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);PureArrayUniform.prototype.updateCache=function(data){var cache=this.cache;data instanceof Float32Array&&cache.length!==data.length&&(this.cache=new Float32Array(data.length));copyArray(cache,data)};StructuredUniform.prototype.setValue=function(gl,value,renderer){for(var seq=this.seq,i=0,n=seq.length;i!==n;++i){var u=seq[i];u.setValue(gl,value[u.id],
renderer)}};var RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;WebGLUniforms.prototype.setValue=function(gl,name,value){name=this.map[name];void 0!==name&&name.setValue(gl,value,this.renderer)};WebGLUniforms.prototype.setOptional=function(gl,object,name){object=object[name];void 0!==object&&this.setValue(gl,name,object)};WebGLUniforms.upload=function(gl,seq,values,renderer){for(var i=0,n=seq.length;i!==n;++i){var u=seq[i],v=values[u.id];!1!==v.needsUpdate&&u.setValue(gl,v.value,renderer)}};WebGLUniforms.seqWithValue=
function(seq,values){for(var r=[],i=0,n=seq.length;i!==n;++i){var u=seq[i];u.id in values&&r.push(u)}return r};var programIdCount=0,count$jscomp$0=0;MeshDepthMaterial.prototype=Object.create(Material.prototype);MeshDepthMaterial.prototype.constructor=MeshDepthMaterial;MeshDepthMaterial.prototype.isMeshDepthMaterial=!0;MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;
this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this};MeshDistanceMaterial.prototype=Object.create(Material.prototype);MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial;MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0;MeshDistanceMaterial.prototype.copy=
function(source){Material.prototype.copy.call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this};Group.prototype=Object.assign(Object.create(Object3D.prototype),
{constructor:Group,isGroup:!0});Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this},getWorldDirection:function(target){void 0===target&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),
target=new Vector3);this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(source,recursive){Camera.prototype.copy.call(this,
source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=null===source.view?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this},setFocalLength:function(focalLength){focalLength=.5*this.getFilmHeight()/focalLength;this.fov=2*_Math.RAD2DEG*Math.atan(focalLength);this.updateProjectionMatrix()},getFocalLength:function(){var vExtentSlope=
Math.tan(.5*_Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/vExtentSlope},getEffectiveFOV:function(){return 2*_Math.RAD2DEG*Math.atan(Math.tan(.5*_Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,
offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var near=this.near,top=near*Math.tan(.5*_Math.DEG2RAD*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-.5*width,view=this.view;
if(null!==this.view&&this.view.enabled){var fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight}view=this.filmOffset;0!==view&&(left+=near*view/this.getFilmWidth());this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,
meta);meta.object.fov=this.fov;meta.object.zoom=this.zoom;meta.object.near=this.near;meta.object.far=this.far;meta.object.focus=this.focus;meta.object.aspect=this.aspect;null!==this.view&&(meta.object.view=Object.assign({},this.view));meta.object.filmGauge=this.filmGauge;meta.object.filmOffset=this.filmOffset;return meta}});ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0});var cameraLPos=new Vector3,cameraRPos=new Vector3;Object.assign(FogExp2.prototype,
{isFogExp2:!0,clone:function(){return new FogExp2(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});Object.assign(Fog.prototype,{isFog:!0,clone:function(){return new Fog(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:!0,copy:function(source,recursive){Object3D.prototype.copy.call(this,
source,recursive);null!==source.background&&(this.background=source.background.clone());null!==source.fog&&(this.fog=source.fog.clone());null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone());this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);null!==this.background&&(data.object.background=this.background.toJSON(meta));null!==this.fog&&(data.object.fog=
this.fog.toJSON());return data},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(array){if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==array?array.length/this.stride:0;this.array=array;return this},
setDynamic:function(value){this.dynamic=value;return this},copy:function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.dynamic=source.dynamic;return this},copyAt:function(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(var i=0,l=this.stride;i<l;i++)this.array[index1+i]=attribute.array[index2+i];return this},set:function(value,offset){void 0===offset&&(offset=0);this.array.set(value,offset);return this},
clone:function(){return(new this.constructor).copy(this)},onUpload:function(callback){this.onUploadCallback=callback;return this}});Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,setX:function(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this},setY:function(index,y){this.data.array[index*
this.data.stride+this.offset+1]=y;return this},setZ:function(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this},setW:function(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this},getX:function(index){return this.data.array[index*this.data.stride+this.offset]},getY:function(index){return this.data.array[index*this.data.stride+this.offset+1]},getZ:function(index){return this.data.array[index*this.data.stride+this.offset+2]},getW:function(index){return this.data.array[index*
this.data.stride+this.offset+3]},setXY:function(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this},setXYZ:function(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this},setXYZW:function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+
3]=w;return this}});SpriteMaterial.prototype=Object.create(Material.prototype);SpriteMaterial.prototype.constructor=SpriteMaterial;SpriteMaterial.prototype.isSpriteMaterial=!0;SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this};var geometry;Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,
raycast:function(){function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){alignedPosition.subVectors(vertexPosition,center).addScalar(.5).multiply(scale);void 0!==sin?(rotatedPosition.x=cos*alignedPosition.x-sin*alignedPosition.y,rotatedPosition.y=sin*alignedPosition.x+cos*alignedPosition.y):rotatedPosition.copy(alignedPosition);vertexPosition.copy(mvPosition);vertexPosition.x+=rotatedPosition.x;vertexPosition.y+=rotatedPosition.y;vertexPosition.applyMatrix4(viewWorldMatrix)}var intersectPoint=
new Vector3,worldScale=new Vector3,mvPosition=new Vector3,alignedPosition=new Vector2,rotatedPosition=new Vector2,viewWorldMatrix=new Matrix4,vA=new Vector3,vB=new Vector3,vC=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2;return function(raycaster,intersects){worldScale.setFromMatrixScale(this.matrixWorld);viewWorldMatrix.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld);mvPosition.setFromMatrixPosition(this.modelViewMatrix);var rotation=this.material.rotation;if(0!==rotation){var cos=
Math.cos(rotation);var sin=Math.sin(rotation)}rotation=this.center;transformVertex(vA.set(-.5,-.5,0),mvPosition,rotation,worldScale,sin,cos);transformVertex(vB.set(.5,-.5,0),mvPosition,rotation,worldScale,sin,cos);transformVertex(vC.set(.5,.5,0),mvPosition,rotation,worldScale,sin,cos);uvA.set(0,0);uvB.set(1,0);uvC.set(1,1);var intersect=raycaster.ray.intersectTriangle(vA,vB,vC,!1,intersectPoint);if(null===intersect&&(transformVertex(vB.set(-.5,.5,0),mvPosition,rotation,worldScale,sin,cos),uvB.set(0,
1),intersect=raycaster.ray.intersectTriangle(vA,vC,vB,!1,intersectPoint),null===intersect))return;sin=raycaster.ray.origin.distanceTo(intersectPoint);sin<raycaster.near||sin>raycaster.far||intersects.push({distance:sin,point:intersectPoint.clone(),uv:Triangle.getUV(intersectPoint,vA,vB,vC,uvA,uvB,uvC,new Vector2),face:null,object:this})}}(),clone:function(){return(new this.constructor(this.material)).copy(this)},copy:function(source){Object3D.prototype.copy.call(this,source);void 0!==source.center&&
this.center.copy(source.center);return this}});LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,copy:function(source){Object3D.prototype.copy.call(this,source,!1);source=source.levels;for(var i=0,l=source.length;i<l;i++){var level=source[i];this.addLevel(level.object.clone(),level.distance)}return this},addLevel:function(object,distance){void 0===distance&&(distance=0);distance=Math.abs(distance);for(var levels=this.levels,l=0;l<levels.length&&!(distance<levels[l].distance);l++);
levels.splice(l,0,{distance:distance,object:object});this.add(object)},getObjectForDistance:function(distance){for(var levels=this.levels,i=1,l=levels.length;i<l&&!(distance<levels[i].distance);i++);return levels[i-1].object},raycast:function(){var matrixPosition=new Vector3;return function(raycaster,intersects){matrixPosition.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(matrixPosition);this.getObjectForDistance(distance).raycast(raycaster,intersects)}}(),update:function(){var v1=
new Vector3,v2=new Vector3;return function(camera){var levels=this.levels;if(1<levels.length){v1.setFromMatrixPosition(camera.matrixWorld);v2.setFromMatrixPosition(this.matrixWorld);camera=v1.distanceTo(v2);levels[0].object.visible=!0;for(var i=1,l=levels.length;i<l;i++)if(camera>=levels[i].distance)levels[i-1].object.visible=!1,levels[i].object.visible=!0;else break;for(;i<l;i++)levels[i].object.visible=!1}}}(),toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.levels=
[];for(var levels=this.levels,i=0,l=levels.length;i<l;i++){var level=levels[i];meta.object.levels.push({object:level.object.uuid,distance:level.distance})}return meta}});SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,bind:function(skeleton,bindMatrix){this.skeleton=skeleton;void 0===bindMatrix&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),bindMatrix=this.matrixWorld);this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.getInverse(bindMatrix)},
pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var vector=new Vector4,skinWeight=this.geometry.attributes.skinWeight,i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);var scale=1/vector.manhattanLength();Infinity!==scale?vector.multiplyScalar(scale):vector.set(1,0,0,0);skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w)}},updateMatrixWorld:function(force){Mesh.prototype.updateMatrixWorld.call(this,
force);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var i=0,il=this.bones.length;i<il;i++){var inverse=new Matrix4;this.bones[i]&&inverse.getInverse(this.bones[i].matrixWorld);
this.boneInverses.push(inverse)}},pose:function(){var bone,il;var i=0;for(il=this.bones.length;i<il;i++)(bone=this.bones[i])&&bone.matrixWorld.getInverse(this.boneInverses[i]);i=0;for(il=this.bones.length;i<il;i++)if(bone=this.bones[i])bone.parent&&bone.parent.isBone?(bone.matrix.getInverse(bone.parent.matrixWorld),bone.matrix.multiply(bone.matrixWorld)):bone.matrix.copy(bone.matrixWorld),bone.matrix.decompose(bone.position,bone.quaternion,bone.scale)},update:function(){var offsetMatrix=new Matrix4,
identityMatrix=new Matrix4;return function(){for(var bones=this.bones,boneInverses=this.boneInverses,boneMatrices=this.boneMatrices,boneTexture=this.boneTexture,i=0,il=bones.length;i<il;i++)offsetMatrix.multiplyMatrices(bones[i]?bones[i].matrixWorld:identityMatrix,boneInverses[i]),offsetMatrix.toArray(boneMatrices,16*i);void 0!==boneTexture&&(boneTexture.needsUpdate=!0)}}(),clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(name){for(var i=0,il=this.bones.length;i<
il;i++){var bone=this.bones[i];if(bone.name===name)return bone}}});Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0});LineBasicMaterial.prototype=Object.create(Material.prototype);LineBasicMaterial.prototype.constructor=LineBasicMaterial;LineBasicMaterial.prototype.isLineBasicMaterial=!0;LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;
this.linejoin=source.linejoin;return this};Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,computeLineDistances:function(){var start=new Vector3,end=new Vector3;return function(){var geometry=this.geometry;if(geometry.isBufferGeometry)if(null===geometry.index){for(var positionAttribute=geometry.attributes.position,lineDistances=[0],i=1,l=positionAttribute.count;i<l;i++)start.fromBufferAttribute(positionAttribute,i-1),end.fromBufferAttribute(positionAttribute,
i),lineDistances[i]=lineDistances[i-1],lineDistances[i]+=start.distanceTo(end);geometry.addAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(geometry.isGeometry)for(positionAttribute=geometry.vertices,lineDistances=geometry.lineDistances,lineDistances[0]=0,i=1,l=positionAttribute.length;i<l;i++)lineDistances[i]=lineDistances[i-1],lineDistances[i]+=positionAttribute[i-
1].distanceTo(positionAttribute[i]);return this}}(),raycast:function(){var inverseMatrix=new Matrix4,ray=new Ray,sphere=new Sphere;return function(raycaster,intersects){var precision=raycaster.linePrecision,geometry=this.geometry,matrixWorld=this.matrixWorld;null===geometry.boundingSphere&&geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(matrixWorld);sphere.radius+=precision;if(!1!==raycaster.ray.intersectsSphere(sphere)){inverseMatrix.getInverse(matrixWorld);
ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);precision/=(this.scale.x+this.scale.y+this.scale.z)/3;precision*=precision;var vStart=new Vector3,vEnd=new Vector3;matrixWorld=new Vector3;var interRay=new Vector3,step=this&&this.isLineSegments?2:1;if(geometry.isBufferGeometry){var index=geometry.index,positions=geometry.attributes.position.array;if(null!==index){index=index.array;geometry=0;for(var l=index.length-1;geometry<l;geometry+=step){var b=index[geometry+1];vStart.fromArray(positions,3*
index[geometry]);vEnd.fromArray(positions,3*b);b=ray.distanceSqToSegment(vStart,vEnd,interRay,matrixWorld);b>precision||(interRay.applyMatrix4(this.matrixWorld),b=raycaster.ray.origin.distanceTo(interRay),b<raycaster.near||b>raycaster.far||intersects.push({distance:b,point:matrixWorld.clone().applyMatrix4(this.matrixWorld),index:geometry,face:null,faceIndex:null,object:this}))}}else for(geometry=0,l=positions.length/3-1;geometry<l;geometry+=step)vStart.fromArray(positions,3*geometry),vEnd.fromArray(positions,
3*geometry+3),b=ray.distanceSqToSegment(vStart,vEnd,interRay,matrixWorld),b>precision||(interRay.applyMatrix4(this.matrixWorld),b=raycaster.ray.origin.distanceTo(interRay),b<raycaster.near||b>raycaster.far||intersects.push({distance:b,point:matrixWorld.clone().applyMatrix4(this.matrixWorld),index:geometry,face:null,faceIndex:null,object:this}))}else if(geometry.isGeometry)for(vStart=geometry.vertices,vEnd=vStart.length,geometry=0;geometry<vEnd-1;geometry+=step)b=ray.distanceSqToSegment(vStart[geometry],
vStart[geometry+1],interRay,matrixWorld),b>precision||(interRay.applyMatrix4(this.matrixWorld),b=raycaster.ray.origin.distanceTo(interRay),b<raycaster.near||b>raycaster.far||intersects.push({distance:b,point:matrixWorld.clone().applyMatrix4(this.matrixWorld),index:geometry,face:null,faceIndex:null,object:this}))}}}(),copy:function(source){Object3D.prototype.copy.call(this,source);this.geometry.copy(source.geometry);this.material.copy(source.material);return this},clone:function(){return(new this.constructor).copy(this)}});
LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){var start=new Vector3,end=new Vector3;return function(){var geometry=this.geometry;if(geometry.isBufferGeometry)if(null===geometry.index){for(var positionAttribute=geometry.attributes.position,lineDistances=[],i=0,l=positionAttribute.count;i<l;i+=2)start.fromBufferAttribute(positionAttribute,i),end.fromBufferAttribute(positionAttribute,i+1),lineDistances[i]=
0===i?0:lineDistances[i-1],lineDistances[i+1]=lineDistances[i]+start.distanceTo(end);geometry.addAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(geometry.isGeometry)for(positionAttribute=geometry.vertices,lineDistances=geometry.lineDistances,i=0,l=positionAttribute.length;i<l;i+=2)start.copy(positionAttribute[i]),end.copy(positionAttribute[i+1]),
lineDistances[i]=0===i?0:lineDistances[i-1],lineDistances[i+1]=lineDistances[i]+start.distanceTo(end);return this}}()});LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0});PointsMaterial.prototype=Object.create(Material.prototype);PointsMaterial.prototype.constructor=PointsMaterial;PointsMaterial.prototype.isPointsMaterial=!0;PointsMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=
source.map;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this};Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,raycast:function(){var inverseMatrix=new Matrix4,ray=new Ray,sphere=new Sphere;return function(raycaster,intersects){function testPoint(point,index){var rayPointDistanceSq=ray.distanceSqToPoint(point);rayPointDistanceSq<localThresholdSq&&(ray.closestPointToPoint(point,intersectPoint),
intersectPoint.applyMatrix4(matrixWorld),point=raycaster.ray.origin.distanceTo(intersectPoint),point<raycaster.near||point>raycaster.far||intersects.push({distance:point,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint.clone(),index:index,face:null,object:object}))}var object=this,geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Points.threshold;null===geometry.boundingSphere&&geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(matrixWorld);
sphere.radius+=threshold;if(!1!==raycaster.ray.intersectsSphere(sphere)){inverseMatrix.getInverse(matrixWorld);ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);threshold/=(this.scale.x+this.scale.y+this.scale.z)/3;var localThresholdSq=threshold*threshold;threshold=new Vector3;var intersectPoint=new Vector3;if(geometry.isBufferGeometry){var index$jscomp$0=geometry.index;geometry=geometry.attributes.position.array;if(null!==index$jscomp$0){var indices=index$jscomp$0.array;index$jscomp$0=0;for(var il=
indices.length;index$jscomp$0<il;index$jscomp$0++){var a=indices[index$jscomp$0];threshold.fromArray(geometry,3*a);testPoint(threshold,a)}}else for(index$jscomp$0=0,indices=geometry.length/3;index$jscomp$0<indices;index$jscomp$0++)threshold.fromArray(geometry,3*index$jscomp$0),testPoint(threshold,index$jscomp$0)}else for(threshold=geometry.vertices,index$jscomp$0=0,indices=threshold.length;index$jscomp$0<indices;index$jscomp$0++)testPoint(threshold[index$jscomp$0],index$jscomp$0)}}}(),clone:function(){return(new this.constructor(this.geometry,
this.material)).copy(this)}});VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){var video=this.image;video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});CompressedTexture.prototype=Object.create(Texture.prototype);CompressedTexture.prototype.constructor=CompressedTexture;CompressedTexture.prototype.isCompressedTexture=!0;CanvasTexture.prototype=Object.create(Texture.prototype);CanvasTexture.prototype.constructor=
CanvasTexture;CanvasTexture.prototype.isCanvasTexture=!0;DepthTexture.prototype=Object.create(Texture.prototype);DepthTexture.prototype.constructor=DepthTexture;DepthTexture.prototype.isDepthTexture=!0;WireframeGeometry.prototype=Object.create(BufferGeometry.prototype);WireframeGeometry.prototype.constructor=WireframeGeometry;ParametricGeometry.prototype=Object.create(Geometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype);
ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry;PolyhedronGeometry.prototype=Object.create(Geometry.prototype);PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;TetrahedronGeometry.prototype=Object.create(Geometry.prototype);TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;TetrahedronBufferGeometry.prototype=
Object.create(PolyhedronBufferGeometry.prototype);TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;OctahedronGeometry.prototype=Object.create(Geometry.prototype);OctahedronGeometry.prototype.constructor=OctahedronGeometry;OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;IcosahedronGeometry.prototype=Object.create(Geometry.prototype);IcosahedronGeometry.prototype.constructor=
IcosahedronGeometry;IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;DodecahedronGeometry.prototype=Object.create(Geometry.prototype);DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;TubeGeometry.prototype=Object.create(Geometry.prototype);
TubeGeometry.prototype.constructor=TubeGeometry;TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TubeBufferGeometry.prototype.constructor=TubeBufferGeometry;TubeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data};TorusKnotGeometry.prototype=Object.create(Geometry.prototype);TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype);
TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;TorusGeometry.prototype=Object.create(Geometry.prototype);TorusGeometry.prototype.constructor=TorusGeometry;TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;var Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length,outerNode=linkedList(data,0,outerLen,
dim,!0),triangles=[];if(!outerNode)return triangles;var maxX;if(hasHoles){var dim$jscomp$0=dim;hasHoles=[];var len;var x=0;for(len=holeIndices.length;x<len;x++){var start=holeIndices[x]*dim$jscomp$0;var end=x<len-1?holeIndices[x+1]*dim$jscomp$0:data.length;start=linkedList(data,start,end,dim$jscomp$0,!1);start===start.next&&(start.steiner=!0);end=hasHoles;var JSCompiler_temp_const=end.push,p=start,leftmost=start;do p.x<leftmost.x&&(leftmost=p),p=p.next;while(p!==start);JSCompiler_temp_const.call(end,
leftmost)}hasHoles.sort(compareX);for(x=0;x<hasHoles.length;x++){holeIndices=hasHoles[x];dim$jscomp$0=outerNode;if(dim$jscomp$0=findHoleBridge(holeIndices,dim$jscomp$0))holeIndices=splitPolygon(dim$jscomp$0,holeIndices),filterPoints(holeIndices,holeIndices.next);outerNode=filterPoints(outerNode,outerNode.next)}}if(data.length>80*dim){var minX=maxX=data[0];var minY=hasHoles=data[1];for(dim$jscomp$0=dim;dim$jscomp$0<outerLen;dim$jscomp$0+=dim)x=data[dim$jscomp$0],holeIndices=data[dim$jscomp$0+1],x<
minX&&(minX=x),holeIndices<minY&&(minY=holeIndices),x>maxX&&(maxX=x),holeIndices>hasHoles&&(hasHoles=holeIndices);maxX=Math.max(maxX-minX,hasHoles-minY);maxX=0!==maxX?1/maxX:0}earcutLinked(outerNode,triangles,dim,minX,minY,maxX);return triangles}},ShapeUtils={area:function(contour){for(var n=contour.length,a=0,p=n-1,q=0;q<n;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a},isClockWise:function(pts){return 0>ShapeUtils.area(pts)},triangulateShape:function(contour,holes){var vertices=
[],holeIndices=[],faces=[];removeDupEndPts(contour);addContour(vertices,contour);var holeIndex=contour.length;holes.forEach(removeDupEndPts);for(contour=0;contour<holes.length;contour++)holeIndices.push(holeIndex),holeIndex+=holes[contour].length,addContour(vertices,holes[contour]);holes=Earcut.triangulate(vertices,holeIndices);for(contour=0;contour<holes.length;contour+=3)faces.push(holes.slice(contour,contour+3));return faces}};ExtrudeGeometry.prototype=Object.create(Geometry.prototype);ExtrudeGeometry.prototype.constructor=
ExtrudeGeometry;ExtrudeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,data)};ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry;ExtrudeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,data)};var WorldUVGenerator=
{generateTopUV:function(geometry,vertices,indexA,indexB,indexC){geometry=vertices[3*indexB];indexB=vertices[3*indexB+1];var c_x=vertices[3*indexC];indexC=vertices[3*indexC+1];return[new Vector2(vertices[3*indexA],vertices[3*indexA+1]),new Vector2(geometry,indexB),new Vector2(c_x,indexC)]},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){geometry=vertices[3*indexA];var a_y=vertices[3*indexA+1];indexA=vertices[3*indexA+2];var b_x=vertices[3*indexB],b_y=vertices[3*indexB+1];
indexB=vertices[3*indexB+2];var c_x=vertices[3*indexC],c_y=vertices[3*indexC+1];indexC=vertices[3*indexC+2];var d_x=vertices[3*indexD],d_y=vertices[3*indexD+1];vertices=vertices[3*indexD+2];return.01>Math.abs(a_y-b_y)?[new Vector2(geometry,1-indexA),new Vector2(b_x,1-indexB),new Vector2(c_x,1-indexC),new Vector2(d_x,1-vertices)]:[new Vector2(a_y,1-indexA),new Vector2(b_y,1-indexB),new Vector2(c_y,1-indexC),new Vector2(d_y,1-vertices)]}};TextGeometry.prototype=Object.create(Geometry.prototype);TextGeometry.prototype.constructor=
TextGeometry;TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype);TextBufferGeometry.prototype.constructor=TextBufferGeometry;SphereGeometry.prototype=Object.create(Geometry.prototype);SphereGeometry.prototype.constructor=SphereGeometry;SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype);SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;RingGeometry.prototype=Object.create(Geometry.prototype);RingGeometry.prototype.constructor=RingGeometry;RingBufferGeometry.prototype=
Object.create(BufferGeometry.prototype);RingBufferGeometry.prototype.constructor=RingBufferGeometry;LatheGeometry.prototype=Object.create(Geometry.prototype);LatheGeometry.prototype.constructor=LatheGeometry;LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype);LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;ShapeGeometry.prototype=Object.create(Geometry.prototype);ShapeGeometry.prototype.constructor=ShapeGeometry;ShapeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);
return toJSON$1(this.parameters.shapes,data)};ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry;ShapeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);return toJSON$1(this.parameters.shapes,data)};EdgesGeometry.prototype=Object.create(BufferGeometry.prototype);EdgesGeometry.prototype.constructor=EdgesGeometry;CylinderGeometry.prototype=Object.create(Geometry.prototype);CylinderGeometry.prototype.constructor=
CylinderGeometry;CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;ConeGeometry.prototype=Object.create(CylinderGeometry.prototype);ConeGeometry.prototype.constructor=ConeGeometry;ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype);ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;CircleGeometry.prototype=Object.create(Geometry.prototype);CircleGeometry.prototype.constructor=
CircleGeometry;CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=Object.freeze({WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,
IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,
SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,
CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry});ShadowMaterial.prototype=Object.create(Material.prototype);ShadowMaterial.prototype.constructor=ShadowMaterial;ShadowMaterial.prototype.isShadowMaterial=!0;ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);return this};
RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype);RawShaderMaterial.prototype.constructor=RawShaderMaterial;RawShaderMaterial.prototype.isRawShaderMaterial=!0;MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=!0;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={STANDARD:""};this.color.copy(source.color);
this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);
this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=
source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={PHYSICAL:""};this.reflectivity=source.reflectivity;
this.clearCoat=source.clearCoat;this.clearCoatRoughness=source.clearCoatRoughness;return this};MeshPhongMaterial.prototype=Object.create(Material.prototype);MeshPhongMaterial.prototype.constructor=MeshPhongMaterial;MeshPhongMaterial.prototype.isMeshPhongMaterial=!0;MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;
this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=
source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;
return this};MeshToonMaterial.prototype=Object.create(MeshPhongMaterial.prototype);MeshToonMaterial.prototype.constructor=MeshToonMaterial;MeshToonMaterial.prototype.isMeshToonMaterial=!0;MeshToonMaterial.prototype.copy=function(source){MeshPhongMaterial.prototype.copy.call(this,source);this.gradientMap=source.gradientMap;return this};MeshNormalMaterial.prototype=Object.create(Material.prototype);MeshNormalMaterial.prototype.constructor=MeshNormalMaterial;MeshNormalMaterial.prototype.isMeshNormalMaterial=
!0;MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=
source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshLambertMaterial.prototype=Object.create(Material.prototype);MeshLambertMaterial.prototype.constructor=MeshLambertMaterial;MeshLambertMaterial.prototype.isMeshLambertMaterial=!0;MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;
this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;
this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshMatcapMaterial.prototype=Object.create(Material.prototype);MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial;MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0;MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={MATCAP:""};this.color.copy(source.color);this.matcap=
source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};LineDashedMaterial.prototype=
Object.create(LineBasicMaterial.prototype);LineDashedMaterial.prototype.constructor=LineDashedMaterial;LineDashedMaterial.prototype.isLineDashedMaterial=!0;LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this};var Materials=Object.freeze({ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,
PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}),
AnimationUtils={arraySlice:function(array,from,to){return AnimationUtils.isTypedArray(array)?new array.constructor(array.subarray(from,void 0!==to?to:array.length)):array.slice(from,to)},convertArray:function(array,type,forceClone){return!array||!forceClone&&array.constructor===type?array:"number"===typeof type.BYTES_PER_ELEMENT?new type(array):Array.prototype.slice.call(array)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(times){for(var n=
times.length,result=Array(n),i$jscomp$0=0;i$jscomp$0!==n;++i$jscomp$0)result[i$jscomp$0]=i$jscomp$0;result.sort(function(i,j){return times[i]-times[j]});return result},sortedArray:function(values,stride,order){for(var nValues=values.length,result=new values.constructor(nValues),i=0,dstOffset=0;dstOffset!==nValues;++i)for(var srcOffset=order[i]*stride,j=0;j!==stride;++j)result[dstOffset++]=values[srcOffset+j];return result},flattenJSON:function(jsonKeys,times,values,valuePropertyName){for(var i=1,
key=jsonKeys[0];void 0!==key&&void 0===key[valuePropertyName];)key=jsonKeys[i++];if(void 0!==key){var value=key[valuePropertyName];if(void 0!==value)if(Array.isArray(value)){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push.apply(values,value)),key=jsonKeys[i++];while(void 0!==key)}else if(void 0!==value.toArray){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),value.toArray(values,values.length)),key=jsonKeys[i++];while(void 0!==key)}else{do value=
key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push(value)),key=jsonKeys[i++];while(void 0!==key)}}}};Object.assign(Interpolant.prototype,{evaluate:function(t){var pp=this.parameterPositions,i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];a:{b:{c:{d:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(void 0===t1){if(t<t0)break d;this._cachedIndex=i1=pp.length;return this.afterEnd_(i1-1,t,t0)}if(i1===giveUpAt)break;t0=t1;t1=pp[++i1];if(t<t1)break b}t1=pp.length;break c}if(t>=t0)break a;else{giveUpAt=
pp[1];t<giveUpAt&&(i1=2,t0=giveUpAt);for(giveUpAt=i1-2;;){if(void 0===t0)return this._cachedIndex=0,this.beforeStart_(0,t,t1);if(i1===giveUpAt)break;t1=t0;t0=pp[--i1-1];if(t>=t0)break b}t1=i1;i1=0}}for(;i1<t1;)t0=i1+t1>>>1,t<pp[t0]?t1=t0:i1=t0+1;t1=pp[i1];t0=pp[i1-1];if(void 0===t0)return this._cachedIndex=0,this.beforeStart_(0,t,t1);if(void 0===t1)return this._cachedIndex=i1=pp.length,this.afterEnd_(i1-1,t0,t)}this._cachedIndex=i1;this.intervalChanged_(i1,t0,t1)}return this.interpolate_(i1,t0,t,
t1)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(index){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;index*=stride;for(var i=0;i!==stride;++i)result[i]=values[index+i];return result},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_});
CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(i1,t0,t1){var pp=this.parameterPositions,iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(void 0===tPrev)switch(this.getSettings_().endingStart){case 2401:iPrev=i1;tPrev=2*t0-t1;break;case 2402:iPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:iPrev=i1,tPrev=t1}if(void 0===tNext)switch(this.getSettings_().endingEnd){case 2401:iNext=
i1;tNext=2*t1-t0;break;case 2402:iNext=1;tNext=t1+pp[1]-pp[0];break;default:iNext=i1-1,tNext=t0}i1=.5*(t1-t0);pp=this.valueSize;this._weightPrev=i1/(t0-tPrev);this._weightNext=i1/(tNext-t1);this._offsetPrev=iPrev*pp;this._offsetNext=iNext*pp},interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;var o0=i1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0);t=p*p;t1=t*p;t0=-wP*t1+
2*wP*t-wP*p;wP=(1+wP)*t1+(-1.5-2*wP)*t+(-.5+wP)*p+1;p=(-1-wN)*t1+(1.5+wN)*t+.5*p;wN=wN*t1-wN*t;for(t=0;t!==stride;++t)result[t]=t0*values[oP+t]+wP*values[o0+t]+p*values[i1+t]+wN*values[oN+t];return result}});LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;var offset0=i1-stride;t0=(t-t0)/(t1-t0);t=1-t0;for(t1=0;t1!==stride;++t1)result[t1]=
values[offset0+t1]*t+values[i1+t1]*t0;return result}});DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(i1){return this.copySampleValue_(i1-1)}});Object.assign(KeyframeTrack,{toJSON:function(track){var trackType=track.constructor;if(void 0!==trackType.toJSON)trackType=trackType.toJSON(track);else{trackType={name:track.name,times:AnimationUtils.convertArray(track.times,Array),values:AnimationUtils.convertArray(track.values,
Array)};var interpolation=track.getInterpolation();interpolation!==track.DefaultInterpolation&&(trackType.interpolation=interpolation)}trackType.type=track.ValueTypeName;return trackType}});Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result)},InterpolantFactoryMethodLinear:function(result){return new LinearInterpolant(this.times,
this.values,this.getValueSize(),result)},InterpolantFactoryMethodSmooth:function(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result)},setInterpolation:function(interpolation){switch(interpolation){case 2300:var factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case 2301:factoryMethod=this.InterpolantFactoryMethodLinear;break;case 2302:factoryMethod=this.InterpolantFactoryMethodSmooth}if(void 0===factoryMethod){factoryMethod="unsupported interpolation for "+
this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(interpolation!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(factoryMethod);console.warn("THREE.KeyframeTrack:",factoryMethod);return this}this.createInterpolant=factoryMethod;return this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},
getValueSize:function(){return this.values.length/this.times.length},shift:function(timeOffset){if(0!==timeOffset)for(var times=this.times,i=0,n=times.length;i!==n;++i)times[i]+=timeOffset;return this},scale:function(timeScale){if(1!==timeScale)for(var times=this.times,i=0,n=times.length;i!==n;++i)times[i]*=timeScale;return this},trim:function(startTime,endTime){for(var times=this.times,nKeys=times.length,from=0,to=nKeys-1;from!==nKeys&&times[from]<startTime;)++from;for(;-1!==to&&times[to]>endTime;)--to;
++to;if(0!==from||to!==nKeys)from>=to&&(to=Math.max(to,1),from=to-1),startTime=this.getValueSize(),this.times=AnimationUtils.arraySlice(times,from,to),this.values=AnimationUtils.arraySlice(this.values,from*startTime,to*startTime);return this},validate:function(){var valid=!0,valueSize=this.getValueSize();0!==valueSize-Math.floor(valueSize)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),valid=!1);var times=this.times;valueSize=this.values;var nKeys=times.length;0===nKeys&&
(console.error("THREE.KeyframeTrack: Track is empty.",this),valid=!1);for(var prevTime=null,i=0;i!==nKeys;i++){var currTime=times[i];if("number"===typeof currTime&&isNaN(currTime)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,currTime);valid=!1;break}if(null!==prevTime&&prevTime>currTime){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,currTime,prevTime);valid=!1;break}prevTime=currTime}if(void 0!==valueSize&&AnimationUtils.isTypedArray(valueSize))for(i=0,
times=valueSize.length;i!==times;++i)if(nKeys=valueSize[i],isNaN(nKeys)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,nKeys);valid=!1;break}return valid},optimize:function(){for(var times=this.times,values=this.values,stride=this.getValueSize(),smoothInterpolation=2302===this.getInterpolation(),writeIndex=1,lastIndex=times.length-1,i=1;i<lastIndex;++i){var keep=!1,time=times[i];if(time!==times[i+1]&&(1!==i||time!==time[0]))if(smoothInterpolation)keep=!0;else{var offset=
i*stride,offsetP=offset-stride,offsetN=offset+stride;for(time=0;time!==stride;++time){var value=values[offset+time];if(value!==values[offsetP+time]||value!==values[offsetN+time]){keep=!0;break}}}if(keep){if(i!==writeIndex)for(times[writeIndex]=times[i],keep=i*stride,offset=writeIndex*stride,time=0;time!==stride;++time)values[offset+time]=values[keep+time];++writeIndex}}if(0<lastIndex){times[writeIndex]=times[lastIndex];keep=lastIndex*stride;offset=writeIndex*stride;for(time=0;time!==stride;++time)values[offset+
time]=values[keep+time];++writeIndex}writeIndex!==times.length&&(this.times=AnimationUtils.arraySlice(times,0,writeIndex),this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride));return this},clone:function(){var times=AnimationUtils.arraySlice(this.times,0),values=AnimationUtils.arraySlice(this.values,0);times=new this.constructor(this.name,times,values);times.createInterpolant=this.createInterpolant;return times}});BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),
{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"});NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"});QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),
{constructor:QuaternionLinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;t0=(t-t0)/(t1-t0);for(t=i1+stride;i1!==t;i1+=4)Quaternion.slerpFlat(result,0,values,i1-stride,values,i1,t0);return result}});QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(result){return new QuaternionLinearInterpolant(this.times,
this.values,this.getValueSize(),result)},InterpolantFactoryMethodSmooth:void 0});StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"});Object.assign(AnimationClip,
{parse:function(json){for(var tracks=[],jsonTracks=json.tracks,frameTime=1/(json.fps||1),i=0,n=jsonTracks.length;i!==n;++i){var JSCompiler_temp_const=tracks,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push;var JSCompiler_inline_result=jsonTracks[i];if(void 0===JSCompiler_inline_result.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");var trackType=getTrackTypeForValueTypeName(JSCompiler_inline_result.type);if(void 0===JSCompiler_inline_result.times){var times=[],
values=[];AnimationUtils.flattenJSON(JSCompiler_inline_result.keys,times,values,"value");JSCompiler_inline_result.times=times;JSCompiler_inline_result.values=values}JSCompiler_inline_result=void 0!==trackType.parse?trackType.parse(JSCompiler_inline_result):new trackType(JSCompiler_inline_result.name,JSCompiler_inline_result.times,JSCompiler_inline_result.values,JSCompiler_inline_result.interpolation);JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,JSCompiler_inline_result.scale(frameTime))}return new AnimationClip(json.name,
json.duration,tracks)},toJSON:function(clip){var tracks=[],clipTracks=clip.tracks;clip={name:clip.name,duration:clip.duration,tracks:tracks,uuid:clip.uuid};for(var i=0,n=clipTracks.length;i!==n;++i)tracks.push(KeyframeTrack.toJSON(clipTracks[i]));return clip},CreateFromMorphTargetSequence:function(name,morphTargetSequence,fps,noLoop){for(var numMorphTargets=morphTargetSequence.length,tracks=[],i=0;i<numMorphTargets;i++){var times=[],values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+
1)%numMorphTargets);values.push(0,1,0);var order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);noLoop||0!==times[0]||(times.push(numMorphTargets),values.push(values[0]));tracks.push((new NumberKeyframeTrack(".morphTargetInfluences["+morphTargetSequence[i].name+"]",times,values)).scale(1/fps))}return new AnimationClip(name,-1,tracks)},findByName:function(objectOrClipArray,name){var clipArray=objectOrClipArray;
Array.isArray(objectOrClipArray)||(clipArray=objectOrClipArray.geometry&&objectOrClipArray.geometry.animations||objectOrClipArray.animations);for(objectOrClipArray=0;objectOrClipArray<clipArray.length;objectOrClipArray++)if(clipArray[objectOrClipArray].name===name)return clipArray[objectOrClipArray];return null},CreateClipsFromMorphTargetSequences:function(morphTargets,fps,noLoop){for(var animationToMorphTargets={},pattern=/^([\w-]*?)([\d]+)$/,i=0,il=morphTargets.length;i<il;i++){var morphTarget=
morphTargets[i],parts=morphTarget.name.match(pattern);if(parts&&1<parts.length){var name=parts[1];(parts=animationToMorphTargets[name])||(animationToMorphTargets[name]=parts=[]);parts.push(morphTarget)}}morphTargets=[];for(name in animationToMorphTargets)morphTargets.push(AnimationClip.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));return morphTargets},parseAnimation:function(animation,bones){if(!animation)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
null;var addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){if(0!==animationKeys.length){var times=[],values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);0!==times.length&&destTracks.push(new trackType(trackName,times,values))}},tracks=[],clipName=animation.name||"default",duration=animation.length||-1,fps=animation.fps||30;animation=animation.hierarchy||[];for(var h=0;h<animation.length;h++){var animationKeys=animation[h].keys;if(animationKeys&&
0!==animationKeys.length)if(animationKeys[0].morphTargets){duration={};for(var k=0;k<animationKeys.length;k++)if(animationKeys[k].morphTargets)for(var m=0;m<animationKeys[k].morphTargets.length;m++)duration[animationKeys[k].morphTargets[m]]=-1;for(var morphTargetName in duration){var times$jscomp$0=[],values$jscomp$0=[];for(m=0;m!==animationKeys[k].morphTargets.length;++m){var animationKey=animationKeys[k];times$jscomp$0.push(animationKey.time);values$jscomp$0.push(animationKey.morphTarget===morphTargetName?
1:0)}tracks.push(new NumberKeyframeTrack(".morphTargetInfluence["+morphTargetName+"]",times$jscomp$0,values$jscomp$0))}duration=duration.length*(fps||1)}else k=".bones["+bones[h].name+"]",addNonemptyTrack(VectorKeyframeTrack,k+".position",animationKeys,"pos",tracks),addNonemptyTrack(QuaternionKeyframeTrack,k+".quaternion",animationKeys,"rot",tracks),addNonemptyTrack(VectorKeyframeTrack,k+".scale",animationKeys,"scl",tracks)}return 0===tracks.length?null:new AnimationClip(clipName,duration,tracks)}});
Object.assign(AnimationClip.prototype,{resetDuration:function(){for(var duration=0,i=0,n=this.tracks.length;i!==n;++i){var track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1])}this.duration=duration;return this},trim:function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this},validate:function(){for(var valid=!0,i=0;i<this.tracks.length;i++)valid=valid&&this.tracks[i].validate();return valid},optimize:function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].optimize();
return this},clone:function(){for(var tracks=[],i=0;i<this.tracks.length;i++)tracks.push(this.tracks[i].clone());return new AnimationClip(this.name,this.duration,tracks)}});var Cache={enabled:!1,files:{},add:function(key,file){!1!==this.enabled&&(this.files[key]=file)},get:function(key){if(!1!==this.enabled)return this.files[key]},remove:function(key){delete this.files[key]},clear:function(){this.files={}}},DefaultLoadingManager=new LoadingManager,loading={};Object.assign(FileLoader.prototype,{load:function(url,
onLoad,onProgress,onError){void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0),cached;if(void 0!==loading[url])loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});else{var dataUriRegexResult=url.match(/^data:(.*?)(;base64)?,(.*)$/);if(dataUriRegexResult){onProgress=dataUriRegexResult[1];
var isBase64=!!dataUriRegexResult[2];dataUriRegexResult=dataUriRegexResult[3];dataUriRegexResult=decodeURIComponent(dataUriRegexResult);isBase64&&(dataUriRegexResult=atob(dataUriRegexResult));try{var responseType=(this.responseType||"").toLowerCase();switch(responseType){case "arraybuffer":case "blob":var view=new Uint8Array(dataUriRegexResult.length);for(isBase64=0;isBase64<dataUriRegexResult.length;isBase64++)view[isBase64]=dataUriRegexResult.charCodeAt(isBase64);var response$jscomp$0="blob"===
responseType?new Blob([view.buffer],{type:onProgress}):view.buffer;break;case "document":response$jscomp$0=(new DOMParser).parseFromString(dataUriRegexResult,onProgress);break;case "json":response$jscomp$0=JSON.parse(dataUriRegexResult);break;default:response$jscomp$0=dataUriRegexResult}setTimeout(function(){onLoad&&onLoad(response$jscomp$0);scope.manager.itemEnd(url)},0)}catch(error){setTimeout(function(){onError&&onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url)},0)}}else{loading[url]=
[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});var request=new XMLHttpRequest;request.open("GET",url,!0);request.addEventListener("load",function(event){var response=this.response;Cache.add(url,response);var callbacks=loading[url];delete loading[url];if(200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onLoad)callback.onLoad(response)}}else{i=
0;for(il=callbacks.length;i<il;i++)if(callback=callbacks[i],callback.onError)callback.onError(event);scope.manager.itemError(url)}scope.manager.itemEnd(url)},!1);request.addEventListener("progress",function(event){for(var callbacks=loading[url],i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onProgress)callback.onProgress(event)}},!1);request.addEventListener("error",function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=
callbacks[i];if(callback.onError)callback.onError(event)}scope.manager.itemError(url);scope.manager.itemEnd(url)},!1);request.addEventListener("abort",function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event)}scope.manager.itemError(url);scope.manager.itemEnd(url)},!1);void 0!==this.responseType&&(request.responseType=this.responseType);void 0!==this.withCredentials&&(request.withCredentials=
this.withCredentials);request.overrideMimeType&&request.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(isBase64 in this.requestHeader)request.setRequestHeader(isBase64,this.requestHeader[isBase64]);request.send(null)}scope.manager.itemStart(url);return request}},setPath:function(value){this.path=value;return this},setResponseType:function(value){this.responseType=value;return this},setWithCredentials:function(value){this.withCredentials=value;return this},setMimeType:function(value){this.mimeType=
value;return this},setRequestHeader:function(value){this.requestHeader=value;return this}});Object.assign(AnimationLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))},onProgress,onError)},parse:function(json,onLoad){for(var animations=[],i=0;i<json.length;i++){var clip=AnimationClip.parse(json[i]);animations.push(clip)}onLoad(animations)},
setPath:function(value){this.path=value;return this}});Object.assign(CompressedTextureLoader.prototype,{load:function(url,onLoad,onProgress,onError){function loadTexture(i){loader.load(url[i],function(buffer){buffer=scope._parser(buffer,!0);images[i]={width:buffer.width,height:buffer.height,format:buffer.format,mipmaps:buffer.mipmaps};loaded+=1;6===loaded&&(1===buffer.mipmapCount&&(texture.minFilter=1006),texture.format=buffer.format,texture.needsUpdate=!0,onLoad&&onLoad(texture))},onProgress,onError)}
var scope=this,images=[],texture=new CompressedTexture;texture.image=images;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType("arraybuffer");if(Array.isArray(url))for(var loaded=0,i$jscomp$0=0,il=url.length;i$jscomp$0<il;++i$jscomp$0)loadTexture(i$jscomp$0);else loader.load(url,function(buffer){buffer=scope._parser(buffer,!0);if(buffer.isCubemap)for(var faces=buffer.mipmaps.length/buffer.mipmapCount,f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<buffer.mipmapCount;i++)images[f].mipmaps.push(buffer.mipmaps[f*
buffer.mipmapCount+i]),images[f].format=buffer.format,images[f].width=buffer.width,images[f].height=buffer.height}else texture.image.width=buffer.width,texture.image.height=buffer.height,texture.mipmaps=buffer.mipmaps;1===buffer.mipmapCount&&(texture.minFilter=1006);texture.format=buffer.format;texture.needsUpdate=!0;onLoad&&onLoad(texture)},onProgress,onError);return texture},setPath:function(value){this.path=value;return this}});Object.assign(DataTextureLoader.prototype,{load:function(url,onLoad,
onProgress,onError){var scope=this,texture=new DataTexture,loader=new FileLoader(this.manager);loader.setResponseType("arraybuffer");loader.setPath(this.path);loader.load(url,function(buffer){if(buffer=scope._parser(buffer))void 0!==buffer.image?texture.image=buffer.image:void 0!==buffer.data&&(texture.image.width=buffer.width,texture.image.height=buffer.height,texture.image.data=buffer.data),texture.wrapS=void 0!==buffer.wrapS?buffer.wrapS:1001,texture.wrapT=void 0!==buffer.wrapT?buffer.wrapT:1001,
texture.magFilter=void 0!==buffer.magFilter?buffer.magFilter:1006,texture.minFilter=void 0!==buffer.minFilter?buffer.minFilter:1008,texture.anisotropy=void 0!==buffer.anisotropy?buffer.anisotropy:1,void 0!==buffer.format&&(texture.format=buffer.format),void 0!==buffer.type&&(texture.type=buffer.type),void 0!==buffer.mipmaps&&(texture.mipmaps=buffer.mipmaps),1===buffer.mipmapCount&&(texture.minFilter=1006),texture.needsUpdate=!0,onLoad&&onLoad(texture,buffer)},onProgress,onError);return texture},setPath:function(value){this.path=
value;return this}});Object.assign(ImageLoader.prototype,{crossOrigin:"anonymous",load:function(url,onLoad,onProgress,onError){function onImageLoad(){image.removeEventListener("load",onImageLoad,!1);image.removeEventListener("error",onImageError,!1);Cache.add(url,this);onLoad&&onLoad(this);scope.manager.itemEnd(url)}function onImageError(event){image.removeEventListener("load",onImageLoad,!1);image.removeEventListener("error",onImageError,!1);onError&&onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url)}
void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0),cached;var image=document.createElementNS("http://www.w3.org/1999/xhtml","img");image.addEventListener("load",onImageLoad,!1);image.addEventListener("error",onImageError,!1);"data:"!==url.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=
this.crossOrigin);scope.manager.itemStart(url);image.src=url;return image},setCrossOrigin:function(value){this.crossOrigin=value;return this},setPath:function(value){this.path=value;return this}});Object.assign(CubeTextureLoader.prototype,{crossOrigin:"anonymous",load:function(urls,onLoad,onProgress,onError){function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;6===loaded&&(texture.needsUpdate=!0,onLoad&&onLoad(texture))},void 0,onError)}var texture=new CubeTexture,
loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;for(onProgress=0;onProgress<urls.length;++onProgress)loadTexture(onProgress);return texture},setCrossOrigin:function(value){this.crossOrigin=value;return this},setPath:function(value){this.path=value;return this}});Object.assign(TextureLoader.prototype,{crossOrigin:"anonymous",load:function(url,onLoad,onProgress,onError){var texture=new Texture,loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);
loader.setPath(this.path);loader.load(url,function(image){texture.image=image;image=0<url.search(/\.jpe?g($|\?)/i)||0===url.search(/^data:image\/jpeg/);texture.format=image?1022:1023;texture.needsUpdate=!0;void 0!==onLoad&&onLoad(texture)},onProgress,onError);return texture},setCrossOrigin:function(value){this.crossOrigin=value;return this},setPath:function(value){this.path=value;return this}});Object.assign(Curve.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");
return null},getPointAt:function(u,optionalTarget){u=this.getUtoTmapping(u);return this.getPoint(u,optionalTarget)},getPoints:function(divisions){void 0===divisions&&(divisions=5);for(var points=[],d=0;d<=divisions;d++)points.push(this.getPoint(d/divisions));return points},getSpacedPoints:function(divisions){void 0===divisions&&(divisions=5);for(var points=[],d=0;d<=divisions;d++)points.push(this.getPointAt(d/divisions));return points},getLength:function(){var lengths=this.getLengths();return lengths[lengths.length-
1]},getLengths:function(divisions){void 0===divisions&&(divisions=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var cache=[],last=this.getPoint(0),p,sum=0;cache.push(0);for(p=1;p<=divisions;p++){var current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current}return this.cacheArcLengths=cache},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},
getUtoTmapping:function(u,distance){var arcLengths=this.getLengths(),il=arcLengths.length;distance=distance?distance:u*arcLengths[il-1];for(var low=0,high=il-1,comparison;low<=high;)if(u=Math.floor(low+(high-low)/2),comparison=arcLengths[u]-distance,0>comparison)low=u+1;else if(0<comparison)high=u-1;else{high=u;break}u=high;if(arcLengths[u]===distance)return u/(il-1);low=arcLengths[u];return(u+(distance-low)/(arcLengths[u+1]-low))/(il-1)},getTangent:function(t){var t1=t-1E-4;t+=1E-4;0>t1&&(t1=0);
1<t&&(t=1);t1=this.getPoint(t1);return this.getPoint(t).clone().sub(t1).normalize()},getTangentAt:function(u){u=this.getUtoTmapping(u);return this.getTangent(u)},computeFrenetFrames:function(segments,closed){var normal=new Vector3,tangents=[],normals=[],binormals=[],vec=new Vector3,mat=new Matrix4,i;for(i=0;i<=segments;i++){var u=i/segments;tangents[i]=this.getTangentAt(u);tangents[i].normalize()}normals[0]=new Vector3;binormals[0]=new Vector3;i=Number.MAX_VALUE;u=Math.abs(tangents[0].x);var ty=Math.abs(tangents[0].y),
tz=Math.abs(tangents[0].z);u<=i&&(i=u,normal.set(1,0,0));ty<=i&&(i=ty,normal.set(0,1,0));tz<=i&&normal.set(0,0,1);vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);for(i=1;i<=segments;i++)normals[i]=normals[i-1].clone(),binormals[i]=binormals[i-1].clone(),vec.crossVectors(tangents[i-1],tangents[i]),vec.length()>Number.EPSILON&&(vec.normalize(),normal=Math.acos(_Math.clamp(tangents[i-1].dot(tangents[i]),-1,1)),
normals[i].applyMatrix4(mat.makeRotationAxis(vec,normal))),binormals[i].crossVectors(tangents[i],normals[i]);if(!0===closed)for(normal=Math.acos(_Math.clamp(normals[0].dot(normals[segments]),-1,1)),normal/=segments,0<tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))&&(normal=-normal),i=1;i<=segments;i++)normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],normal*i)),binormals[i].crossVectors(tangents[i],normals[i]);return{tangents:tangents,normals:normals,binormals:binormals}},clone:function(){return(new this.constructor).copy(this)},
copy:function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this},toJSON:function(){var data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data},fromJSON:function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this}});EllipseCurve.prototype=Object.create(Curve.prototype);EllipseCurve.prototype.constructor=EllipseCurve;EllipseCurve.prototype.isEllipseCurve=!0;EllipseCurve.prototype.getPoint=
function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;for(var twoPi=2*Math.PI,deltaAngle=this.aEndAngle-this.aStartAngle,samePoints=Math.abs(deltaAngle)<Number.EPSILON;0>deltaAngle;)deltaAngle+=twoPi;for(;deltaAngle>twoPi;)deltaAngle-=twoPi;deltaAngle<Number.EPSILON&&(deltaAngle=samePoints?0:twoPi);!0!==this.aClockwise||samePoints||(deltaAngle=deltaAngle===twoPi?-twoPi:deltaAngle-twoPi);twoPi=this.aStartAngle+t*deltaAngle;t=this.aX+this.xRadius*Math.cos(twoPi);var y=this.aY+this.yRadius*
Math.sin(twoPi);0!==this.aRotation&&(twoPi=Math.cos(this.aRotation),deltaAngle=Math.sin(this.aRotation),samePoints=t-this.aX,y-=this.aY,t=samePoints*twoPi-y*deltaAngle+this.aX,y=samePoints*deltaAngle+y*twoPi+this.aY);return optionalTarget.set(t,y)};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=
source.aClockwise;this.aRotation=source.aRotation;return this};EllipseCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=
json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this};ArcCurve.prototype=Object.create(EllipseCurve.prototype);ArcCurve.prototype.constructor=ArcCurve;ArcCurve.prototype.isArcCurve=!0;var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;CatmullRomCurve3.prototype=Object.create(Curve.prototype);CatmullRomCurve3.prototype.constructor=CatmullRomCurve3;CatmullRomCurve3.prototype.isCatmullRomCurve3=
!0;CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector3;var points=this.points,l=points.length;t*=l-(this.closed?0:1);var intPoint=Math.floor(t);t-=intPoint;this.closed?intPoint+=0<intPoint?0:(Math.floor(Math.abs(intPoint)/l)+1)*l:0===t&&intPoint===l-1&&(intPoint=l-2,t=1);if(this.closed||0<intPoint)var p0=points[(intPoint-1)%l];else tmp.subVectors(points[0],points[1]).add(points[0]),p0=tmp;var p1=points[intPoint%l];var p2=points[(intPoint+1)%l];
this.closed||intPoint+2<l?points=points[(intPoint+2)%l]:(tmp.subVectors(points[l-1],points[l-2]).add(points[l-1]),points=tmp);if("centripetal"===this.curveType||"chordal"===this.curveType){var pow="chordal"===this.curveType?.5:.25;l=Math.pow(p0.distanceToSquared(p1),pow);intPoint=Math.pow(p1.distanceToSquared(p2),pow);pow=Math.pow(p2.distanceToSquared(points),pow);1E-4>intPoint&&(intPoint=1);1E-4>l&&(l=intPoint);1E-4>pow&&(pow=intPoint);px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,points.x,l,intPoint,
pow);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,points.y,l,intPoint,pow);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,points.z,l,intPoint,pow)}else"catmullrom"===this.curveType&&(px.initCatmullRom(p0.x,p1.x,p2.x,points.x,this.tension),py.initCatmullRom(p0.y,p1.y,p2.y,points.y,this.tension),pz.initCatmullRom(p0.z,p1.z,p2.z,points.z,this.tension));optionalTarget.set(px.calc(t),py.calc(t),pz.calc(t));return optionalTarget};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,
source);this.points=[];for(var i=0,l=source.points.length;i<l;i++)this.points.push(source.points[i].clone());this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this};CatmullRomCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++)data.points.push(this.points[i].toArray());data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data};CatmullRomCurve3.prototype.fromJSON=
function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push((new Vector3).fromArray(point))}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this};CubicBezierCurve.prototype=Object.create(Curve.prototype);CubicBezierCurve.prototype.constructor=CubicBezierCurve;CubicBezierCurve.prototype.isCubicBezierCurve=!0;CubicBezierCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=
optionalTarget||new Vector2;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return optionalTarget};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=
this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};CubicBezierCurve3.prototype=Object.create(Curve.prototype);CubicBezierCurve3.prototype.constructor=CubicBezierCurve3;CubicBezierCurve3.prototype.isCubicBezierCurve3=!0;CubicBezierCurve3.prototype.getPoint=
function(t,optionalTarget){optionalTarget=optionalTarget||new Vector3;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return optionalTarget};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve3.prototype.toJSON=function(){var data=
Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data};CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};LineCurve.prototype=Object.create(Curve.prototype);LineCurve.prototype.constructor=LineCurve;LineCurve.prototype.isLineCurve=!0;LineCurve.prototype.getPoint=
function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;1===t?optionalTarget.copy(this.v2):(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);
this.v2.copy(source.v2);return this};LineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};LineCurve3.prototype=Object.create(Curve.prototype);LineCurve3.prototype.constructor=LineCurve3;LineCurve3.prototype.isLineCurve3=!0;LineCurve3.prototype.getPoint=function(t,
optionalTarget){optionalTarget=optionalTarget||new Vector3;1===t?optionalTarget.copy(this.v2):(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};LineCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);
data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};QuadraticBezierCurve.prototype=Object.create(Curve.prototype);QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve;QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0;QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;
var v0=this.v0,v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return optionalTarget};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};QuadraticBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};
QuadraticBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};QuadraticBezierCurve3.prototype=Object.create(Curve.prototype);QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3;QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0;QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector3;var v0=this.v0,
v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return optionalTarget};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};QuadraticBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();
return data};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};SplineCurve.prototype=Object.create(Curve.prototype);SplineCurve.prototype.constructor=SplineCurve;SplineCurve.prototype.isSplineCurve=!0;SplineCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;var points=this.points,p=(points.length-1)*t;t=Math.floor(p);
p-=t;var p0=points[0===t?t:t-1],p1=points[t],p2=points[t>points.length-2?points.length-1:t+1];points=points[t>points.length-3?points.length-1:t+2];optionalTarget.set(CatmullRom(p,p0.x,p1.x,p2.x,points.x),CatmullRom(p,p0.y,p1.y,p2.y,points.y));return optionalTarget};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++)this.points.push(source.points[i].clone());return this};SplineCurve.prototype.toJSON=function(){var data=
Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++)data.points.push(this.points[i].toArray());return data};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push((new Vector2).fromArray(point))}return this};var Curves=Object.freeze({ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,
EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(curve){this.curves.push(curve)},closePath:function(){var startPoint=this.curves[0].getPoint(0),endPoint=this.curves[this.curves.length-1].getPoint(1);startPoint.equals(endPoint)||this.curves.push(new LineCurve(endPoint,startPoint))},
getPoint:function(t){var d=t*this.getLength(),curveLengths=this.getCurveLengths();for(t=0;t<curveLengths.length;){if(curveLengths[t]>=d)return d=curveLengths[t]-d,t=this.curves[t],curveLengths=t.getLength(),t.getPointAt(0===curveLengths?0:1-d/curveLengths);t++}return null},getLength:function(){var lens=this.getCurveLengths();return lens[lens.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===
this.curves.length)return this.cacheLengths;for(var lengths=[],sums=0,i=0,l=this.curves.length;i<l;i++)sums+=this.curves[i].getLength(),lengths.push(sums);return this.cacheLengths=lengths},getSpacedPoints:function(divisions){void 0===divisions&&(divisions=40);for(var points=[],i=0;i<=divisions;i++)points.push(this.getPoint(i/divisions));this.autoClose&&points.push(points[0]);return points},getPoints:function(divisions){divisions=divisions||12;for(var points=[],last,i=0,curves=this.curves;i<curves.length;i++){var curve=
curves[i];curve=curve.getPoints(curve&&curve.isEllipseCurve?2*divisions:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions);for(var j=0;j<curve.length;j++){var point=curve[j];last&&last.equals(point)||(points.push(point),last=point)}}this.autoClose&&1<points.length&&!points[points.length-1].equals(points[0])&&points.push(points[0]);return points},copy:function(source){Curve.prototype.copy.call(this,source);this.curves=[];for(var i=0,
l=source.curves.length;i<l;i++)this.curves.push(source.curves[i].clone());this.autoClose=source.autoClose;return this},toJSON:function(){var data=Curve.prototype.toJSON.call(this);data.autoClose=this.autoClose;data.curves=[];for(var i=0,l=this.curves.length;i<l;i++)data.curves.push(this.curves[i].toJSON());return data},fromJSON:function(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var i=0,l=json.curves.length;i<l;i++){var curve=json.curves[i];this.curves.push((new Curves[curve.type]).fromJSON(curve))}return this}});
Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(points){this.moveTo(points[0].x,points[0].y);for(var i=1,l=points.length;i<l;i++)this.lineTo(points[i].x,points[i].y)},moveTo:function(x,y){this.currentPoint.set(x,y)},lineTo:function(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y)},quadraticCurveTo:function(aCPx,aCPy,aX,aY){aCPx=new QuadraticBezierCurve(this.currentPoint.clone(),
new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(aCPx);this.currentPoint.set(aX,aY)},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){aCP1x=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(aCP1x);this.currentPoint.set(aX,aY)},splineThru:function(pts){var npts=[this.currentPoint.clone()].concat(pts);npts=new SplineCurve(npts);this.curves.push(npts);this.currentPoint.copy(pts[pts.length-1])},arc:function(aX,
aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absarc(aX+this.currentPoint.x,aY+this.currentPoint.y,aRadius,aStartAngle,aEndAngle,aClockwise)},absarc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)},ellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){this.absellipse(aX+this.currentPoint.x,aY+this.currentPoint.y,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation)},absellipse:function(aX,
aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){aX=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);0<this.curves.length&&(aY=aX.getPoint(0),aY.equals(this.currentPoint)||this.lineTo(aY.x,aY.y));this.curves.push(aX);aX=aX.getPoint(1);this.currentPoint.copy(aX)},copy:function(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this},toJSON:function(){var data=CurvePath.prototype.toJSON.call(this);data.currentPoint=
this.currentPoint.toArray();return data},fromJSON:function(json){CurvePath.prototype.fromJSON.call(this,json);this.currentPoint.fromArray(json.currentPoint);return this}});Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(divisions){for(var holesPts=[],i=0,l=this.holes.length;i<l;i++)holesPts[i]=this.holes[i].getPoints(divisions);return holesPts},extractPoints:function(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)}},
copy:function(source){Path.prototype.copy.call(this,source);this.holes=[];for(var i=0,l=source.holes.length;i<l;i++)this.holes.push(source.holes[i].clone());return this},toJSON:function(){var data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(var i=0,l=this.holes.length;i<l;i++)data.holes.push(this.holes[i].toJSON());return data},fromJSON:function(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];for(var i=0,l=json.holes.length;i<l;i++){var hole=
json.holes[i];this.holes.push((new Path).fromJSON(hole))}return this}});Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(source){Object3D.prototype.copy.call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.color=this.color.getHex();meta.object.intensity=this.intensity;void 0!==this.groundColor&&(meta.object.groundColor=
this.groundColor.getHex());void 0!==this.distance&&(meta.object.distance=this.distance);void 0!==this.angle&&(meta.object.angle=this.angle);void 0!==this.decay&&(meta.object.decay=this.decay);void 0!==this.penumbra&&(meta.object.penumbra=this.penumbra);void 0!==this.shadow&&(meta.object.shadow=this.shadow.toJSON());return meta}});HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(source){Light.prototype.copy.call(this,
source);this.groundColor.copy(source.groundColor);return this}});Object.assign(LightShadow.prototype,{copy:function(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var object={};0!==this.bias&&(object.bias=this.bias);1!==this.radius&&(object.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)object.mapSize=this.mapSize.toArray();
object.camera=this.camera.toJSON(!1).object;delete object.camera.matrix;return object}});SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,update:function(light){var camera=this.camera,fov=2*_Math.RAD2DEG*light.angle,aspect=this.mapSize.width/this.mapSize.height;light=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||light!==camera.far)camera.fov=fov,camera.aspect=aspect,camera.far=light,camera.updateProjectionMatrix()}});
SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this}});PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(source){Light.prototype.copy.call(this,
source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this}});OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=null===source.view?
null:Object.assign({},source.view);return this},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},
updateProjectionMatrix:function(){var dx=(this.right-this.left)/(2*this.zoom),dy=(this.top-this.bottom)/(2*this.zoom),cx=(this.right+this.left)/2,cy=(this.top+this.bottom)/2,left=cx-dx;cx+=dx;dx=cy+dy;dy=cy-dy;if(null!==this.view&&this.view.enabled){cx=this.zoom/(this.view.width/this.view.fullWidth);dy=this.zoom/(this.view.height/this.view.fullHeight);var scaleW=(this.right-this.left)/this.view.width;cy=(this.top-this.bottom)/this.view.height;left+=this.view.offsetX/cx*scaleW;cx=left+this.view.width/
cx*scaleW;dx-=this.view.offsetY/dy*cy;dy=dx-this.view.height/dy*cy}this.projectionMatrix.makeOrthographic(left,cx,dx,dy,this.near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.zoom=this.zoom;meta.object.left=this.left;meta.object.right=this.right;meta.object.top=this.top;meta.object.bottom=this.bottom;meta.object.near=this.near;meta.object.far=this.far;null!==this.view&&(meta.object.view=Object.assign({},
this.view));return meta}});DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow});DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this}});AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,
isAmbientLight:!0});RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this},toJSON:function(meta){meta=Light.prototype.toJSON.call(this,meta);meta.object.width=this.width;meta.object.height=this.height;return meta}});Object.assign(MaterialLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this,loader=
new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))},onProgress,onError)},parse:function(json){function getTexture(name){void 0===textures[name]&&console.warn("THREE.MaterialLoader: Undefined texture",name);return textures[name]}var textures=this.textures,material=new Materials[json.type];void 0!==json.uuid&&(material.uuid=json.uuid);void 0!==json.name&&(material.name=json.name);void 0!==json.color&&material.color.setHex(json.color);
void 0!==json.roughness&&(material.roughness=json.roughness);void 0!==json.metalness&&(material.metalness=json.metalness);void 0!==json.emissive&&material.emissive.setHex(json.emissive);void 0!==json.specular&&material.specular.setHex(json.specular);void 0!==json.shininess&&(material.shininess=json.shininess);void 0!==json.clearCoat&&(material.clearCoat=json.clearCoat);void 0!==json.clearCoatRoughness&&(material.clearCoatRoughness=json.clearCoatRoughness);void 0!==json.vertexColors&&(material.vertexColors=
json.vertexColors);void 0!==json.fog&&(material.fog=json.fog);void 0!==json.flatShading&&(material.flatShading=json.flatShading);void 0!==json.blending&&(material.blending=json.blending);void 0!==json.combine&&(material.combine=json.combine);void 0!==json.side&&(material.side=json.side);void 0!==json.opacity&&(material.opacity=json.opacity);void 0!==json.transparent&&(material.transparent=json.transparent);void 0!==json.alphaTest&&(material.alphaTest=json.alphaTest);void 0!==json.depthTest&&(material.depthTest=
json.depthTest);void 0!==json.depthWrite&&(material.depthWrite=json.depthWrite);void 0!==json.colorWrite&&(material.colorWrite=json.colorWrite);void 0!==json.wireframe&&(material.wireframe=json.wireframe);void 0!==json.wireframeLinewidth&&(material.wireframeLinewidth=json.wireframeLinewidth);void 0!==json.wireframeLinecap&&(material.wireframeLinecap=json.wireframeLinecap);void 0!==json.wireframeLinejoin&&(material.wireframeLinejoin=json.wireframeLinejoin);void 0!==json.rotation&&(material.rotation=
json.rotation);1!==json.linewidth&&(material.linewidth=json.linewidth);void 0!==json.dashSize&&(material.dashSize=json.dashSize);void 0!==json.gapSize&&(material.gapSize=json.gapSize);void 0!==json.scale&&(material.scale=json.scale);void 0!==json.polygonOffset&&(material.polygonOffset=json.polygonOffset);void 0!==json.polygonOffsetFactor&&(material.polygonOffsetFactor=json.polygonOffsetFactor);void 0!==json.polygonOffsetUnits&&(material.polygonOffsetUnits=json.polygonOffsetUnits);void 0!==json.skinning&&
(material.skinning=json.skinning);void 0!==json.morphTargets&&(material.morphTargets=json.morphTargets);void 0!==json.dithering&&(material.dithering=json.dithering);void 0!==json.visible&&(material.visible=json.visible);void 0!==json.userData&&(material.userData=json.userData);if(void 0!==json.uniforms)for(var name$jscomp$0 in json.uniforms){var uniform=json.uniforms[name$jscomp$0];material.uniforms[name$jscomp$0]={};switch(uniform.type){case "t":material.uniforms[name$jscomp$0].value=getTexture(uniform.value);
break;case "c":material.uniforms[name$jscomp$0].value=(new Color).setHex(uniform.value);break;case "v2":material.uniforms[name$jscomp$0].value=(new Vector2).fromArray(uniform.value);break;case "v3":material.uniforms[name$jscomp$0].value=(new Vector3).fromArray(uniform.value);break;case "v4":material.uniforms[name$jscomp$0].value=(new Vector4).fromArray(uniform.value);break;case "m3":material.uniforms[name$jscomp$0].value=(new Matrix3).fromArray(uniform.value);case "m4":material.uniforms[name$jscomp$0].value=
(new Matrix4).fromArray(uniform.value);break;default:material.uniforms[name$jscomp$0].value=uniform.value}}void 0!==json.defines&&(material.defines=json.defines);void 0!==json.vertexShader&&(material.vertexShader=json.vertexShader);void 0!==json.fragmentShader&&(material.fragmentShader=json.fragmentShader);if(void 0!==json.extensions)for(var key in json.extensions)material.extensions[key]=json.extensions[key];void 0!==json.shading&&(material.flatShading=1===json.shading);void 0!==json.size&&(material.size=
json.size);void 0!==json.sizeAttenuation&&(material.sizeAttenuation=json.sizeAttenuation);void 0!==json.map&&(material.map=getTexture(json.map));void 0!==json.alphaMap&&(material.alphaMap=getTexture(json.alphaMap),material.transparent=!0);void 0!==json.bumpMap&&(material.bumpMap=getTexture(json.bumpMap));void 0!==json.bumpScale&&(material.bumpScale=json.bumpScale);void 0!==json.normalMap&&(material.normalMap=getTexture(json.normalMap));void 0!==json.normalMapType&&(material.normalMapType=json.normalMapType);
void 0!==json.normalScale&&(name$jscomp$0=json.normalScale,!1===Array.isArray(name$jscomp$0)&&(name$jscomp$0=[name$jscomp$0,name$jscomp$0]),material.normalScale=(new Vector2).fromArray(name$jscomp$0));void 0!==json.displacementMap&&(material.displacementMap=getTexture(json.displacementMap));void 0!==json.displacementScale&&(material.displacementScale=json.displacementScale);void 0!==json.displacementBias&&(material.displacementBias=json.displacementBias);void 0!==json.roughnessMap&&(material.roughnessMap=
getTexture(json.roughnessMap));void 0!==json.metalnessMap&&(material.metalnessMap=getTexture(json.metalnessMap));void 0!==json.emissiveMap&&(material.emissiveMap=getTexture(json.emissiveMap));void 0!==json.emissiveIntensity&&(material.emissiveIntensity=json.emissiveIntensity);void 0!==json.specularMap&&(material.specularMap=getTexture(json.specularMap));void 0!==json.envMap&&(material.envMap=getTexture(json.envMap));void 0!==json.envMapIntensity&&(material.envMapIntensity=json.envMapIntensity);void 0!==
json.reflectivity&&(material.reflectivity=json.reflectivity);void 0!==json.lightMap&&(material.lightMap=getTexture(json.lightMap));void 0!==json.lightMapIntensity&&(material.lightMapIntensity=json.lightMapIntensity);void 0!==json.aoMap&&(material.aoMap=getTexture(json.aoMap));void 0!==json.aoMapIntensity&&(material.aoMapIntensity=json.aoMapIntensity);void 0!==json.gradientMap&&(material.gradientMap=getTexture(json.gradientMap));return material},setPath:function(value){this.path=value;return this},
setTextures:function(value){this.textures=value;return this}});var LoaderUtils={decodeText:function(array){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(array);for(var s="",i=0,il=array.length;i<il;i++)s+=String.fromCharCode(array[i]);return decodeURIComponent(escape(s))},extractUrlBase:function(url){var index=url.lastIndexOf("/");return-1===index?"./":url.substr(0,index+1)}};Object.assign(BufferGeometryLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=
this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))},onProgress,onError)},parse:function(json){var geometry=new BufferGeometry,index=json.data.index;if(void 0!==index){var typedArray=new TYPED_ARRAYS[index.type](index.array);geometry.setIndex(new BufferAttribute(typedArray,1))}index=json.data.attributes;for(var key in index){var attribute=index[key];typedArray=new TYPED_ARRAYS[attribute.type](attribute.array);typedArray=
new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);void 0!==attribute.name&&(typedArray.name=attribute.name);geometry.addAttribute(key,typedArray)}var morphAttributes=json.data.morphAttributes;if(morphAttributes)for(key in morphAttributes){var attributeArray=morphAttributes[key],array=[];index=0;for(var il=attributeArray.length;index<il;index++)attribute=attributeArray[index],typedArray=new TYPED_ARRAYS[attribute.type](attribute.array),typedArray=new BufferAttribute(typedArray,
attribute.itemSize,attribute.normalized),void 0!==attribute.name&&(typedArray.name=attribute.name),array.push(typedArray);geometry.morphAttributes[key]=array}key=json.data.groups||json.data.drawcalls||json.data.offsets;if(void 0!==key)for(index=0,attribute=key.length;index!==attribute;++index)typedArray=key[index],geometry.addGroup(typedArray.start,typedArray.count,typedArray.materialIndex);index=json.data.boundingSphere;void 0!==index&&(key=new Vector3,void 0!==index.center&&key.fromArray(index.center),
geometry.boundingSphere=new Sphere(key,index.radius));json.name&&(geometry.name=json.name);json.userData&&(geometry.userData=json.userData);return geometry},setPath:function(value){this.path=value;return this}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};
Object.assign(ObjectLoader.prototype,{crossOrigin:"anonymous",load:function(url,onLoad,onProgress,onError){var scope=this,path=void 0===this.path?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;path=new FileLoader(scope.manager);path.setPath(this.path);path.load(url,function(text){var json=null;try{json=JSON.parse(text)}catch(error){void 0!==onError&&onError(error);console.error("THREE:ObjectLoader: Can't parse "+url+".",error.message);return}text=json.metadata;
void 0===text||void 0===text.type||"geometry"===text.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+url):scope.parse(json,onLoad)},onProgress,onError)},setPath:function(value){this.path=value;return this},setResourcePath:function(value){this.resourcePath=value;return this},setCrossOrigin:function(value){this.crossOrigin=value;return this},parse:function(json,onLoad){var shapes=this.parseShape(json.shapes);shapes=this.parseGeometries(json.geometries,shapes);var images=this.parseImages(json.images,
function(){void 0!==onLoad&&onLoad(object)});images=this.parseTextures(json.textures,images);images=this.parseMaterials(json.materials,images);var object=this.parseObject(json.object,shapes,images);json.animations&&(object.animations=this.parseAnimations(json.animations));void 0!==json.images&&0!==json.images.length||void 0===onLoad||onLoad(object);return object},parseShape:function(json){var shapes={};if(void 0!==json)for(var i=0,l=json.length;i<l;i++){var shape=(new Shape).fromJSON(json[i]);shapes[shape.uuid]=
shape}return shapes},parseGeometries:function(json,shapes){var geometries={};if(void 0!==json)for(var bufferGeometryLoader=new BufferGeometryLoader,i=0,l=json.length;i<l;i++){var data=json[i];switch(data.type){case "PlaneGeometry":case "PlaneBufferGeometry":var geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,
data.heightSegments,data.depthSegments);break;case "CircleGeometry":case "CircleBufferGeometry":geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case "CylinderGeometry":case "CylinderBufferGeometry":geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case "ConeGeometry":case "ConeBufferGeometry":geometry=new Geometries[data.type](data.radius,
data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case "SphereGeometry":case "SphereBufferGeometry":geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case "DodecahedronGeometry":case "DodecahedronBufferGeometry":case "IcosahedronGeometry":case "IcosahedronBufferGeometry":case "OctahedronGeometry":case "OctahedronBufferGeometry":case "TetrahedronGeometry":case "TetrahedronBufferGeometry":geometry=
new Geometries[data.type](data.radius,data.detail);break;case "RingGeometry":case "RingBufferGeometry":geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case "TorusGeometry":case "TorusBufferGeometry":geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case "TorusKnotGeometry":case "TorusKnotBufferGeometry":geometry=new Geometries[data.type](data.radius,
data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case "TubeGeometry":case "TubeBufferGeometry":geometry=new Geometries[data.type]((new Curves[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case "LatheGeometry":case "LatheBufferGeometry":geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case "PolyhedronGeometry":case "PolyhedronBufferGeometry":geometry=new Geometries[data.type](data.vertices,
data.indices,data.radius,data.details);break;case "ShapeGeometry":case "ShapeBufferGeometry":geometry=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometry.push(shape)}geometry=new Geometries[data.type](geometry,data.curveSegments);break;case "ExtrudeGeometry":case "ExtrudeBufferGeometry":geometry=[];j=0;for(jl=data.shapes.length;j<jl;j++)shape=shapes[data.shapes[j]],geometry.push(shape);j=data.options.extrudePath;void 0!==j&&(data.options.extrudePath=(new Curves[j.type]).fromJSON(j));
geometry=new Geometries[data.type](geometry,data.options);break;case "BufferGeometry":geometry=bufferGeometryLoader.parse(data);break;case "Geometry":"THREE"in window&&"LegacyJSONLoader"in THREE?geometry=(new THREE.LegacyJSONLoader).parse(data,this.resourcePath).geometry:console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+data.type+'"');continue}geometry.uuid=
data.uuid;void 0!==data.name&&(geometry.name=data.name);!0===geometry.isBufferGeometry&&void 0!==data.userData&&(geometry.userData=data.userData);geometries[data.uuid]=geometry}return geometries},parseMaterials:function(json,textures){var cache={},materials={};if(void 0!==json){var loader=new MaterialLoader;loader.setTextures(textures);textures=0;for(var l=json.length;textures<l;textures++){var data=json[textures];if("MultiMaterial"===data.type){for(var array=[],j=0;j<data.materials.length;j++){var material=
data.materials[j];void 0===cache[material.uuid]&&(cache[material.uuid]=loader.parse(material));array.push(cache[material.uuid])}materials[data.uuid]=array}else void 0===cache[data.uuid]&&(cache[data.uuid]=loader.parse(data)),materials[data.uuid]=cache[data.uuid]}}return materials},parseAnimations:function(json){for(var animations=[],i=0;i<json.length;i++){var data=json[i],clip=AnimationClip.parse(data);void 0!==data.uuid&&(clip.uuid=data.uuid);animations.push(clip)}return animations},parseImages:function(json,
onLoad){function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url)},void 0,function(){scope.manager.itemError(url);scope.manager.itemEnd(url)})}var scope=this,images={};if(void 0!==json&&0<json.length){onLoad=new LoadingManager(onLoad);var loader=new ImageLoader(onLoad);loader.setCrossOrigin(this.crossOrigin);onLoad=0;for(var il=json.length;onLoad<il;onLoad++){var image=json[onLoad],url$jscomp$0=image.url;if(Array.isArray(url$jscomp$0)){images[image.uuid]=
[];for(var j=0,jl=url$jscomp$0.length;j<jl;j++){var currentUrl=url$jscomp$0[j];currentUrl=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(currentUrl)?currentUrl:scope.resourcePath+currentUrl;images[image.uuid].push(loadImage(currentUrl))}}else currentUrl=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(image.url)?image.url:scope.resourcePath+image.url,images[image.uuid]=loadImage(currentUrl)}}return images},parseTextures:function(json,images){function parseConstant(value,type){if("number"===typeof value)return value;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
value);return type[value]}var textures={};if(void 0!==json)for(var i=0,l=json.length;i<l;i++){var data=json[i];void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid);void 0===images[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image);var texture=Array.isArray(images[data.image])?new CubeTexture(images[data.image]):new Texture(images[data.image]);texture.needsUpdate=!0;texture.uuid=data.uuid;void 0!==data.name&&(texture.name=data.name);void 0!==
data.mapping&&(texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING));void 0!==data.offset&&texture.offset.fromArray(data.offset);void 0!==data.repeat&&texture.repeat.fromArray(data.repeat);void 0!==data.center&&texture.center.fromArray(data.center);void 0!==data.rotation&&(texture.rotation=data.rotation);void 0!==data.wrap&&(texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING),texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING));void 0!==data.format&&(texture.format=data.format);
void 0!==data.type&&(texture.type=data.type);void 0!==data.encoding&&(texture.encoding=data.encoding);void 0!==data.minFilter&&(texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER));void 0!==data.magFilter&&(texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER));void 0!==data.anisotropy&&(texture.anisotropy=data.anisotropy);void 0!==data.flipY&&(texture.flipY=data.flipY);void 0!==data.premultiplyAlpha&&(texture.premultiplyAlpha=data.premultiplyAlpha);void 0!==data.unpackAlignment&&
(texture.unpackAlignment=data.unpackAlignment);textures[data.uuid]=texture}return textures},parseObject:function(data,geometries,materials){function getGeometry(name){void 0===geometries[name]&&console.warn("THREE.ObjectLoader: Undefined geometry",name);return geometries[name]}function getMaterial(name){if(void 0!==name){if(Array.isArray(name)){for(var array=[],i=0,l=name.length;i<l;i++){var uuid=name[i];void 0===materials[uuid]&&console.warn("THREE.ObjectLoader: Undefined material",uuid);array.push(materials[uuid])}return array}void 0===
materials[name]&&console.warn("THREE.ObjectLoader: Undefined material",name);return materials[name]}}switch(data.type){case "Scene":var object=new Scene;void 0!==data.background&&Number.isInteger(data.background)&&(object.background=new Color(data.background));void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=new FogExp2(data.fog.color,data.fog.density)));break;case "PerspectiveCamera":object=new PerspectiveCamera(data.fov,
data.aspect,data.near,data.far);void 0!==data.focus&&(object.focus=data.focus);void 0!==data.zoom&&(object.zoom=data.zoom);void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge);void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset);void 0!==data.view&&(object.view=Object.assign({},data.view));break;case "OrthographicCamera":object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);void 0!==data.zoom&&(object.zoom=data.zoom);void 0!==data.view&&(object.view=
Object.assign({},data.view));break;case "AmbientLight":object=new AmbientLight(data.color,data.intensity);break;case "DirectionalLight":object=new DirectionalLight(data.color,data.intensity);break;case "PointLight":object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case "RectAreaLight":object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case "SpotLight":object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);
break;case "HemisphereLight":object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case "SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case "Mesh":object=getGeometry(data.geometry);var material=getMaterial(data.material);object=object.bones&&0<object.bones.length?new SkinnedMesh(object,material):new Mesh(object,material);void 0!==data.drawMode&&object.setDrawMode(data.drawMode);break;case "LOD":object=new LOD;break;case "Line":object=
new Line(getGeometry(data.geometry),getMaterial(data.material),data.mode);break;case "LineLoop":object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case "LineSegments":object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case "PointCloud":case "Points":object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case "Sprite":object=new Sprite(getMaterial(data.material));break;case "Group":object=new Group;break;default:object=
new Object3D}object.uuid=data.uuid;void 0!==data.name&&(object.name=data.name);void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),
void 0!==data.scale&&object.scale.fromArray(data.scale));void 0!==data.castShadow&&(object.castShadow=data.castShadow);void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow);data.shadow&&(void 0!==data.shadow.bias&&(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=this.parseObject(data.shadow.camera)));
void 0!==data.visible&&(object.visible=data.visible);void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled);void 0!==data.renderOrder&&(object.renderOrder=data.renderOrder);void 0!==data.userData&&(object.userData=data.userData);void 0!==data.layers&&(object.layers.mask=data.layers);if(void 0!==data.children){material=data.children;for(var i$jscomp$0=0;i$jscomp$0<material.length;i$jscomp$0++)object.add(this.parseObject(material[i$jscomp$0],geometries,materials))}if("LOD"===data.type)for(data=
data.levels,material=0;material<data.length;material++){i$jscomp$0=data[material];var child=object.getObjectByProperty("uuid",i$jscomp$0.object);void 0!==child&&object.addLevel(child,i$jscomp$0.distance)}return object}});var TEXTURE_MAPPING={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},TEXTURE_WRAPPING={RepeatWrapping:1E3,
ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},TEXTURE_FILTER={NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008};ImageBitmapLoader.prototype={constructor:ImageBitmapLoader,setOptions:function(options){this.options=options;return this},load:function(url,onLoad,onProgress,onError){void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=
this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0),cached;fetch(url).then(function(res){return res.blob()}).then(function(blob){return createImageBitmap(blob,scope.options)}).then(function(imageBitmap){Cache.add(url,imageBitmap);onLoad&&onLoad(imageBitmap);scope.manager.itemEnd(url)}).catch(function(e){onError&&onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url)});scope.manager.itemStart(url)},
setCrossOrigin:function(){return this},setPath:function(value){this.path=value;return this}};Object.assign(ShapePath.prototype,{moveTo:function(x,y){this.currentPath=new Path;this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y)},lineTo:function(x,y){this.currentPath.lineTo(x,y)},quadraticCurveTo:function(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY)},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY)},
splineThru:function(pts){this.currentPath.splineThru(pts)},toShapes:function(isCCW,noHoles){function toShapesNoHoles(inSubpaths){for(var shapes=[],i=0,l=inSubpaths.length;i<l;i++){var tmpPath=inSubpaths[i],tmpShape=new Shape;tmpShape.curves=tmpPath.curves;shapes.push(tmpShape)}return shapes}function isPointInsidePolygon(inPt,inPolygon){for(var polyLen=inPolygon.length,inside=!1,p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p],edgeHighPt=inPolygon[q],edgeDx=edgeHighPt.x-edgeLowPt.x,edgeDy=
edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){if(0>edgeDy&&(edgeLowPt=inPolygon[q],edgeDx=-edgeDx,edgeHighPt=inPolygon[p],edgeDy=-edgeDy),!(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y))if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return!0}else{p=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(0===p)return!0;0>p||(inside=!inside)}}else if(inPt.y===edgeLowPt.y&&(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x))return!0}return inside}var isClockWise=
ShapeUtils.isClockWise,subPaths=this.subPaths;if(0===subPaths.length)return[];if(!0===noHoles)return toShapesNoHoles(subPaths);noHoles=[];if(1===subPaths.length){var tmpPath=subPaths[0];var tmpShape=new Shape;tmpShape.curves=tmpPath.curves;noHoles.push(tmpShape);return noHoles}var holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;tmpShape=[];var newShapes=[],newShapeHoles=[],mainIdx=0;newShapes[mainIdx]=void 0;newShapeHoles[mainIdx]=[];for(var i$jscomp$0=0,l$jscomp$0=
subPaths.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){tmpPath=subPaths[i$jscomp$0];var tmpPoints=tmpPath.getPoints();var solid=isClockWise(tmpPoints);(solid=isCCW?!solid:solid)?(!holesFirst&&newShapes[mainIdx]&&mainIdx++,newShapes[mainIdx]={s:new Shape,p:tmpPoints},newShapes[mainIdx].s.curves=tmpPath.curves,holesFirst&&mainIdx++,newShapeHoles[mainIdx]=[]):newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]})}if(!newShapes[0])return toShapesNoHoles(subPaths);if(1<newShapes.length){i$jscomp$0=!1;isCCW=
[];isClockWise=0;for(subPaths=newShapes.length;isClockWise<subPaths;isClockWise++)tmpShape[isClockWise]=[];isClockWise=0;for(subPaths=newShapes.length;isClockWise<subPaths;isClockWise++)for(tmpPath=newShapeHoles[isClockWise],solid=0;solid<tmpPath.length;solid++){holesFirst=tmpPath[solid];mainIdx=!0;for(tmpPoints=0;tmpPoints<newShapes.length;tmpPoints++)isPointInsidePolygon(holesFirst.p,newShapes[tmpPoints].p)&&(isClockWise!==tmpPoints&&isCCW.push({froms:isClockWise,tos:tmpPoints,hole:solid}),mainIdx?
(mainIdx=!1,tmpShape[tmpPoints].push(holesFirst)):i$jscomp$0=!0);mainIdx&&tmpShape[isClockWise].push(holesFirst)}0<isCCW.length&&(i$jscomp$0||(newShapeHoles=tmpShape))}i$jscomp$0=0;for(isClockWise=newShapes.length;i$jscomp$0<isClockWise;i$jscomp$0++)for(tmpShape=newShapes[i$jscomp$0].s,noHoles.push(tmpShape),isCCW=newShapeHoles[i$jscomp$0],subPaths=0,tmpPath=isCCW.length;subPaths<tmpPath;subPaths++)tmpShape.holes.push(isCCW[subPaths].h);return noHoles}});Object.assign(Font.prototype,{isFont:!0,generateShapes:function(text,
size$jscomp$0){void 0===size$jscomp$0&&(size$jscomp$0=100);var shapes=[],size=size$jscomp$0;size$jscomp$0=this.data;var chars=Array.from?Array.from(text):String(text).split("");size/=size$jscomp$0.resolution;var line_height=(size$jscomp$0.boundingBox.yMax-size$jscomp$0.boundingBox.yMin+size$jscomp$0.underlineThickness)*size;text=[];for(var offsetX=0,offsetY=0,i=0;i<chars.length;i++){var char=chars[i];if("\n"===char)offsetX=0,offsetY-=line_height;else{var ret=size;var offsetX$jscomp$0=offsetX,offsetY$jscomp$0=
offsetY;if(char=size$jscomp$0.glyphs[char]||size$jscomp$0.glyphs["?"]){var path=new ShapePath;if(char.o)for(var outline=char._cachedOutline||(char._cachedOutline=char.o.split(" ")),i$jscomp$0=0,l=outline.length;i$jscomp$0<l;)switch(outline[i$jscomp$0++]){case "m":var cpx2=outline[i$jscomp$0++]*ret+offsetX$jscomp$0;var cpy2=outline[i$jscomp$0++]*ret+offsetY$jscomp$0;path.moveTo(cpx2,cpy2);break;case "l":cpx2=outline[i$jscomp$0++]*ret+offsetX$jscomp$0;cpy2=outline[i$jscomp$0++]*ret+offsetY$jscomp$0;
path.lineTo(cpx2,cpy2);break;case "q":var cpx=outline[i$jscomp$0++]*ret+offsetX$jscomp$0;var cpy=outline[i$jscomp$0++]*ret+offsetY$jscomp$0;var cpx1=outline[i$jscomp$0++]*ret+offsetX$jscomp$0;var cpy1=outline[i$jscomp$0++]*ret+offsetY$jscomp$0;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case "b":cpx=outline[i$jscomp$0++]*ret+offsetX$jscomp$0,cpy=outline[i$jscomp$0++]*ret+offsetY$jscomp$0,cpx1=outline[i$jscomp$0++]*ret+offsetX$jscomp$0,cpy1=outline[i$jscomp$0++]*ret+offsetY$jscomp$0,cpx2=outline[i$jscomp$0++]*
ret+offsetX$jscomp$0,cpy2=outline[i$jscomp$0++]*ret+offsetY$jscomp$0,path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy)}ret={offsetX:char.ha*ret,path:path}}else ret=void 0;offsetX+=ret.offsetX;text.push(ret.path)}}size$jscomp$0=0;for(chars=text.length;size$jscomp$0<chars;size$jscomp$0++)Array.prototype.push.apply(shapes,text[size$jscomp$0].toShapes());return shapes}});Object.assign(FontLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(this.manager);loader.setPath(this.path);
loader.load(url,function(text){try{var json=JSON.parse(text)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),json=JSON.parse(text.substring(65,text.length-2))}text=scope.parse(json);onLoad&&onLoad(text)},onProgress,onError)},parse:function(json){return new Font(json)},setPath:function(value){this.path=value;return this}});Loader.Handlers={handlers:[],add:function(regex,loader){this.handlers.push(regex,loader)},get:function(file){for(var handlers=
this.handlers,i=0,l=handlers.length;i<l;i+=2){var loader=handlers[i+1];if(handlers[i].test(file))return loader}return null}};Object.assign(Loader.prototype,{crossOrigin:"anonymous",onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(materials,texturePath,crossOrigin){for(var array=[],i=0;i<materials.length;++i)array[i]=this.createMaterial(materials[i],texturePath,crossOrigin);return array},createMaterial:function(){var BlendingMode={NoBlending:0,
NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},color=new Color,textureLoader=new TextureLoader,materialLoader=new MaterialLoader;return function(m,texturePath,crossOrigin){function loadTexture(path,repeat,offset,wrap,anisotropy){path=texturePath+path;var loader=Loader.Handlers.get(path);null!==loader?path=loader.load(path):(textureLoader.setCrossOrigin(crossOrigin),path=textureLoader.load(path));void 0!==repeat&&(path.repeat.fromArray(repeat),1!==repeat[0]&&
(path.wrapS=1E3),1!==repeat[1]&&(path.wrapT=1E3));void 0!==offset&&path.offset.fromArray(offset);void 0!==wrap&&("repeat"===wrap[0]&&(path.wrapS=1E3),"mirror"===wrap[0]&&(path.wrapS=1002),"repeat"===wrap[1]&&(path.wrapT=1E3),"mirror"===wrap[1]&&(path.wrapT=1002));void 0!==anisotropy&&(path.anisotropy=anisotropy);repeat=_Math.generateUUID();textures[repeat]=path;return repeat}var textures={},json={uuid:_Math.generateUUID(),type:"MeshLambertMaterial"},name;for(name in m){var value=m[name];switch(name){case "DbgColor":case "DbgIndex":case "opticalDensity":case "illumination":break;
case "DbgName":json.name=value;break;case "blending":json.blending=BlendingMode[value];break;case "colorAmbient":case "mapAmbient":console.warn("THREE.Loader.createMaterial:",name,"is no longer supported.");break;case "colorDiffuse":json.color=color.fromArray(value).getHex();break;case "colorSpecular":json.specular=color.fromArray(value).getHex();break;case "colorEmissive":json.emissive=color.fromArray(value).getHex();break;case "specularCoef":json.shininess=value;break;case "shading":"basic"===value.toLowerCase()&&
(json.type="MeshBasicMaterial");"phong"===value.toLowerCase()&&(json.type="MeshPhongMaterial");"standard"===value.toLowerCase()&&(json.type="MeshStandardMaterial");break;case "mapDiffuse":json.map=loadTexture(value,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy);break;case "mapDiffuseRepeat":case "mapDiffuseOffset":case "mapDiffuseWrap":case "mapDiffuseAnisotropy":break;case "mapEmissive":json.emissiveMap=loadTexture(value,m.mapEmissiveRepeat,m.mapEmissiveOffset,m.mapEmissiveWrap,
m.mapEmissiveAnisotropy);break;case "mapEmissiveRepeat":case "mapEmissiveOffset":case "mapEmissiveWrap":case "mapEmissiveAnisotropy":break;case "mapLight":json.lightMap=loadTexture(value,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy);break;case "mapLightRepeat":case "mapLightOffset":case "mapLightWrap":case "mapLightAnisotropy":break;case "mapAO":json.aoMap=loadTexture(value,m.mapAORepeat,m.mapAOOffset,m.mapAOWrap,m.mapAOAnisotropy);break;case "mapAORepeat":case "mapAOOffset":case "mapAOWrap":case "mapAOAnisotropy":break;
case "mapBump":json.bumpMap=loadTexture(value,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy);break;case "mapBumpScale":json.bumpScale=value;break;case "mapBumpRepeat":case "mapBumpOffset":case "mapBumpWrap":case "mapBumpAnisotropy":break;case "mapNormal":json.normalMap=loadTexture(value,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy);break;case "mapNormalFactor":json.normalScale=value;break;case "mapNormalRepeat":case "mapNormalOffset":case "mapNormalWrap":case "mapNormalAnisotropy":break;
case "mapSpecular":json.specularMap=loadTexture(value,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy);break;case "mapSpecularRepeat":case "mapSpecularOffset":case "mapSpecularWrap":case "mapSpecularAnisotropy":break;case "mapMetalness":json.metalnessMap=loadTexture(value,m.mapMetalnessRepeat,m.mapMetalnessOffset,m.mapMetalnessWrap,m.mapMetalnessAnisotropy);break;case "mapMetalnessRepeat":case "mapMetalnessOffset":case "mapMetalnessWrap":case "mapMetalnessAnisotropy":break;
case "mapRoughness":json.roughnessMap=loadTexture(value,m.mapRoughnessRepeat,m.mapRoughnessOffset,m.mapRoughnessWrap,m.mapRoughnessAnisotropy);break;case "mapRoughnessRepeat":case "mapRoughnessOffset":case "mapRoughnessWrap":case "mapRoughnessAnisotropy":break;case "mapAlpha":json.alphaMap=loadTexture(value,m.mapAlphaRepeat,m.mapAlphaOffset,m.mapAlphaWrap,m.mapAlphaAnisotropy);break;case "mapAlphaRepeat":case "mapAlphaOffset":case "mapAlphaWrap":case "mapAlphaAnisotropy":break;case "flipSided":json.side=
1;break;case "doubleSided":json.side=2;break;case "transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity");json.opacity=value;break;case "depthTest":case "depthWrite":case "colorWrite":case "opacity":case "reflectivity":case "transparent":case "visible":case "wireframe":json[name]=value;break;case "vertexColors":!0===value&&(json.vertexColors=2);"face"===value&&(json.vertexColors=1);break;default:console.error("THREE.Loader.createMaterial: Unsupported",
name,value)}}"MeshBasicMaterial"===json.type&&delete json.emissive;"MeshPhongMaterial"!==json.type&&delete json.specular;1>json.opacity&&(json.transparent=!0);materialLoader.setTextures(textures);return materialLoader.parse(json)}}()});var context$jscomp$0,AudioContext={getContext:function(){void 0===context$jscomp$0&&(context$jscomp$0=new (window.AudioContext||window.webkitAudioContext));return context$jscomp$0},setContext:function(value){context$jscomp$0=value}};Object.assign(AudioLoader.prototype,
{load:function(url,onLoad,onProgress,onError){var loader=new FileLoader(this.manager);loader.setResponseType("arraybuffer");loader.setPath(this.path);loader.load(url,function(buffer){buffer=buffer.slice(0);AudioContext.getContext().decodeAudioData(buffer,function(audioBuffer){onLoad(audioBuffer)})},onProgress,onError)},setPath:function(value){this.path=value;return this}});Object.assign(StereoCamera.prototype,{update:function(){var instance,focus,fov,aspect,near,far,zoom,eyeSep,eyeRight=new Matrix4,
eyeLeft=new Matrix4;return function(camera){if(instance!==this||focus!==camera.focus||fov!==camera.fov||aspect!==camera.aspect*this.aspect||near!==camera.near||far!==camera.far||zoom!==camera.zoom||eyeSep!==this.eyeSep){instance=this;focus=camera.focus;fov=camera.fov;aspect=camera.aspect*this.aspect;near=camera.near;far=camera.far;zoom=camera.zoom;var projectionMatrix=camera.projectionMatrix.clone();eyeSep=this.eyeSep/2;var eyeSepOnProjection=eyeSep*near/focus,ymax=near*Math.tan(_Math.DEG2RAD*fov*
.5)/zoom;eyeLeft.elements[12]=-eyeSep;eyeRight.elements[12]=eyeSep;var xmin=-ymax*aspect+eyeSepOnProjection;var xmax=ymax*aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);xmin=-ymax*aspect-eyeSepOnProjection;xmax=ymax*aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix)}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);
this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight)}}()});CubeCamera.prototype=Object.create(Object3D.prototype);CubeCamera.prototype.constructor=CubeCamera;Object.assign(Clock.prototype,{start:function(){this.oldTime=this.startTime=("undefined"===typeof performance?Date:performance).now();this.elapsedTime=0;this.running=!0},stop:function(){this.getElapsedTime();this.autoStart=this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var diff=
0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var newTime=("undefined"===typeof performance?Date:performance).now();diff=(newTime-this.oldTime)/1E3;this.oldTime=newTime;this.elapsedTime+=diff}return diff}});AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),
this.filter=null);return this},getFilter:function(){return this.filter},setFilter:function(value){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,
.01);return this},updateMatrixWorld:function(){var position=new Vector3,quaternion=new Quaternion,scale=new Vector3,orientation=new Vector3,clock=new Clock;return function(force){Object3D.prototype.updateMatrixWorld.call(this,force);force=this.context.listener;var up=this.up;this.timeDelta=clock.getDelta();this.matrixWorld.decompose(position,quaternion,scale);orientation.set(0,0,-1).applyQuaternion(quaternion);if(force.positionX){var endTime=this.context.currentTime+this.timeDelta;force.positionX.linearRampToValueAtTime(position.x,
endTime);force.positionY.linearRampToValueAtTime(position.y,endTime);force.positionZ.linearRampToValueAtTime(position.z,endTime);force.forwardX.linearRampToValueAtTime(orientation.x,endTime);force.forwardY.linearRampToValueAtTime(orientation.y,endTime);force.forwardZ.linearRampToValueAtTime(orientation.z,endTime);force.upX.linearRampToValueAtTime(up.x,endTime);force.upY.linearRampToValueAtTime(up.y,endTime);force.upZ.linearRampToValueAtTime(up.z,endTime)}else force.setPosition(position.x,position.y,
position.z),force.setOrientation(orientation.x,orientation.y,orientation.z,up.x,up.y,up.z)}}()});Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain},setNodeSource:function(audioNode){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=audioNode;this.connect();return this},setMediaElementSource:function(mediaElement){this.hasPlaybackControl=!1;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(mediaElement);
this.connect();return this},setBuffer:function(audioBuffer){this.buffer=audioBuffer;this.sourceType="buffer";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else{var source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.onended=this.onEnded.bind(this);this.startTime=this.context.currentTime;
source.start(this.startTime,this.offset);this.isPlaying=!0;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");
else return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var i=1,l=this.filters.length;i<
l;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(value){value||(value=[]);!0===this.isPlaying?(this.disconnect(),this.filters=value,this.connect()):this.filters=value;return this},setDetune:function(value){this.detune=value;if(void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,
this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(filter){return this.setFilters(filter?[filter]:[])},setPlaybackRate:function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.playbackRate=value,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},
onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=value,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,
.01);return this}});PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(value){this.panner.refDistance=value;return this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(value){this.panner.rolloffFactor=value;return this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(value){this.panner.distanceModel=
value;return this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(value){this.panner.maxDistance=value;return this},setDirectionalCone:function(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this},updateMatrixWorld:function(){var position=new Vector3,quaternion=new Quaternion,scale=new Vector3,orientation=new Vector3;return function(force){Object3D.prototype.updateMatrixWorld.call(this,
force);if(!0!==this.hasPlaybackControl||!1!==this.isPlaying)if(this.matrixWorld.decompose(position,quaternion,scale),orientation.set(0,0,1).applyQuaternion(quaternion),force=this.panner,force.positionX){var endTime=this.context.currentTime+this.listener.timeDelta;force.positionX.linearRampToValueAtTime(position.x,endTime);force.positionY.linearRampToValueAtTime(position.y,endTime);force.positionZ.linearRampToValueAtTime(position.z,endTime);force.orientationX.linearRampToValueAtTime(orientation.x,
endTime);force.orientationY.linearRampToValueAtTime(orientation.y,endTime);force.orientationZ.linearRampToValueAtTime(orientation.z,endTime)}else force.setPosition(position.x,position.y,position.z),force.setOrientation(orientation.x,orientation.y,orientation.z)}}()});Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var value=0,data=this.getFrequencyData(),i=0;i<data.length;i++)value+=
data[i];return value/data.length}});Object.assign(PropertyMixer.prototype,{accumulate:function(accuIndex,weight){var buffer=this.buffer,stride=this.valueSize;accuIndex=accuIndex*stride+stride;var currentWeight=this.cumulativeWeight;if(0===currentWeight){for(currentWeight=0;currentWeight!==stride;++currentWeight)buffer[accuIndex+currentWeight]=buffer[currentWeight];currentWeight=weight}else currentWeight+=weight,this._mixBufferRegion(buffer,accuIndex,0,weight/currentWeight,stride);this.cumulativeWeight=
currentWeight},apply:function(accuIndex){var stride=this.valueSize,buffer=this.buffer;accuIndex=accuIndex*stride+stride;var weight=this.cumulativeWeight,binding=this.binding;this.cumulativeWeight=0;1>weight&&this._mixBufferRegion(buffer,accuIndex,3*stride,1-weight,stride);weight=stride;for(var e=stride+stride;weight!==e;++weight)if(buffer[weight]!==buffer[weight+stride]){binding.setValue(buffer,accuIndex);break}},saveOriginalState:function(){var buffer=this.buffer,stride=this.valueSize,originalValueOffset=
3*stride;this.binding.getValue(buffer,originalValueOffset);for(var i=stride;i!==originalValueOffset;++i)buffer[i]=buffer[originalValueOffset+i%stride];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(buffer,dstOffset,srcOffset,t,stride){if(.5<=t)for(t=0;t!==stride;++t)buffer[dstOffset+t]=buffer[srcOffset+t]},_slerp:function(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,
t)},_lerp:function(buffer,dstOffset,srcOffset,t,stride){for(var s=1-t,i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t}}});Object.assign(Composite.prototype,{getValue:function(array,offset){this.bind();var binding=this._bindings[this._targetGroup.nCachedObjects_];void 0!==binding&&binding.getValue(array,offset)},setValue:function(array,offset){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].setValue(array,
offset)},bind:function(){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].bind()},unbind:function(){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].unbind()}});Object.assign(PropertyBinding,{Composite:Composite,create:function(root,path,parsedPath){return root&&root.isAnimationObjectGroup?new PropertyBinding.Composite(root,path,parsedPath):new PropertyBinding(root,path,parsedPath)},
sanitizeNodeName:function(){var reservedRe=/[\[\]\.:\/]/g;return function(name){return name.replace(/\s/g,"_").replace(reservedRe,"")}}(),parseTrackName:function(){var wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",directoryRe=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]");wordCharOrDot=/(WCOD+)?/.source.replace("WCOD",wordCharOrDot);var objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),
trackRe=new RegExp("^"+directoryRe+wordCharOrDot+objectRe+propertyRe+"$"),supportedObjectNames=["material","materials","bones"];return function(trackName){var matches=trackRe.exec(trackName);if(!matches)throw Error("PropertyBinding: Cannot parse trackName: "+trackName);matches={nodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],propertyIndex:matches[6]};var lastDot=matches.nodeName&&matches.nodeName.lastIndexOf(".");if(void 0!==lastDot&&-1!==lastDot){var objectName=
matches.nodeName.substring(lastDot+1);-1!==supportedObjectNames.indexOf(objectName)&&(matches.nodeName=matches.nodeName.substring(0,lastDot),matches.objectName=objectName)}if(null===matches.propertyName||0===matches.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+trackName);return matches}}(),findNode:function(root,nodeName){if(!nodeName||""===nodeName||"root"===nodeName||"."===nodeName||-1===nodeName||nodeName===root.name||nodeName===root.uuid)return root;
if(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(void 0!==bone)return bone}if(root.children){var searchNodeSubtree=function(children){for(var i=0;i<children.length;i++){var childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName||(childNode=searchNodeSubtree(childNode.children)))return childNode}return null};if(root=searchNodeSubtree(root.children))return root}return null}});Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},
BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(buffer,offset){buffer[offset]=this.node[this.propertyName]},function(buffer,offset){for(var source=this.resolvedProperty,i=0,n=source.length;i!==n;++i)buffer[offset++]=source[i]},function(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex]},function(buffer,offset){this.resolvedProperty.toArray(buffer,offset)}],SetterByBindingTypeAndVersioning:[[function(buffer,
offset){this.targetObject[this.propertyName]=buffer[offset]},function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=!0},function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++]},function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=
buffer[offset++];this.targetObject.needsUpdate=!0},function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset]},function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=!0},function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=
!0}],[function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset)},function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=!0},function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(targetArray,offset){this.bind();this.getValue(targetArray,offset)},setValue:function(sourceArray,offset){this.bind();this.setValue(sourceArray,offset)},bind:function(){var targetObject=
this.node,parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName,propertyIndex=parsedPath.propertyIndex;targetObject||(this.node=targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(targetObject){if(objectName){var objectIndex=parsedPath.objectIndex;switch(objectName){case "materials":if(!targetObject.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",
this);return}if(!targetObject.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}targetObject=targetObject.material.materials;break;case "bones":if(!targetObject.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}targetObject=targetObject.skeleton.bones;for(objectName=0;objectName<targetObject.length;objectName++)if(targetObject[objectName].name===
objectIndex){objectIndex=objectName;break}break;default:if(void 0===targetObject[objectName]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}targetObject=targetObject[objectName]}if(void 0!==objectIndex){if(void 0===targetObject[objectIndex]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,targetObject);return}targetObject=targetObject[objectIndex]}}objectIndex=targetObject[propertyName];
if(void 0===objectIndex)console.error("THREE.PropertyBinding: Trying to update property for track: "+parsedPath.nodeName+"."+propertyName+" but it wasn't found.",targetObject);else{parsedPath=this.Versioning.None;this.targetObject=targetObject;void 0!==targetObject.needsUpdate?parsedPath=this.Versioning.NeedsUpdate:void 0!==targetObject.matrixWorldNeedsUpdate&&(parsedPath=this.Versioning.MatrixWorldNeedsUpdate);objectName=this.BindingType.Direct;if(void 0!==propertyIndex){if("morphTargetInfluences"===
propertyName){if(!targetObject.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(objectName=0;objectName<this.node.geometry.morphAttributes.position.length;objectName++)if(targetObject.geometry.morphAttributes.position[objectName].name===
propertyIndex){propertyIndex=objectName;break}}else{if(!targetObject.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(objectName=0;objectName<this.node.geometry.morphTargets.length;objectName++)if(targetObject.geometry.morphTargets[objectName].name===propertyIndex){propertyIndex=objectName;break}}}objectName=this.BindingType.ArrayElement;this.resolvedProperty=objectIndex;this.propertyIndex=
propertyIndex}else void 0!==objectIndex.fromArray&&void 0!==objectIndex.toArray?(objectName=this.BindingType.HasFromToArray,this.resolvedProperty=objectIndex):Array.isArray(objectIndex)?(objectName=this.BindingType.EntireArray,this.resolvedProperty=objectIndex):this.propertyName=propertyName;this.getValue=this.GetterByBindingType[objectName];this.setValue=this.SetterByBindingTypeAndVersioning[objectName][parsedPath]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+
" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){for(var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,paths=
this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length,knownObject=void 0,i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0===index){index=nObjects++;indicesByUUID[uuid]=index;objects.push(object);uuid=0;for(var m=nBindings;uuid!==m;++uuid)bindings[uuid].push(new PropertyBinding(object,paths[uuid],parsedPaths[uuid]))}else if(index<nCachedObjects){knownObject=objects[index];var firstActiveIndex=--nCachedObjects;
m=objects[firstActiveIndex];indicesByUUID[m.uuid]=index;objects[index]=m;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;uuid=0;for(m=nBindings;uuid!==m;++uuid){var bindingsForPath=bindings[uuid],binding=bindingsForPath[index];bindingsForPath[index]=bindingsForPath[firstActiveIndex];void 0===binding&&(binding=new PropertyBinding(object,paths[uuid],parsedPaths[uuid]));bindingsForPath[firstActiveIndex]=binding}}else objects[index]!==knownObject&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=
nCachedObjects},remove:function(){for(var objects=this._objects,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0!==index&&index>=nCachedObjects){var lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=
lastCachedIndex;objects[lastCachedIndex]=object;object=0;for(uuid=nBindings;object!==uuid;++object){firstActiveObject=bindings[object];var binding=firstActiveObject[index];firstActiveObject[index]=firstActiveObject[lastCachedIndex];firstActiveObject[lastCachedIndex]=binding}}}this.nCachedObjects_=nCachedObjects},uncache:function(){for(var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,
i=0,n=arguments.length;i!==n;++i){var uuid=arguments[i].uuid,index=indicesByUUID[uuid];if(void 0!==index)if(delete indicesByUUID[uuid],index<nCachedObjects){uuid=--nCachedObjects;var lastCachedObject=objects[uuid],lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[lastObject.uuid]=uuid;objects[uuid]=lastObject;objects.pop();lastCachedObject=0;for(lastObject=nBindings;lastCachedObject!==lastObject;++lastCachedObject){var bindingsForPath=
bindings[lastCachedObject],last=bindingsForPath[lastIndex];bindingsForPath[index]=bindingsForPath[uuid];bindingsForPath[uuid]=last;bindingsForPath.pop()}}else for(lastIndex=--nObjects,lastObject=objects[lastIndex],indicesByUUID[lastObject.uuid]=index,objects[index]=lastObject,objects.pop(),lastCachedObject=0,lastObject=nBindings;lastCachedObject!==lastObject;++lastCachedObject)bindingsForPath=bindings[lastCachedObject],bindingsForPath[index]=bindingsForPath[lastIndex],bindingsForPath.pop()}this.nCachedObjects_=
nCachedObjects},subscribe_:function(path,parsedPath){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path],bindings=this._bindings;if(void 0!==index)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nCachedObjects=this.nCachedObjects_,bindingsForPath=Array(objects.length);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);indicesByPath=nCachedObjects;for(index=
objects.length;indicesByPath!==index;++indicesByPath)bindingsForPath[indicesByPath]=new PropertyBinding(objects[indicesByPath],path,parsedPath);return bindingsForPath},unsubscribe_:function(path){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(void 0!==index){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex];indicesByPath[path[lastBindingsIndex]]=index;bindings[index]=
lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop()}}});Object.assign(AnimationAction.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&
!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(time){this._startTime=time;return this},setLoop:function(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this},setEffectiveWeight:function(weight){this.weight=weight;this._effectiveWeight=this.enabled?weight:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(duration){return this._scheduleFading(duration,
0,1)},fadeOut:function(duration){return this._scheduleFading(duration,1,0)},crossFadeFrom:function(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){warp=this._clip.duration;var fadeOutDuration=fadeOutAction._clip.duration,endStartRatio=warp/fadeOutDuration;fadeOutAction.warp(1,fadeOutDuration/warp,duration);this.warp(endStartRatio,1,duration)}return this},crossFadeTo:function(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp)},
stopFading:function(){var weightInterpolant=this._weightInterpolant;null!==weightInterpolant&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(weightInterpolant));return this},setEffectiveTimeScale:function(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping()},
syncWith:function(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping()},halt:function(duration){return this.warp(this._effectiveTimeScale,0,duration)},warp:function(startTimeScale,endTimeScale,duration){var mixer=this._mixer,now=mixer.time,interpolant=this._timeScaleInterpolant,timeScale=this.timeScale;null===interpolant&&(this._timeScaleInterpolant=interpolant=mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;
mixer[0]=now;mixer[1]=now+duration;interpolant[0]=startTimeScale/timeScale;interpolant[1]=endTimeScale/timeScale;return this},stopWarping:function(){var timeScaleInterpolant=this._timeScaleInterpolant;null!==timeScaleInterpolant&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(timeScaleInterpolant));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(time,
deltaTime,timeDirection,accuIndex){if(this.enabled){var startTime=this._startTime;if(null!==startTime){deltaTime=(time-startTime)*timeDirection;if(0>deltaTime||0===timeDirection)return;this._startTime=null;deltaTime*=timeDirection}deltaTime*=this._updateTimeScale(time);timeDirection=this._updateTime(deltaTime);time=this._updateWeight(time);if(0<time){deltaTime=this._interpolants;startTime=this._propertyBindings;for(var j=0,m=deltaTime.length;j!==m;++j)deltaTime[j].evaluate(timeDirection),startTime[j].accumulate(accuIndex,
time)}}else this._updateWeight(time)},_updateWeight:function(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopFading(),0===interpolantValue&&(this.enabled=!1))}}return this._effectiveWeight=weight},_updateTimeScale:function(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;
if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopWarping(),0===timeScale?this.paused=!0:this.timeScale=timeScale)}}return this._effectiveTimeScale=timeScale},_updateTime:function(deltaTime){var time=this.time+deltaTime,duration=this._clip.duration,loop=this.loop,loopCount=this._loopCount,pingPong=2202===loop;if(0===deltaTime)return-1===loopCount?time:pingPong&&1===(loopCount&1)?duration-time:time;
if(2200===loop)a:{if(-1===loopCount&&(this._loopCount=0,this._setEndings(!0,!0,!1)),time>=duration)time=duration;else if(0>time)time=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>deltaTime?-1:1})}else{-1===loopCount&&(0<=deltaTime?(loopCount=0,this._setEndings(!0,0===this.repetitions,pingPong)):this._setEndings(0===this.repetitions,!0,pingPong));if(time>=duration||0>time){loop=Math.floor(time/duration);time-=
duration*loop;loopCount+=Math.abs(loop);var pending=this.repetitions-loopCount;0>=pending?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=0<deltaTime?duration:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<deltaTime?1:-1})):(1===pending?(deltaTime=0>deltaTime,this._setEndings(deltaTime,!deltaTime,pingPong)):this._setEndings(!1,!1,pingPong),this._loopCount=loopCount,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:loop}))}if(pingPong&&1===(loopCount&1))return this.time=
time,duration-time}return this.time=time},_setEndings:function(atStart,atEnd,pingPong){var settings=this._interpolantSettings;pingPong?(settings.endingStart=2401,settings.endingEnd=2401):(settings.endingStart=atStart?this.zeroSlopeAtStart?2401:2400:2402,settings.endingEnd=atEnd?this.zeroSlopeAtEnd?2401:2400:2402)},_scheduleFading:function(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time,interpolant=this._weightInterpolant;null===interpolant&&(this._weightInterpolant=interpolant=
mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;mixer[0]=now;interpolant[0]=weightNow;mixer[1]=now+duration;interpolant[1]=weightThen;return this}});AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings;action=action._interpolants;
var rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName,bindingsByName=bindingsByRoot[rootUuid];void 0===bindingsByName&&(bindingsByName={},bindingsByRoot[rootUuid]=bindingsByName);for(bindingsByRoot=0;bindingsByRoot!==nTracks;++bindingsByRoot){var track=tracks[bindingsByRoot],trackName=track.name,binding=bindingsByName[trackName];if(void 0===binding){binding=bindings[bindingsByRoot];if(void 0!==binding){null===binding._cacheIndex&&(++binding.referenceCount,this._addInactiveBinding(binding,
rootUuid,trackName));continue}binding=new PropertyMixer(PropertyBinding.create(root,trackName,prototypeAction&&prototypeAction._propertyBindings[bindingsByRoot].binding.parsedPath),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName)}bindings[bindingsByRoot]=binding;action[bindingsByRoot].resultBuffer=binding.buffer}},_activateAction:function(action){if(!this._isActiveAction(action)){if(null===action._cacheIndex){var rootUuid=(action._localRoot||
this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid)}rootUuid=action._propertyBindings;clipUuid=0;for(actionsForClip=rootUuid.length;clipUuid!==actionsForClip;++clipUuid){var binding=rootUuid[clipUuid];0===binding.useCount++&&(this._lendBinding(binding),binding.saveOriginalState())}this._lendAction(action)}},_deactivateAction:function(action){if(this._isActiveAction(action)){for(var bindings=
action._propertyBindings,i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];0===--binding.useCount&&(binding.restoreOriginalState(),this._takeBackBinding(binding))}this._takeBackAction(action)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var scope=this;this.stats={actions:{get total(){return scope._actions.length},
get inUse(){return scope._nActiveActions}},bindings:{get total(){return scope._bindings.length},get inUse(){return scope._nActiveBindings}},controlInterpolants:{get total(){return scope._controlInterpolants.length},get inUse(){return scope._nActiveControlInterpolants}}}},_isActiveAction:function(action){action=action._cacheIndex;return null!==action&&action<this._nActiveActions},_addInactiveAction:function(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip,actionsForClip=
actionsByClip[clipUuid];void 0===actionsForClip?(actionsForClip={knownActions:[action],actionByRoot:{}},action._byClipCacheIndex=0,actionsByClip[clipUuid]=actionsForClip):(clipUuid=actionsForClip.knownActions,action._byClipCacheIndex=clipUuid.length,clipUuid.push(action));action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action},_removeInactiveAction:function(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;
lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;actions=action._clip.uuid;lastInactiveAction=this._actionsByClip;cacheIndex=lastInactiveAction[actions];var knownActionsForClip=cacheIndex.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();
action._byClipCacheIndex=null;delete cacheIndex.actionByRoot[(action._localRoot||this._root).uuid];0===knownActionsForClip.length&&delete lastInactiveAction[actions];this._removeInactiveBindingsForAction(action)},_removeInactiveBindingsForAction:function(action){action=action._propertyBindings;for(var i=0,n=action.length;i!==n;++i){var binding=action[i];0===--binding.referenceCount&&this._removeInactiveBinding(binding)}},_lendAction:function(action){var actions=this._actions,prevIndex=action._cacheIndex,
lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction},_takeBackAction:function(action){var actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=
prevIndex;actions[prevIndex]=lastActiveAction},_addInactiveBinding:function(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],bindings=this._bindings;void 0===bindingByName&&(bindingByName={},bindingsByRoot[rootUuid]=bindingByName);bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding)},_removeInactiveBinding:function(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid;
propBinding=propBinding.path;var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1];binding=binding._cacheIndex;lastInactiveBinding._cacheIndex=binding;bindings[binding]=lastInactiveBinding;bindings.pop();delete bindingByName[propBinding];a:{for(var _ in bindingByName)break a;delete bindingsByRoot[rootUuid]}},_lendBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,
firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding},_takeBackBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;
bindings[prevIndex]=lastActiveBinding},_lendControlInterpolant:function(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++,interpolant=interpolants[lastActiveIndex];void 0===interpolant&&(interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),interpolant.__cacheIndex=lastActiveIndex,interpolants[lastActiveIndex]=interpolant);return interpolant},_takeBackControlInterpolant:function(interpolant){var interpolants=
this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(clip,optionalRoot){var root=optionalRoot||this._root,rootUuid=root.uuid;root=
"string"===typeof clip?AnimationClip.findByName(root,clip):clip;clip=null!==root?root.uuid:clip;var actionsForClip=this._actionsByClip[clip],prototypeAction=null;if(void 0!==actionsForClip){prototypeAction=actionsForClip.actionByRoot[rootUuid];if(void 0!==prototypeAction)return prototypeAction;prototypeAction=actionsForClip.knownActions[0];null===root&&(root=prototypeAction._clip)}if(null===root)return null;optionalRoot=new AnimationAction(this,root,optionalRoot);this._bindAction(optionalRoot,prototypeAction);
this._addInactiveAction(optionalRoot,clip,rootUuid);return optionalRoot},existingAction:function(clip,optionalRoot){var root=optionalRoot||this._root;optionalRoot=root.uuid;root="string"===typeof clip?AnimationClip.findByName(root,clip):clip;clip=this._actionsByClip[root?root.uuid:clip];return void 0!==clip?clip.actionByRoot[optionalRoot]||null:null},stopAllAction:function(){for(var actions=this._actions,nActions=this._nActiveActions,bindings=this._bindings,nBindings=this._nActiveBindings,i=this._nActiveBindings=
this._nActiveActions=0;i!==nActions;++i)actions[i].reset();for(i=0;i!==nBindings;++i)bindings[i].useCount=0;return this},update:function(deltaTime){deltaTime*=this.timeScale;for(var actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1,i=0;i!==nActions;++i)actions[i]._update(time,deltaTime,timeDirection,accuIndex);deltaTime=this._bindings;actions=this._nActiveBindings;for(i=0;i!==actions;++i)deltaTime[i].apply(accuIndex);
return this},getRoot:function(){return this._root},uncacheClip:function(clip){var actions=this._actions;clip=clip.uuid;var actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clip];if(void 0!==actionsForClip){actionsForClip=actionsForClip.knownActions;for(var i=0,n=actionsForClip.length;i!==n;++i){var action=actionsForClip[i];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;
lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action)}delete actionsByClip[clip]}},uncacheRoot:function(root){root=root.uuid;var actionsByClip=this._actionsByClip;for(clipUuid in actionsByClip){var action=actionsByClip[clipUuid].actionByRoot[root];void 0!==action&&(this._deactivateAction(action),this._removeInactiveAction(action))}var clipUuid=this._bindingsByRootAndName[root];if(void 0!==clipUuid)for(var trackName in clipUuid)root=
clipUuid[trackName],root.restoreOriginalState(),this._removeInactiveBinding(root)},uncacheAction:function(clip,optionalRoot){clip=this.existingAction(clip,optionalRoot);null!==clip&&(this._deactivateAction(clip),this._removeInactiveAction(clip))}});Uniform.prototype.clone=function(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())};InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,
copy:function(source){BufferGeometry.prototype.copy.call(this,source);this.maxInstancedCount=source.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this}});InstancedBufferAttribute.prototype=
Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this}});Object.assign(Raycaster.prototype,{linePrecision:1,set:function(origin,direction){this.ray.set(origin,direction)},setFromCamera:function(coords,camera){camera&&camera.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(camera.matrixWorld),
this.ray.direction.set(coords.x,coords.y,.5).unproject(camera).sub(this.ray.origin).normalize()):camera&&camera.isOrthographicCamera?(this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera),this.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(object,recursive,optionalTarget){optionalTarget=optionalTarget||[];intersectObject(object,this,optionalTarget,
recursive);optionalTarget.sort(ascSort);return optionalTarget},intersectObjects:function(objects,recursive,optionalTarget){optionalTarget=optionalTarget||[];if(!1===Array.isArray(objects))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),optionalTarget;for(var i=0,l=objects.length;i<l;i++)intersectObject(objects[i],this,optionalTarget,recursive);optionalTarget.sort(ascSort);return optionalTarget}});Object.assign(Spherical.prototype,{set:function(radius,phi,theta){this.radius=
radius;this.phi=phi;this.theta=theta;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)},setFromCartesianCoords:function(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(x,
z),this.phi=Math.acos(_Math.clamp(y/this.radius,-1,1)));return this}});Object.assign(Cylindrical.prototype,{set:function(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)},setFromCartesianCoords:function(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=
Math.atan2(x,z);this.y=y;return this}});Object.assign(Box2.prototype,{set:function(min,max){this.min.copy(min);this.max.copy(max);return this},setFromPoints:function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this},setFromCenterAndSize:function(){var v1=new Vector2;return function(center,size){size=v1.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);return this}}(),clone:function(){return(new this.constructor).copy(this)},
copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(target){void 0===target&&(console.warn("THREE.Box2: .getCenter() target is now required"),target=new Vector2);return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(target){void 0===
target&&(console.warn("THREE.Box2: .getSize() target is now required"),target=new Vector2);return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this},containsPoint:function(point){return point.x<this.min.x||point.x>
this.max.x||point.y<this.min.y||point.y>this.max.y?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y},getParameter:function(point,target){void 0===target&&(console.warn("THREE.Box2: .getParameter() target is now required"),target=new Vector2);return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(box){return box.max.x<this.min.x||box.min.x>
this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?!1:!0},clampPoint:function(point,target){void 0===target&&(console.warn("THREE.Box2: .clampPoint() target is now required"),target=new Vector2);return target.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new Vector2;return function(point){return v1.copy(point).clamp(this.min,this.max).sub(point).length()}}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);return this},union:function(box){this.min.min(box.min);
this.max.max(box.max);return this},translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)}});Object.assign(Line3.prototype,{set:function(start,end){this.start.copy(start);this.end.copy(end);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(line){this.start.copy(line.start);this.end.copy(line.end);return this},getCenter:function(target){void 0===target&&(console.warn("THREE.Line3: .getCenter() target is now required"),
target=new Vector3);return target.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(target){void 0===target&&(console.warn("THREE.Line3: .delta() target is now required"),target=new Vector3);return target.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,target){void 0===target&&(console.warn("THREE.Line3: .at() target is now required"),target=new Vector3);
return this.delta(target).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var startP=new Vector3,startEnd=new Vector3;return function(point,clampToLine){startP.subVectors(point,this.start);startEnd.subVectors(this.end,this.start);point=startEnd.dot(startEnd);point=startEnd.dot(startP)/point;clampToLine&&(point=_Math.clamp(point,0,1));return point}}(),closestPointToPoint:function(point,clampToLine,target){point=this.closestPointToPointParameter(point,clampToLine);void 0===
target&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),target=new Vector3);return this.delta(target).multiplyScalar(point).add(this.start)},applyMatrix4:function(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end)}});ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=
!0;VertexNormalsHelper.prototype=Object.create(LineSegments.prototype);VertexNormalsHelper.prototype.constructor=VertexNormalsHelper;VertexNormalsHelper.prototype.update=function(){var v1=new Vector3,v2=new Vector3,normalMatrix=new Matrix3;return function(){var keys=["a","b","c"];this.object.updateMatrixWorld(!0);normalMatrix.getNormalMatrix(this.object.matrixWorld);var matrixWorld=this.object.matrixWorld,position=this.geometry.attributes.position,objGeometry=this.object.geometry;if(objGeometry&&
objGeometry.isGeometry)for(var vertices=objGeometry.vertices,faces=objGeometry.faces,i=objGeometry=0,l=faces.length;i<l;i++)for(var face=faces[i],j=0,jl=face.vertexNormals.length;j<jl;j++){var normal=face.vertexNormals[j];v1.copy(vertices[face[keys[j]]]).applyMatrix4(matrixWorld);v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);position.setXYZ(objGeometry,v1.x,v1.y,v1.z);objGeometry+=1;position.setXYZ(objGeometry,v2.x,v2.y,v2.z);objGeometry+=1}else if(objGeometry&&
objGeometry.isBufferGeometry)for(keys=objGeometry.attributes.position,vertices=objGeometry.attributes.normal,j=objGeometry=0,jl=keys.count;j<jl;j++)v1.set(keys.getX(j),keys.getY(j),keys.getZ(j)).applyMatrix4(matrixWorld),v2.set(vertices.getX(j),vertices.getY(j),vertices.getZ(j)),v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1),position.setXYZ(objGeometry,v1.x,v1.y,v1.z),objGeometry+=1,position.setXYZ(objGeometry,v2.x,v2.y,v2.z),objGeometry+=1;position.needsUpdate=!0}}();
SpotLightHelper.prototype=Object.create(Object3D.prototype);SpotLightHelper.prototype.constructor=SpotLightHelper;SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};SpotLightHelper.prototype.update=function(){var vector=new Vector3;return function(){this.light.updateMatrixWorld();var coneLength=this.light.distance?this.light.distance:1E3,coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);vector.setFromMatrixPosition(this.light.target.matrixWorld);
this.cone.lookAt(vector);void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();SkeletonHelper.prototype=Object.create(LineSegments.prototype);SkeletonHelper.prototype.constructor=SkeletonHelper;SkeletonHelper.prototype.updateMatrixWorld=function(){var vector=new Vector3,boneMatrix=new Matrix4,matrixWorldInv=new Matrix4;return function(force){var bones=this.bones,geometry=this.geometry,position=geometry.getAttribute("position");matrixWorldInv.getInverse(this.root.matrixWorld);
for(var i=0,j=0;i<bones.length;i++){var bone=bones[i];bone.parent&&bone.parent.isBone&&(boneMatrix.multiplyMatrices(matrixWorldInv,bone.matrixWorld),vector.setFromMatrixPosition(boneMatrix),position.setXYZ(j,vector.x,vector.y,vector.z),boneMatrix.multiplyMatrices(matrixWorldInv,bone.parent.matrixWorld),vector.setFromMatrixPosition(boneMatrix),position.setXYZ(j+1,vector.x,vector.y,vector.z),j+=2)}geometry.getAttribute("position").needsUpdate=!0;Object3D.prototype.updateMatrixWorld.call(this,force)}}();
PointLightHelper.prototype=Object.create(Mesh.prototype);PointLightHelper.prototype.constructor=PointLightHelper;PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};PointLightHelper.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};RectAreaLightHelper.prototype=Object.create(Line.prototype);RectAreaLightHelper.prototype.constructor=RectAreaLightHelper;RectAreaLightHelper.prototype.update=
function(){this.scale.set(.5*this.light.width,.5*this.light.height,1);if(void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var c=this.material.color,max=Math.max(c.r,c.g,c.b);1<max&&c.multiplyScalar(1/max);this.children[0].material.color.copy(this.material.color)}};RectAreaLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();
this.children[0].geometry.dispose();this.children[0].material.dispose()};HemisphereLightHelper.prototype=Object.create(Object3D.prototype);HemisphereLightHelper.prototype.constructor=HemisphereLightHelper;HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};HemisphereLightHelper.prototype.update=function(){var vector=new Vector3,color1=new Color,color2=new Color;return function(){var mesh=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);
else{var colors=mesh.geometry.getAttribute("color");color1.copy(this.light.color);color2.copy(this.light.groundColor);for(var i=0,l=colors.count;i<l;i++){var color=i<l/2?color1:color2;colors.setXYZ(i,color.r,color.g,color.b)}colors.needsUpdate=!0}mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate())}}();GridHelper.prototype=Object.create(LineSegments.prototype);GridHelper.prototype.constructor=GridHelper;PolarGridHelper.prototype=Object.create(LineSegments.prototype);PolarGridHelper.prototype.constructor=
PolarGridHelper;PositionalAudioHelper.prototype=Object.create(Line.prototype);PositionalAudioHelper.prototype.constructor=PositionalAudioHelper;PositionalAudioHelper.prototype.update=function(){function generateSegment(from,to,divisions,materialIndex){divisions=(to-from)/divisions;positionAttribute.setXYZ(start,0,0,0);count++;for(i=from;i<to;i+=divisions)stride=start+count,positionAttribute.setXYZ(stride,Math.sin(i)*range,0,Math.cos(i)*range),positionAttribute.setXYZ(stride+1,Math.sin(Math.min(i+
divisions,to))*range,0,Math.cos(Math.min(i+divisions,to))*range),positionAttribute.setXYZ(stride+2,0,0,0),count+=3;geometry.addGroup(start,count,materialIndex);start+=count;count=0}var audio=this.audio,range=this.range,divisionsInnerAngle=this.divisionsInnerAngle,divisionsOuterAngle=this.divisionsOuterAngle,coneInnerAngle=_Math.degToRad(audio.panner.coneInnerAngle);audio=_Math.degToRad(audio.panner.coneOuterAngle);var halfConeInnerAngle=coneInnerAngle/2,halfConeOuterAngle=audio/2,start=0,count=0,
i,stride,geometry=this.geometry,positionAttribute=geometry.attributes.position;geometry.clearGroups();generateSegment(-halfConeOuterAngle,-halfConeInnerAngle,divisionsOuterAngle,0);generateSegment(-halfConeInnerAngle,halfConeInnerAngle,divisionsInnerAngle,1);generateSegment(halfConeInnerAngle,halfConeOuterAngle,divisionsOuterAngle,0);positionAttribute.needsUpdate=!0;coneInnerAngle===audio&&(this.material[0].visible=!1)};PositionalAudioHelper.prototype.dispose=function(){this.geometry.dispose();this.material[0].dispose();
this.material[1].dispose()};FaceNormalsHelper.prototype=Object.create(LineSegments.prototype);FaceNormalsHelper.prototype.constructor=FaceNormalsHelper;FaceNormalsHelper.prototype.update=function(){var v1=new Vector3,v2=new Vector3,normalMatrix=new Matrix3;return function(){this.object.updateMatrixWorld(!0);normalMatrix.getNormalMatrix(this.object.matrixWorld);var matrixWorld=this.object.matrixWorld,position=this.geometry.attributes.position,objGeometry=this.object.geometry,vertices=objGeometry.vertices;
objGeometry=objGeometry.faces;for(var idx=0,i=0,l=objGeometry.length;i<l;i++){var face=objGeometry[i],normal=face.normal;v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);position.setXYZ(idx,v1.x,v1.y,v1.z);idx+=1;position.setXYZ(idx,v2.x,v2.y,v2.z);idx+=1}position.needsUpdate=!0}}();DirectionalLightHelper.prototype=Object.create(Object3D.prototype);
DirectionalLightHelper.prototype.constructor=DirectionalLightHelper;DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};DirectionalLightHelper.prototype.update=function(){var v1=new Vector3,v2=new Vector3,v3=new Vector3;return function(){v1.setFromMatrixPosition(this.light.matrixWorld);v2.setFromMatrixPosition(this.light.target.matrixWorld);v3.subVectors(v2,
v1);this.lightPlane.lookAt(v2);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(v2);this.targetLine.scale.z=v3.length()}}();CameraHelper.prototype=Object.create(LineSegments.prototype);CameraHelper.prototype.constructor=CameraHelper;CameraHelper.prototype.update=function(){function setPoint(point,x,y,
z){vector.set(x,y,z).unproject(camera);point=pointMap[point];if(void 0!==point)for(x=geometry.getAttribute("position"),y=0,z=point.length;y<z;y++)x.setXYZ(point[y],vector.x,vector.y,vector.z)}var geometry,pointMap,vector=new Vector3,camera=new Camera;return function(){geometry=this.geometry;pointMap=this.pointMap;camera.projectionMatrix.copy(this.camera.projectionMatrix);setPoint("c",0,0,-1);setPoint("t",0,0,1);setPoint("n1",-1,-1,-1);setPoint("n2",1,-1,-1);setPoint("n3",-1,1,-1);setPoint("n4",1,
1,-1);setPoint("f1",-1,-1,1);setPoint("f2",1,-1,1);setPoint("f3",-1,1,1);setPoint("f4",1,1,1);setPoint("u1",.7,1.1,-1);setPoint("u2",-.7,1.1,-1);setPoint("u3",0,2,-1);setPoint("cf1",-1,0,1);setPoint("cf2",1,0,1);setPoint("cf3",0,-1,1);setPoint("cf4",0,1,1);setPoint("cn1",-1,0,-1);setPoint("cn2",1,0,-1);setPoint("cn3",0,-1,-1);setPoint("cn4",0,1,-1);geometry.getAttribute("position").needsUpdate=!0}}();BoxHelper.prototype=Object.create(LineSegments.prototype);BoxHelper.prototype.constructor=BoxHelper;
BoxHelper.prototype.update=function(){var box=new Box3;return function(object){void 0!==object&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");void 0!==this.object&&box.setFromObject(this.object);if(!box.isEmpty()){object=box.min;var max=box.max,position=this.geometry.attributes.position,array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=object.x;array[4]=max.y;array[5]=max.z;array[6]=object.x;array[7]=object.y;array[8]=max.z;array[9]=max.x;array[10]=object.y;
array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=object.z;array[15]=object.x;array[16]=max.y;array[17]=object.z;array[18]=object.x;array[19]=object.y;array[20]=object.z;array[21]=max.x;array[22]=object.y;array[23]=object.z;position.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();BoxHelper.prototype.setFromObject=function(object){this.object=object;this.update();return this};BoxHelper.prototype.copy=function(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;
return this};BoxHelper.prototype.clone=function(){return(new this.constructor).copy(this)};Box3Helper.prototype=Object.create(LineSegments.prototype);Box3Helper.prototype.constructor=Box3Helper;Box3Helper.prototype.updateMatrixWorld=function(force){var box=this.box;box.isEmpty()||(box.getCenter(this.position),box.getSize(this.scale),this.scale.multiplyScalar(.5),Object3D.prototype.updateMatrixWorld.call(this,force))};PlaneHelper.prototype=Object.create(Line.prototype);PlaneHelper.prototype.constructor=
PlaneHelper;PlaneHelper.prototype.updateMatrixWorld=function(force){var scale=-this.plane.constant;1E-8>Math.abs(scale)&&(scale=1E-8);this.scale.set(.5*this.size,.5*this.size,scale);this.children[0].material.side=0>scale?1:0;this.lookAt(this.plane.normal);Object3D.prototype.updateMatrixWorld.call(this,force)};var lineGeometry,coneGeometry;ArrowHelper.prototype=Object.create(Object3D.prototype);ArrowHelper.prototype.constructor=ArrowHelper;ArrowHelper.prototype.setDirection=function(){var axis=new Vector3,
radians;return function(dir){.99999<dir.y?this.quaternion.set(0,0,0,1):-.99999>dir.y?this.quaternion.set(1,0,0,0):(axis.set(dir.z,0,-dir.x).normalize(),radians=Math.acos(dir.y),this.quaternion.setFromAxisAngle(axis,radians))}}();ArrowHelper.prototype.setLength=function(length,headLength,headWidth){void 0===headLength&&(headLength=.2*length);void 0===headWidth&&(headWidth=.2*headLength);this.line.scale.set(1,Math.max(0,length-headLength),1);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,
headWidth);this.cone.position.y=length;this.cone.updateMatrix()};ArrowHelper.prototype.setColor=function(color){this.line.material.color.copy(color);this.cone.material.color.copy(color)};ArrowHelper.prototype.copy=function(source){Object3D.prototype.copy.call(this,source,!1);this.line.copy(source.line);this.cone.copy(source.cone);return this};ArrowHelper.prototype.clone=function(){return(new this.constructor).copy(this)};AxesHelper.prototype=Object.create(LineSegments.prototype);AxesHelper.prototype.constructor=
AxesHelper;Curve.create=function(construct,getPoint){console.log("THREE.Curve.create() has been deprecated");construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct};Object.assign(CurvePath.prototype,{createPointsGeometry:function(divisions){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");divisions=this.getPoints(divisions);
return this.createGeometry(divisions)},createSpacedPointsGeometry:function(divisions){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");divisions=this.getSpacedPoints(divisions);return this.createGeometry(divisions)},createGeometry:function(points){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var geometry=new Geometry,i=0,l=
points.length;i<l;i++){var point=points[i];geometry.vertices.push(new Vector3(point.x,point.y,point.z||0))}return geometry}});Object.assign(Path.prototype,{fromPoints:function(points){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints().");this.setFromPoints(points)}});ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);Spline.prototype=Object.create(CatmullRomCurve3.prototype);Object.assign(Spline.prototype,
{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};
Object.assign(Loader.prototype,{extractUrlBase:function(url){console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.");return LoaderUtils.extractUrlBase(url)}});Object.assign(ObjectLoader.prototype,{setTexturePath:function(value){console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().");return this.setResourcePath(value)}});Object.assign(Box2.prototype,{center:function(optionalTarget){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");
return this.getCenter(optionalTarget)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(box){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(box)},size:function(optionalTarget){console.warn("THREE.Box2: .size() has been renamed to .getSize().");return this.getSize(optionalTarget)}});Object.assign(Box3.prototype,{center:function(optionalTarget){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");
return this.getCenter(optionalTarget)},empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(box){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(box)},isIntersectionSphere:function(sphere){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(sphere)},size:function(optionalTarget){console.warn("THREE.Box3: .size() has been renamed to .getSize().");
return this.getSize(optionalTarget)}});Line3.prototype.center=function(optionalTarget){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(optionalTarget)};Object.assign(_Math,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");return Math.random()},nearestPowerOfTwo:function(value){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");return _Math.floorPowerOfTwo(value)},
nextPowerOfTwo:function(value){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");return _Math.ceilPowerOfTwo(value)}});Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(array,offset){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset)},multiplyVector3:function(vector){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
return vector.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(buffer){console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.");return this.applyToBufferAttribute(buffer)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Matrix4.prototype,{extractPosition:function(m){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(m)},flattenToArrayOffset:function(array,offset){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset)},getPosition:function(){var v1;return function(){void 0===v1&&(v1=new Vector3);console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");return v1.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(q){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
return this.makeRotationFromQuaternion(q)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(vector){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},multiplyVector4:function(vector){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},
rotateAxis:function(v){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");v.transformDirection(this)},crossVector:function(vector){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},
rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(buffer){console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.");return this.applyToBufferAttribute(buffer)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(left,right,
bottom,top,near,far){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(left,right,top,bottom,near,far)}});Plane.prototype.isIntersectionLine=function(line){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(line)};Quaternion.prototype.multiplyVector3=function(vector){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return vector.applyQuaternion(this)};Object.assign(Ray.prototype,{isIntersectionBox:function(box){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(box)},isIntersectionPlane:function(plane){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(plane)},isIntersectionSphere:function(sphere){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");
return this.intersectsSphere(sphere)}});Object.assign(Triangle.prototype,{area:function(){console.warn("THREE.Triangle: .area() has been renamed to .getArea().");return this.getArea()},barycoordFromPoint:function(point,target){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return this.getBarycoord(point,target)},midpoint:function(target){console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint().");return this.getMidpoint(target)},normal:function(target){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");
return this.getNormal(target)},plane:function(target){console.warn("THREE.Triangle: .plane() has been renamed to .getPlane().");return this.getPlane(target)}});Object.assign(Triangle,{barycoordFromPoint:function(point,a,b,c,target){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return Triangle.getBarycoord(point,a,b,c,target)},normal:function(a,b,c,target){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return Triangle.getNormal(a,
b,c,target)}});Object.assign(Shape.prototype,{extractAllPoints:function(divisions){console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.");return this.extractPoints(divisions)},extrude:function(options){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new ExtrudeGeometry(this,options)},makeGeometry:function(options){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new ShapeGeometry(this,
options)}});Object.assign(Vector2.prototype,{fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},distanceToManhattan:function(v){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(v)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");
return this.manhattanLength()}});Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(m){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
return this.setFromMatrixPosition(m)},getScaleFromMatrix:function(m){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(m)},getColumnFromMatrix:function(index,matrix){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(matrix,index)},applyProjection:function(m){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");
return this.applyMatrix4(m)},fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},distanceToManhattan:function(v){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(v)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");
return this.manhattanLength()}});Object.assign(Vector4.prototype,{fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},
computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}});Object.assign(Object3D.prototype,{getChildByName:function(name){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(name)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(distance,axis){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");
return this.translateOnAxis(axis,distance)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}});Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(value){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=value}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(LOD.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});
SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");return this.arcLengthDivisions},set:function(value){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=value}});PerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");
void 0!==filmGauge&&(this.filmGauge=filmGauge);this.setFocalLength(focalLength)};Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(value){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=value}},shadowCameraLeft:{set:function(value){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=value}},shadowCameraRight:{set:function(value){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");
this.shadow.camera.right=value}},shadowCameraTop:{set:function(value){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=value}},shadowCameraBottom:{set:function(value){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=value}},shadowCameraNear:{set:function(value){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=value}},shadowCameraFar:{set:function(value){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");
this.shadow.camera.far=value}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(value){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=value}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(value){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");
this.shadow.mapSize.width=value}},shadowMapHeight:{set:function(value){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=value}}});Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");return this.array.length}},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")}});Object.assign(BufferGeometry.prototype,
{addIndex:function(index){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(index)},addDrawCall:function(start,count,indexOffset){void 0!==indexOffset&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(start,count)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},
computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});
Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},
onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},
wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(value){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=1===value}}});Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");
return!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(value){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=value}}});Object.assign(WebGLRenderer.prototype,
{clearTarget:function(renderTarget,color,depth,stencil){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.");this.setRenderTarget(renderTarget);this.clear(color,depth,stencil)},animate:function(callback){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop().");this.setAnimationLoop(callback)},getCurrentRenderTarget:function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");
return this.getRenderTarget()},getMaxAnisotropy:function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()},getPrecision:function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision},resetGLState:function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");return this.state.reset()},supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");
return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");
return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");
return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(boolean){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(boolean)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},
addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")}});Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(value){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");
this.shadowMap.enabled=value}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(value){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=value}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(WebGLShadowMap.prototype,
{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},
renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(WebGLRenderTargetCube.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},
activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}});Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(value){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=value}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");
return this.texture.wrapT},set:function(value){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=value}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(value){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=value}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");
return this.texture.minFilter},set:function(value){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=value}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(value){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=value}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");
return this.texture.offset},set:function(value){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=value}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(value){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=value}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},
set:function(value){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=value}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(value){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=value}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},
set:function(value){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=value}}});Object.defineProperties(WebVRManager.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}});Audio.prototype.load=function(file){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
var scope=this;(new AudioLoader).load(file,function(buffer){scope.setBuffer(buffer)});return this};AudioAnalyser.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};CubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(renderer,scene)};ImageUtils.crossOrigin=void 0;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
var loader=new TextureLoader;loader.setCrossOrigin(this.crossOrigin);url=loader.load(url,onLoad,void 0,onError);mapping&&(url.mapping=mapping);return url};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var loader=new CubeTextureLoader;loader.setCrossOrigin(this.crossOrigin);urls=loader.load(urls,onLoad,void 0,onError);mapping&&(urls.mapping=mapping);return urls};ImageUtils.loadCompressedTexture=
function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};exports.WebGLMultisampleRenderTarget=WebGLMultisampleRenderTarget;exports.WebGLRenderTargetCube=WebGLRenderTargetCube;exports.WebGLRenderTarget=WebGLRenderTarget;exports.WebGLRenderer=WebGLRenderer;exports.ShaderLib=ShaderLib;exports.UniformsLib=
UniformsLib;exports.UniformsUtils=UniformsUtils;exports.ShaderChunk=ShaderChunk;exports.FogExp2=FogExp2;exports.Fog=Fog;exports.Scene=Scene;exports.Sprite=Sprite;exports.LOD=LOD;exports.SkinnedMesh=SkinnedMesh;exports.Skeleton=Skeleton;exports.Bone=Bone;exports.Mesh=Mesh;exports.LineSegments=LineSegments;exports.LineLoop=LineLoop;exports.Line=Line;exports.Points=Points;exports.Group=Group;exports.VideoTexture=VideoTexture;exports.DataTexture=DataTexture;exports.DataTexture3D=DataTexture3D;exports.CompressedTexture=
CompressedTexture;exports.CubeTexture=CubeTexture;exports.CanvasTexture=CanvasTexture;exports.DepthTexture=DepthTexture;exports.Texture=Texture;exports.AnimationLoader=AnimationLoader;exports.CompressedTextureLoader=CompressedTextureLoader;exports.DataTextureLoader=DataTextureLoader;exports.CubeTextureLoader=CubeTextureLoader;exports.TextureLoader=TextureLoader;exports.ObjectLoader=ObjectLoader;exports.MaterialLoader=MaterialLoader;exports.BufferGeometryLoader=BufferGeometryLoader;exports.DefaultLoadingManager=
DefaultLoadingManager;exports.LoadingManager=LoadingManager;exports.ImageLoader=ImageLoader;exports.ImageBitmapLoader=ImageBitmapLoader;exports.FontLoader=FontLoader;exports.FileLoader=FileLoader;exports.Loader=Loader;exports.LoaderUtils=LoaderUtils;exports.Cache=Cache;exports.AudioLoader=AudioLoader;exports.SpotLightShadow=SpotLightShadow;exports.SpotLight=SpotLight;exports.PointLight=PointLight;exports.RectAreaLight=RectAreaLight;exports.HemisphereLight=HemisphereLight;exports.DirectionalLightShadow=
DirectionalLightShadow;exports.DirectionalLight=DirectionalLight;exports.AmbientLight=AmbientLight;exports.LightShadow=LightShadow;exports.Light=Light;exports.StereoCamera=StereoCamera;exports.PerspectiveCamera=PerspectiveCamera;exports.OrthographicCamera=OrthographicCamera;exports.CubeCamera=CubeCamera;exports.ArrayCamera=ArrayCamera;exports.Camera=Camera;exports.AudioListener=AudioListener;exports.PositionalAudio=PositionalAudio;exports.AudioContext=AudioContext;exports.AudioAnalyser=AudioAnalyser;
exports.Audio=Audio;exports.VectorKeyframeTrack=VectorKeyframeTrack;exports.StringKeyframeTrack=StringKeyframeTrack;exports.QuaternionKeyframeTrack=QuaternionKeyframeTrack;exports.NumberKeyframeTrack=NumberKeyframeTrack;exports.ColorKeyframeTrack=ColorKeyframeTrack;exports.BooleanKeyframeTrack=BooleanKeyframeTrack;exports.PropertyMixer=PropertyMixer;exports.PropertyBinding=PropertyBinding;exports.KeyframeTrack=KeyframeTrack;exports.AnimationUtils=AnimationUtils;exports.AnimationObjectGroup=AnimationObjectGroup;
exports.AnimationMixer=AnimationMixer;exports.AnimationClip=AnimationClip;exports.Uniform=Uniform;exports.InstancedBufferGeometry=InstancedBufferGeometry;exports.BufferGeometry=BufferGeometry;exports.Geometry=Geometry;exports.InterleavedBufferAttribute=InterleavedBufferAttribute;exports.InstancedInterleavedBuffer=InstancedInterleavedBuffer;exports.InterleavedBuffer=InterleavedBuffer;exports.InstancedBufferAttribute=InstancedBufferAttribute;exports.Face3=Face3;exports.Object3D=Object3D;exports.Raycaster=
Raycaster;exports.Layers=Layers;exports.EventDispatcher=EventDispatcher;exports.Clock=Clock;exports.QuaternionLinearInterpolant=QuaternionLinearInterpolant;exports.LinearInterpolant=LinearInterpolant;exports.DiscreteInterpolant=DiscreteInterpolant;exports.CubicInterpolant=CubicInterpolant;exports.Interpolant=Interpolant;exports.Triangle=Triangle;exports.Math=_Math;exports.Spherical=Spherical;exports.Cylindrical=Cylindrical;exports.Plane=Plane;exports.Frustum=Frustum;exports.Sphere=Sphere;exports.Ray=
Ray;exports.Matrix4=Matrix4;exports.Matrix3=Matrix3;exports.Box3=Box3;exports.Box2=Box2;exports.Line3=Line3;exports.Euler=Euler;exports.Vector4=Vector4;exports.Vector3=Vector3;exports.Vector2=Vector2;exports.Quaternion=Quaternion;exports.Color=Color;exports.ImmediateRenderObject=ImmediateRenderObject;exports.VertexNormalsHelper=VertexNormalsHelper;exports.SpotLightHelper=SpotLightHelper;exports.SkeletonHelper=SkeletonHelper;exports.PointLightHelper=PointLightHelper;exports.RectAreaLightHelper=RectAreaLightHelper;
exports.HemisphereLightHelper=HemisphereLightHelper;exports.GridHelper=GridHelper;exports.PolarGridHelper=PolarGridHelper;exports.PositionalAudioHelper=PositionalAudioHelper;exports.FaceNormalsHelper=FaceNormalsHelper;exports.DirectionalLightHelper=DirectionalLightHelper;exports.CameraHelper=CameraHelper;exports.BoxHelper=BoxHelper;exports.Box3Helper=Box3Helper;exports.PlaneHelper=PlaneHelper;exports.ArrowHelper=ArrowHelper;exports.AxesHelper=AxesHelper;exports.Shape=Shape;exports.Path=Path;exports.ShapePath=
ShapePath;exports.Font=Font;exports.CurvePath=CurvePath;exports.Curve=Curve;exports.ImageUtils=ImageUtils;exports.ShapeUtils=ShapeUtils;exports.WebGLUtils=WebGLUtils;exports.WireframeGeometry=WireframeGeometry;exports.ParametricGeometry=ParametricGeometry;exports.ParametricBufferGeometry=ParametricBufferGeometry;exports.TetrahedronGeometry=TetrahedronGeometry;exports.TetrahedronBufferGeometry=TetrahedronBufferGeometry;exports.OctahedronGeometry=OctahedronGeometry;exports.OctahedronBufferGeometry=
OctahedronBufferGeometry;exports.IcosahedronGeometry=IcosahedronGeometry;exports.IcosahedronBufferGeometry=IcosahedronBufferGeometry;exports.DodecahedronGeometry=DodecahedronGeometry;exports.DodecahedronBufferGeometry=DodecahedronBufferGeometry;exports.PolyhedronGeometry=PolyhedronGeometry;exports.PolyhedronBufferGeometry=PolyhedronBufferGeometry;exports.TubeGeometry=TubeGeometry;exports.TubeBufferGeometry=TubeBufferGeometry;exports.TorusKnotGeometry=TorusKnotGeometry;exports.TorusKnotBufferGeometry=
TorusKnotBufferGeometry;exports.TorusGeometry=TorusGeometry;exports.TorusBufferGeometry=TorusBufferGeometry;exports.TextGeometry=TextGeometry;exports.TextBufferGeometry=TextBufferGeometry;exports.SphereGeometry=SphereGeometry;exports.SphereBufferGeometry=SphereBufferGeometry;exports.RingGeometry=RingGeometry;exports.RingBufferGeometry=RingBufferGeometry;exports.PlaneGeometry=PlaneGeometry;exports.PlaneBufferGeometry=PlaneBufferGeometry;exports.LatheGeometry=LatheGeometry;exports.LatheBufferGeometry=
LatheBufferGeometry;exports.ShapeGeometry=ShapeGeometry;exports.ShapeBufferGeometry=ShapeBufferGeometry;exports.ExtrudeGeometry=ExtrudeGeometry;exports.ExtrudeBufferGeometry=ExtrudeBufferGeometry;exports.EdgesGeometry=EdgesGeometry;exports.ConeGeometry=ConeGeometry;exports.ConeBufferGeometry=ConeBufferGeometry;exports.CylinderGeometry=CylinderGeometry;exports.CylinderBufferGeometry=CylinderBufferGeometry;exports.CircleGeometry=CircleGeometry;exports.CircleBufferGeometry=CircleBufferGeometry;exports.BoxGeometry=
BoxGeometry;exports.CubeGeometry=BoxGeometry;exports.BoxBufferGeometry=BoxBufferGeometry;exports.ShadowMaterial=ShadowMaterial;exports.SpriteMaterial=SpriteMaterial;exports.RawShaderMaterial=RawShaderMaterial;exports.ShaderMaterial=ShaderMaterial;exports.PointsMaterial=PointsMaterial;exports.MeshPhysicalMaterial=MeshPhysicalMaterial;exports.MeshStandardMaterial=MeshStandardMaterial;exports.MeshPhongMaterial=MeshPhongMaterial;exports.MeshToonMaterial=MeshToonMaterial;exports.MeshNormalMaterial=MeshNormalMaterial;
exports.MeshLambertMaterial=MeshLambertMaterial;exports.MeshDepthMaterial=MeshDepthMaterial;exports.MeshDistanceMaterial=MeshDistanceMaterial;exports.MeshBasicMaterial=MeshBasicMaterial;exports.MeshMatcapMaterial=MeshMatcapMaterial;exports.LineDashedMaterial=LineDashedMaterial;exports.LineBasicMaterial=LineBasicMaterial;exports.Material=Material;exports.Float64BufferAttribute=Float64BufferAttribute;exports.Float32BufferAttribute=Float32BufferAttribute;exports.Uint32BufferAttribute=Uint32BufferAttribute;
exports.Int32BufferAttribute=Int32BufferAttribute;exports.Uint16BufferAttribute=Uint16BufferAttribute;exports.Int16BufferAttribute=Int16BufferAttribute;exports.Uint8ClampedBufferAttribute=Uint8ClampedBufferAttribute;exports.Uint8BufferAttribute=Uint8BufferAttribute;exports.Int8BufferAttribute=Int8BufferAttribute;exports.BufferAttribute=BufferAttribute;exports.ArcCurve=ArcCurve;exports.CatmullRomCurve3=CatmullRomCurve3;exports.CubicBezierCurve=CubicBezierCurve;exports.CubicBezierCurve3=CubicBezierCurve3;
exports.EllipseCurve=EllipseCurve;exports.LineCurve=LineCurve;exports.LineCurve3=LineCurve3;exports.QuadraticBezierCurve=QuadraticBezierCurve;exports.QuadraticBezierCurve3=QuadraticBezierCurve3;exports.SplineCurve=SplineCurve;exports.REVISION="102";exports.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};exports.CullFaceNone=0;exports.CullFaceBack=1;exports.CullFaceFront=2;exports.CullFaceFrontBack=3;exports.FrontFaceDirectionCW=0;exports.FrontFaceDirectionCCW=1;exports.BasicShadowMap=0;exports.PCFShadowMap=1;exports.PCFSoftShadowMap=
2;exports.FrontSide=0;exports.BackSide=1;exports.DoubleSide=2;exports.FlatShading=1;exports.SmoothShading=2;exports.NoColors=0;exports.FaceColors=1;exports.VertexColors=2;exports.NoBlending=0;exports.NormalBlending=1;exports.AdditiveBlending=2;exports.SubtractiveBlending=3;exports.MultiplyBlending=4;exports.CustomBlending=5;exports.AddEquation=100;exports.SubtractEquation=101;exports.ReverseSubtractEquation=102;exports.MinEquation=103;exports.MaxEquation=104;exports.ZeroFactor=200;exports.OneFactor=
201;exports.SrcColorFactor=202;exports.OneMinusSrcColorFactor=203;exports.SrcAlphaFactor=204;exports.OneMinusSrcAlphaFactor=205;exports.DstAlphaFactor=206;exports.OneMinusDstAlphaFactor=207;exports.DstColorFactor=208;exports.OneMinusDstColorFactor=209;exports.SrcAlphaSaturateFactor=210;exports.NeverDepth=0;exports.AlwaysDepth=1;exports.LessDepth=2;exports.LessEqualDepth=3;exports.EqualDepth=4;exports.GreaterEqualDepth=5;exports.GreaterDepth=6;exports.NotEqualDepth=7;exports.MultiplyOperation=0;exports.MixOperation=
1;exports.AddOperation=2;exports.NoToneMapping=0;exports.LinearToneMapping=1;exports.ReinhardToneMapping=2;exports.Uncharted2ToneMapping=3;exports.CineonToneMapping=4;exports.ACESFilmicToneMapping=5;exports.UVMapping=300;exports.CubeReflectionMapping=301;exports.CubeRefractionMapping=302;exports.EquirectangularReflectionMapping=303;exports.EquirectangularRefractionMapping=304;exports.SphericalReflectionMapping=305;exports.CubeUVReflectionMapping=306;exports.CubeUVRefractionMapping=307;exports.RepeatWrapping=
1E3;exports.ClampToEdgeWrapping=1001;exports.MirroredRepeatWrapping=1002;exports.NearestFilter=1003;exports.NearestMipMapNearestFilter=1004;exports.NearestMipMapLinearFilter=1005;exports.LinearFilter=1006;exports.LinearMipMapNearestFilter=1007;exports.LinearMipMapLinearFilter=1008;exports.UnsignedByteType=1009;exports.ByteType=1010;exports.ShortType=1011;exports.UnsignedShortType=1012;exports.IntType=1013;exports.UnsignedIntType=1014;exports.FloatType=1015;exports.HalfFloatType=1016;exports.UnsignedShort4444Type=
1017;exports.UnsignedShort5551Type=1018;exports.UnsignedShort565Type=1019;exports.UnsignedInt248Type=1020;exports.AlphaFormat=1021;exports.RGBFormat=1022;exports.RGBAFormat=1023;exports.LuminanceFormat=1024;exports.LuminanceAlphaFormat=1025;exports.RGBEFormat=1023;exports.DepthFormat=1026;exports.DepthStencilFormat=1027;exports.RedFormat=1028;exports.RGB_S3TC_DXT1_Format=33776;exports.RGBA_S3TC_DXT1_Format=33777;exports.RGBA_S3TC_DXT3_Format=33778;exports.RGBA_S3TC_DXT5_Format=33779;exports.RGB_PVRTC_4BPPV1_Format=
35840;exports.RGB_PVRTC_2BPPV1_Format=35841;exports.RGBA_PVRTC_4BPPV1_Format=35842;exports.RGBA_PVRTC_2BPPV1_Format=35843;exports.RGB_ETC1_Format=36196;exports.RGBA_ASTC_4x4_Format=37808;exports.RGBA_ASTC_5x4_Format=37809;exports.RGBA_ASTC_5x5_Format=37810;exports.RGBA_ASTC_6x5_Format=37811;exports.RGBA_ASTC_6x6_Format=37812;exports.RGBA_ASTC_8x5_Format=37813;exports.RGBA_ASTC_8x6_Format=37814;exports.RGBA_ASTC_8x8_Format=37815;exports.RGBA_ASTC_10x5_Format=37816;exports.RGBA_ASTC_10x6_Format=37817;
exports.RGBA_ASTC_10x8_Format=37818;exports.RGBA_ASTC_10x10_Format=37819;exports.RGBA_ASTC_12x10_Format=37820;exports.RGBA_ASTC_12x12_Format=37821;exports.LoopOnce=2200;exports.LoopRepeat=2201;exports.LoopPingPong=2202;exports.InterpolateDiscrete=2300;exports.InterpolateLinear=2301;exports.InterpolateSmooth=2302;exports.ZeroCurvatureEnding=2400;exports.ZeroSlopeEnding=2401;exports.WrapAroundEnding=2402;exports.TrianglesDrawMode=0;exports.TriangleStripDrawMode=1;exports.TriangleFanDrawMode=2;exports.LinearEncoding=
3E3;exports.sRGBEncoding=3001;exports.GammaEncoding=3007;exports.RGBEEncoding=3002;exports.LogLuvEncoding=3003;exports.RGBM7Encoding=3004;exports.RGBM16Encoding=3005;exports.RGBDEncoding=3006;exports.BasicDepthPacking=3200;exports.RGBADepthPacking=3201;exports.TangentSpaceNormalMap=0;exports.ObjectSpaceNormalMap=1;exports.Face4=function(a,b,c,d,normal,color,materialIndex){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new Face3(a,b,c,normal,color,materialIndex)};
exports.LineStrip=0;exports.LinePieces=1;exports.MeshFaceMaterial=function(materials){console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead.");return materials};exports.MultiMaterial=function(materials){void 0===materials&&(materials=[]);console.warn("THREE.MultiMaterial has been removed. Use an Array instead.");materials.isMultiMaterial=!0;materials.materials=materials;materials.clone=function(){return materials.slice()};return materials};exports.PointCloud=function(geometry,
material){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new Points(geometry,material)};exports.Particle=function(material){console.warn("THREE.Particle has been renamed to THREE.Sprite.");return new Sprite(material)};exports.ParticleSystem=function(geometry,material){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new Points(geometry,material)};exports.PointCloudMaterial=function(parameters){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");
return new PointsMaterial(parameters)};exports.ParticleBasicMaterial=function(parameters){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial(parameters)};exports.ParticleSystemMaterial=function(parameters){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial(parameters)};exports.Vertex=function(x,y,z){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new Vector3(x,
y,z)};exports.DynamicBufferAttribute=function(array,itemSize){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return(new BufferAttribute(array,itemSize)).setDynamic(!0)};exports.Int8Attribute=function(array,itemSize){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");return new Int8BufferAttribute(array,itemSize)};exports.Uint8Attribute=function(array,itemSize){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.");
return new Uint8BufferAttribute(array,itemSize)};exports.Uint8ClampedAttribute=function(array,itemSize){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.");return new Uint8ClampedBufferAttribute(array,itemSize)};exports.Int16Attribute=function(array,itemSize){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.");return new Int16BufferAttribute(array,itemSize)};exports.Uint16Attribute=function(array,
itemSize){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.");return new Uint16BufferAttribute(array,itemSize)};exports.Int32Attribute=function(array,itemSize){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.");return new Int32BufferAttribute(array,itemSize)};exports.Uint32Attribute=function(array,itemSize){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.");
return new Uint32BufferAttribute(array,itemSize)};exports.Float32Attribute=function(array,itemSize){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.");return new Float32BufferAttribute(array,itemSize)};exports.Float64Attribute=function(array,itemSize){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");return new Float64BufferAttribute(array,itemSize)};exports.ClosedSplineCurve3=ClosedSplineCurve3;
exports.SplineCurve3=SplineCurve3;exports.Spline=Spline;exports.AxisHelper=function(size){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");return new AxesHelper(size)};exports.BoundingBoxHelper=function(object,color){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");return new BoxHelper(object,color)};exports.EdgesHelper=function(object,hex){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.");return new LineSegments(new EdgesGeometry(object.geometry),
new LineBasicMaterial({color:void 0!==hex?hex:16777215}))};exports.WireframeHelper=function(object,hex){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.");return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:void 0!==hex?hex:16777215}))};exports.XHRLoader=function(manager){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader.");return new FileLoader(manager)};exports.BinaryTextureLoader=function(manager){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.");
return new DataTextureLoader(manager)};exports.GeometryUtils={merge:function(geometry1,geometry2,materialIndexOffset){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");if(geometry2.isMesh){geometry2.matrixAutoUpdate&&geometry2.updateMatrix();var matrix=geometry2.matrix;geometry2=geometry2.geometry}geometry1.merge(geometry2,matrix,materialIndexOffset)},center:function(geometry){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");
return geometry.center()}};exports.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(vector,camera){console.warn("THREE.Projector: .projectVector() is now vector.project().");vector.project(camera)};this.unprojectVector=function(vector,camera){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");vector.unproject(camera)};this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};
exports.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")};exports.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")};exports.SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")}};
exports.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$three$build$three.js.map
